// Generated by CIRCT firtool-1.44.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// VCS coverage exclude_file
module regfile_combMem(	// @[src/src/core/ID/Registers.scala:19:20]
  input  [4:0]  R0_addr,
  input         R0_en,
                R0_clk,
  input  [4:0]  R1_addr,
  input         R1_en,
                R1_clk,
  input  [4:0]  R2_addr,
  input         R2_en,
                R2_clk,
  input  [4:0]  R3_addr,
  input         R3_en,
                R3_clk,
  input  [4:0]  R4_addr,
  input         R4_en,
                R4_clk,
  input  [4:0]  R5_addr,
  input         R5_en,
                R5_clk,
  input  [4:0]  R6_addr,
  input         R6_en,
                R6_clk,
  input  [4:0]  R7_addr,
  input         R7_en,
                R7_clk,
  input  [4:0]  R8_addr,
  input         R8_en,
                R8_clk,
  input  [4:0]  R9_addr,
  input         R9_en,
                R9_clk,
  input  [4:0]  R10_addr,
  input         R10_en,
                R10_clk,
  input  [4:0]  R11_addr,
  input         R11_en,
                R11_clk,
  input  [4:0]  R12_addr,
  input         R12_en,
                R12_clk,
  input  [4:0]  R13_addr,
  input         R13_en,
                R13_clk,
  input  [4:0]  R14_addr,
  input         R14_en,
                R14_clk,
  input  [4:0]  R15_addr,
  input         R15_en,
                R15_clk,
  input  [4:0]  R16_addr,
  input         R16_en,
                R16_clk,
  input  [4:0]  R17_addr,
  input         R17_en,
                R17_clk,
  input  [4:0]  R18_addr,
  input         R18_en,
                R18_clk,
  input  [4:0]  R19_addr,
  input         R19_en,
                R19_clk,
  input  [4:0]  R20_addr,
  input         R20_en,
                R20_clk,
  input  [4:0]  R21_addr,
  input         R21_en,
                R21_clk,
  input  [4:0]  R22_addr,
  input         R22_en,
                R22_clk,
  input  [4:0]  R23_addr,
  input         R23_en,
                R23_clk,
  input  [4:0]  R24_addr,
  input         R24_en,
                R24_clk,
  input  [4:0]  R25_addr,
  input         R25_en,
                R25_clk,
  input  [4:0]  R26_addr,
  input         R26_en,
                R26_clk,
  input  [4:0]  R27_addr,
  input         R27_en,
                R27_clk,
  input  [4:0]  R28_addr,
  input         R28_en,
                R28_clk,
  input  [4:0]  R29_addr,
  input         R29_en,
                R29_clk,
  input  [4:0]  R30_addr,
  input         R30_en,
                R30_clk,
  input  [4:0]  R31_addr,
  input         R31_en,
                R31_clk,
  input  [4:0]  R32_addr,
  input         R32_en,
                R32_clk,
  input  [4:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [31:0] W0_data,
  output [31:0] R0_data,
                R1_data,
                R2_data,
                R3_data,
                R4_data,
                R5_data,
                R6_data,
                R7_data,
                R8_data,
                R9_data,
                R10_data,
                R11_data,
                R12_data,
                R13_data,
                R14_data,
                R15_data,
                R16_data,
                R17_data,
                R18_data,
                R19_data,
                R20_data,
                R21_data,
                R22_data,
                R23_data,
                R24_data,
                R25_data,
                R26_data,
                R27_data,
                R28_data,
                R29_data,
                R30_data,
                R31_data,
                R32_data
);

  reg [31:0] Memory[0:31];	// @[src/src/core/ID/Registers.scala:19:20]
  always @(posedge W0_clk) begin	// @[src/src/core/ID/Registers.scala:19:20]
    if (W0_en)	// @[src/src/core/ID/Registers.scala:19:20]
      Memory[W0_addr] <= W0_data;	// @[src/src/core/ID/Registers.scala:19:20]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// @[src/src/core/ID/Registers.scala:19:20]
    reg [31:0] _RANDOM_MEM;	// @[src/src/core/ID/Registers.scala:19:20]
    initial begin	// @[src/src/core/ID/Registers.scala:19:20]
      `INIT_RANDOM_PROLOG_	// @[src/src/core/ID/Registers.scala:19:20]
      `ifdef RANDOMIZE_MEM_INIT	// @[src/src/core/ID/Registers.scala:19:20]
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          _RANDOM_MEM = `RANDOM;	// @[src/src/core/ID/Registers.scala:19:20]
          Memory[i[4:0]] = _RANDOM_MEM;	// @[src/src/core/ID/Registers.scala:19:20]
        end	// @[src/src/core/ID/Registers.scala:19:20]
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R1_data = R1_en ? Memory[R1_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R2_data = R2_en ? Memory[R2_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R3_data = R3_en ? Memory[R3_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R4_data = R4_en ? Memory[R4_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R5_data = R5_en ? Memory[R5_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R6_data = R6_en ? Memory[R6_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R7_data = R7_en ? Memory[R7_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R8_data = R8_en ? Memory[R8_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R9_data = R9_en ? Memory[R9_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R10_data = R10_en ? Memory[R10_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R11_data = R11_en ? Memory[R11_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R12_data = R12_en ? Memory[R12_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R13_data = R13_en ? Memory[R13_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R14_data = R14_en ? Memory[R14_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R15_data = R15_en ? Memory[R15_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R16_data = R16_en ? Memory[R16_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R17_data = R17_en ? Memory[R17_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R18_data = R18_en ? Memory[R18_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R19_data = R19_en ? Memory[R19_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R20_data = R20_en ? Memory[R20_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R21_data = R21_en ? Memory[R21_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R22_data = R22_en ? Memory[R22_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R23_data = R23_en ? Memory[R23_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R24_data = R24_en ? Memory[R24_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R25_data = R25_en ? Memory[R25_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R26_data = R26_en ? Memory[R26_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R27_data = R27_en ? Memory[R27_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R28_data = R28_en ? Memory[R28_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R29_data = R29_en ? Memory[R29_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R30_data = R30_en ? Memory[R30_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R31_data = R31_en ? Memory[R31_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
  assign R32_data = R32_en ? Memory[R32_addr] : 32'bx;	// @[src/src/core/ID/Registers.scala:19:20]
endmodule

module PreIF(	// @[<stdin>:3:10]
  input  [31:0] io_instMem_readData,	// @[src/src/core/IF/PreIF.scala:9:14]
  input         io_preif2if_ready,	// @[src/src/core/IF/PreIF.scala:9:14]
  input  [31:0] io_pc,	// @[src/src/core/IF/PreIF.scala:9:14]
  input         io_branch_branchSel,	// @[src/src/core/IF/PreIF.scala:9:14]
  input  [31:0] io_branch_branchTarget,	// @[src/src/core/IF/PreIF.scala:9:14]
  output [31:0] io_instMem_addr,	// @[src/src/core/IF/PreIF.scala:9:14]
  output        io_instMem_readEn,	// @[src/src/core/IF/PreIF.scala:9:14]
  output [31:0] io_preif2if_bits_nextPC,	// @[src/src/core/IF/PreIF.scala:9:14]
                io_preif2if_bits_instData	// @[src/src/core/IF/PreIF.scala:9:14]
);

  wire [31:0] preif2if_nextPC =
    io_branch_branchSel ? io_branch_branchTarget : io_pc + 32'h4;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/IF/PreIF.scala:25:8]
  assign io_instMem_addr = preif2if_nextPC;	// @[<stdin>:3:10, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_instMem_readEn = io_preif2if_ready;	// @[<stdin>:3:10]
  assign io_preif2if_bits_nextPC = preif2if_nextPC;	// @[<stdin>:3:10, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_preif2if_bits_instData = io_instMem_readData;	// @[<stdin>:3:10]
endmodule

module IF(	// @[<stdin>:22:10]
  input         clock,	// @[<stdin>:23:11]
                reset,	// @[<stdin>:24:11]
  input  [31:0] io_preif2if_bits_nextPC,	// @[src/src/core/IF/IF.scala:10:14]
                io_preif2if_bits_instData,	// @[src/src/core/IF/IF.scala:10:14]
  input         io_if2id_ready,	// @[src/src/core/IF/IF.scala:10:14]
                io_branch_branchSel,	// @[src/src/core/IF/IF.scala:10:14]
  output        io_preif2if_ready,	// @[src/src/core/IF/IF.scala:10:14]
                io_if2id_valid,	// @[src/src/core/IF/IF.scala:10:14]
  output [31:0] io_if2id_bits_ifdata_pc,	// @[src/src/core/IF/IF.scala:10:14]
                io_if2id_bits_ifdata_inst,	// @[src/src/core/IF/IF.scala:10:14]
                io_if2global_pc	// @[src/src/core/IF/IF.scala:10:14]
);

  reg         ifValid;	// @[src/src/core/IF/IF.scala:19:26]
  wire        ifAllowin = ~ifValid | io_if2id_ready;	// @[src/src/core/IF/IF.scala:19:26, :21:{19,28}]
  reg  [31:0] pc;	// @[src/src/core/IF/IF.scala:31:19]
  always @(posedge clock) begin	// @[<stdin>:23:11]
    if (reset) begin	// @[<stdin>:23:11]
      ifValid <= 1'h0;	// @[<stdin>:22:10, src/src/core/IF/IF.scala:19:26]
      pc <= 32'h7FFFFFFC;	// @[src/src/core/IF/IF.scala:31:19]
    end
    else begin	// @[<stdin>:23:11]
      ifValid <= ifAllowin | ifValid;	// @[src/src/core/IF/IF.scala:19:26, :21:28, :22:17]
      if (ifAllowin)	// @[src/src/core/IF/IF.scala:21:28]
        pc <= io_preif2if_bits_nextPC;	// @[src/src/core/IF/IF.scala:31:19]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[<stdin>:22:10]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[<stdin>:22:10]
      `FIRRTL_BEFORE_INITIAL	// @[<stdin>:22:10]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:1];	// @[<stdin>:22:10]
    initial begin	// @[<stdin>:22:10]
      `ifdef INIT_RANDOM_PROLOG_	// @[<stdin>:22:10]
        `INIT_RANDOM_PROLOG_	// @[<stdin>:22:10]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[<stdin>:22:10]
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// @[<stdin>:22:10]
        end	// @[<stdin>:22:10]
        ifValid = _RANDOM[1'h0][0];	// @[<stdin>:22:10, src/src/core/IF/IF.scala:19:26]
        pc = {_RANDOM[1'h0][31:1], _RANDOM[1'h1][0]};	// @[<stdin>:22:10, src/src/core/IF/IF.scala:19:26, :31:19]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[<stdin>:22:10]
      `FIRRTL_AFTER_INITIAL	// @[<stdin>:22:10]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_preif2if_ready = ifAllowin;	// @[<stdin>:22:10, src/src/core/IF/IF.scala:21:28]
  assign io_if2id_valid = ifValid & ~io_branch_branchSel;	// @[<stdin>:22:10, src/src/core/IF/IF.scala:19:26, :23:{36,39}]
  assign io_if2id_bits_ifdata_pc = pc;	// @[<stdin>:22:10, src/src/core/IF/IF.scala:31:19]
  assign io_if2id_bits_ifdata_inst = io_preif2if_bits_instData;	// @[<stdin>:22:10]
  assign io_if2global_pc = pc;	// @[<stdin>:22:10, src/src/core/IF/IF.scala:31:19]
endmodule

module Control(	// @[<stdin>:50:10]
  input  [31:0] io_inst,	// @[src/src/core/ID/Control.scala:25:14]
  output [3:0]  io_outControl_instType,	// @[src/src/core/ID/Control.scala:25:14]
  output [1:0]  io_outControl_src1Op,	// @[src/src/core/ID/Control.scala:25:14]
                io_outControl_src2Op,	// @[src/src/core/ID/Control.scala:25:14]
  output [6:0]  io_outControl_aluOp,	// @[src/src/core/ID/Control.scala:25:14]
  output [2:0]  io_outControl_memOp,	// @[src/src/core/ID/Control.scala:25:14]
  output        io_outControl_memReadEn,	// @[src/src/core/ID/Control.scala:25:14]
                io_outControl_memWriteEn,	// @[src/src/core/ID/Control.scala:25:14]
  output [1:0]  io_outControl_wbOp,	// @[src/src/core/ID/Control.scala:25:14]
  output        io_outControl_halt	// @[src/src/core/ID/Control.scala:25:14]
);

  wire [9:0]  _GEN = {io_inst[14:12], io_inst[6:0]};	// @[src/src/core/ID/Control.scala:38:13, :39:29]
  wire        _io_outControl_instType_T_1 = io_inst[6:0] == 7'h13;	// @[src/src/core/ID/Control.scala:30:23, :46:15]
  wire        _io_outControl_instType_T_2 = io_inst[6:0] == 7'h3;	// @[src/main/scala/chisel3/util/Lookup.scala:34:39, src/src/core/ID/Control.scala:30:23, :47:15]
  wire        _io_outControl_instType_T_8 = io_inst[6:0] == 7'h23;	// @[src/src/core/ID/Control.scala:30:23, :47:42]
  wire [16:0] _GEN_0 = {io_inst[31:25], io_inst[14:12], io_inst[6:0]};	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/src/core/ID/Control.scala:38:13, :39:29]
  wire        _io_outControl_instType_T = io_inst[6:0] == 7'h33;	// @[src/src/core/ID/Control.scala:30:23, :114:42]
  assign io_outControl_instType =
    _io_outControl_instType_T
      ? 4'h0
      : _io_outControl_instType_T_1 | _io_outControl_instType_T_2 | io_inst[6:0] == 7'h67
        | io_inst[6:0] == 7'h73
          ? 4'h1
          : _io_outControl_instType_T_8
              ? 4'h2
              : io_inst[6:0] == 7'h63
                  ? 4'h3
                  : io_inst[6:0] == 7'h6F
                      ? 4'h5
                      : {1'h0, io_inst[6:0] == 7'h37 | io_inst[6:0] == 7'h17, 2'h0};	// @[<stdin>:50:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/ID/Control.scala:30:23, :39:{13,29}, :46:15, :47:{15,42}, :114:42, :123:{69,86,96}, :125:15, :126:15, :127:{15,32,42}]
  assign io_outControl_src1Op =
    io_inst[6:0] == 7'h17
      ? 2'h1
      : io_inst[6:0] == 7'h6F | _GEN == 10'h67 ? 2'h2 : {2{io_inst[6:0] == 7'h37}};	// @[<stdin>:50:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/ID/Control.scala:38:13, :39:{13,21,29}, :40:13, :127:{15,42}]
  assign io_outControl_src2Op =
    {2{_io_outControl_instType_T_1 | _io_outControl_instType_T_2
         | _io_outControl_instType_T_8 | io_inst[6:0] == 7'h17}};	// @[<stdin>:50:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/ID/Control.scala:38:13, :46:15, :47:{15,42}, :48:13, :127:42]
  assign io_outControl_aluOp =
    io_inst[6:0] == 7'h37 | _GEN == 10'hF3 | _GEN == 10'h173 | io_inst[6:0] == 7'h6F
    | _GEN == 10'h67
      ? 7'h1
      : io_inst[6:0] == 7'h17 | _GEN == 10'h23 | _GEN == 10'hA3 | _GEN == 10'h123
        | _GEN_0 == 17'h33 | _GEN == 10'h13 | _GEN == 10'h3 | _GEN == 10'h203
        | _GEN == 10'h83 | _GEN == 10'h283 | _GEN == 10'h103
          ? 7'h2
          : _GEN_0 == 17'h8033
              ? 7'hB
              : _GEN_0 == 17'h3B3 | _GEN == 10'h393
                  ? 7'h7
                  : _GEN_0 == 17'h333 | _GEN == 10'h313
                      ? 7'h6
                      : _GEN_0 == 17'h233 | _GEN == 10'h213
                          ? 7'h5
                          : _GEN_0 == 17'h133 | _GEN == 10'h113
                              ? 7'h3
                              : _GEN_0 == 17'h1B3 | _GEN == 10'h193
                                  ? 7'h4
                                  : _GEN_0 == 17'hB3 | _GEN_0 == 17'h93
                                      ? 7'h8
                                      : _GEN_0 == 17'h2B3 | _GEN_0 == 17'h293
                                          ? 7'h9
                                          : _GEN_0 == 17'h82B3 | _GEN_0 == 17'h8293
                                              ? 7'hA
                                              : 7'h0;	// @[<stdin>:50:10, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39, src/src/core/ID/Control.scala:38:13, :39:{13,29}, :127:{15,42}]
  assign io_outControl_memOp =
    _GEN == 10'h3
      ? 3'h1
      : _GEN == 10'h203
          ? 3'h2
          : _GEN == 10'h83
              ? 3'h3
              : _GEN == 10'h283
                  ? 3'h4
                  : _GEN == 10'h103
                      ? 3'h5
                      : _GEN == 10'h23
                          ? 3'h1
                          : _GEN == 10'hA3 ? 3'h3 : _GEN == 10'h123 ? 3'h5 : 3'h0;	// @[<stdin>:50:10, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39, src/src/core/ID/Control.scala:39:29]
  assign io_outControl_memReadEn = _io_outControl_instType_T_2;	// @[<stdin>:50:10, src/src/core/ID/Control.scala:47:15]
  assign io_outControl_memWriteEn = _io_outControl_instType_T_8;	// @[<stdin>:50:10, src/src/core/ID/Control.scala:47:42]
  assign io_outControl_wbOp =
    _io_outControl_instType_T_2
      ? 2'h2
      : {1'h0,
         _io_outControl_instType_T_1 | _io_outControl_instType_T | io_inst[6:0] == 7'h6F
           | _GEN == 10'h67 | io_inst[6:0] == 7'h37 | io_inst[6:0] == 7'h17};	// @[<stdin>:50:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/ID/Control.scala:38:13, :39:{13,29}, :46:15, :47:15, :114:42, :115:{13,29,46,62}, :127:{15,42}]
  assign io_outControl_halt = io_inst == 32'h100073;	// @[<stdin>:50:10, src/src/core/ID/Control.scala:131:30]
endmodule

module Registers(	// @[<stdin>:254:10]
  input         clock,	// @[<stdin>:255:11]
                io_wen,	// @[src/src/core/ID/Registers.scala:7:14]
  input  [4:0]  io_waddr,	// @[src/src/core/ID/Registers.scala:7:14]
  input  [31:0] io_wdata,	// @[src/src/core/ID/Registers.scala:7:14]
  input  [4:0]  io_raddr1,	// @[src/src/core/ID/Registers.scala:7:14]
                io_raddr2,	// @[src/src/core/ID/Registers.scala:7:14]
  output [31:0] io_rdata1,	// @[src/src/core/ID/Registers.scala:7:14]
                io_rdata2,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_1,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_2,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_3,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_4,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_5,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_6,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_7,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_8,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_9,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_10,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_11,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_12,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_13,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_14,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_15,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_16,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_17,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_18,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_19,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_20,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_21,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_22,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_23,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_24,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_25,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_26,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_27,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_28,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_29,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_30,	// @[src/src/core/ID/Registers.scala:7:14]
                io_debug_31	// @[src/src/core/ID/Registers.scala:7:14]
);

  wire [31:0] _regfile_ext_R31_data;	// @[src/src/core/ID/Registers.scala:19:20]
  wire [31:0] _regfile_ext_R32_data;	// @[src/src/core/ID/Registers.scala:19:20]
  regfile_combMem regfile_ext (	// @[src/src/core/ID/Registers.scala:19:20]
    .R0_addr  (5'hA),	// @[src/src/core/ID/Registers.scala:31:27]
    .R0_en    (1'h1),	// @[<stdin>:254:10]
    .R0_clk   (clock),
    .R1_addr  (5'hB),	// @[src/src/core/ID/Registers.scala:31:27]
    .R1_en    (1'h1),	// @[<stdin>:254:10]
    .R1_clk   (clock),
    .R2_addr  (5'hC),	// @[src/src/core/ID/Registers.scala:31:27]
    .R2_en    (1'h1),	// @[<stdin>:254:10]
    .R2_clk   (clock),
    .R3_addr  (5'hD),	// @[src/src/core/ID/Registers.scala:31:27]
    .R3_en    (1'h1),	// @[<stdin>:254:10]
    .R3_clk   (clock),
    .R4_addr  (5'hE),	// @[src/src/core/ID/Registers.scala:31:27]
    .R4_en    (1'h1),	// @[<stdin>:254:10]
    .R4_clk   (clock),
    .R5_addr  (5'hF),	// @[src/src/core/ID/Registers.scala:31:27]
    .R5_en    (1'h1),	// @[<stdin>:254:10]
    .R5_clk   (clock),
    .R6_addr  (5'h10),	// @[src/src/core/ID/Registers.scala:31:27]
    .R6_en    (1'h1),	// @[<stdin>:254:10]
    .R6_clk   (clock),
    .R7_addr  (5'h11),	// @[src/src/core/ID/Registers.scala:31:27]
    .R7_en    (1'h1),	// @[<stdin>:254:10]
    .R7_clk   (clock),
    .R8_addr  (5'h12),	// @[src/src/core/ID/Registers.scala:31:27]
    .R8_en    (1'h1),	// @[<stdin>:254:10]
    .R8_clk   (clock),
    .R9_addr  (5'h13),	// @[src/src/core/ID/Registers.scala:31:27]
    .R9_en    (1'h1),	// @[<stdin>:254:10]
    .R9_clk   (clock),
    .R10_addr (5'h1),	// @[src/src/core/ID/Registers.scala:31:27]
    .R10_en   (1'h1),	// @[<stdin>:254:10]
    .R10_clk  (clock),
    .R11_addr (5'h14),	// @[src/src/core/ID/Registers.scala:31:27]
    .R11_en   (1'h1),	// @[<stdin>:254:10]
    .R11_clk  (clock),
    .R12_addr (5'h15),	// @[src/src/core/ID/Registers.scala:31:27]
    .R12_en   (1'h1),	// @[<stdin>:254:10]
    .R12_clk  (clock),
    .R13_addr (5'h16),	// @[src/src/core/ID/Registers.scala:31:27]
    .R13_en   (1'h1),	// @[<stdin>:254:10]
    .R13_clk  (clock),
    .R14_addr (5'h17),	// @[src/src/core/ID/Registers.scala:31:27]
    .R14_en   (1'h1),	// @[<stdin>:254:10]
    .R14_clk  (clock),
    .R15_addr (5'h18),	// @[src/src/core/ID/Registers.scala:31:27]
    .R15_en   (1'h1),	// @[<stdin>:254:10]
    .R15_clk  (clock),
    .R16_addr (5'h19),	// @[src/src/core/ID/Registers.scala:31:27]
    .R16_en   (1'h1),	// @[<stdin>:254:10]
    .R16_clk  (clock),
    .R17_addr (5'h1A),	// @[src/src/core/ID/Registers.scala:31:27]
    .R17_en   (1'h1),	// @[<stdin>:254:10]
    .R17_clk  (clock),
    .R18_addr (5'h1B),	// @[src/src/core/ID/Registers.scala:31:27]
    .R18_en   (1'h1),	// @[<stdin>:254:10]
    .R18_clk  (clock),
    .R19_addr (5'h1C),	// @[src/src/core/ID/Registers.scala:31:27]
    .R19_en   (1'h1),	// @[<stdin>:254:10]
    .R19_clk  (clock),
    .R20_addr (5'h1D),	// @[src/src/core/ID/Registers.scala:31:27]
    .R20_en   (1'h1),	// @[<stdin>:254:10]
    .R20_clk  (clock),
    .R21_addr (5'h2),	// @[src/src/core/ID/Registers.scala:31:27]
    .R21_en   (1'h1),	// @[<stdin>:254:10]
    .R21_clk  (clock),
    .R22_addr (5'h1E),	// @[src/src/core/ID/Registers.scala:31:27]
    .R22_en   (1'h1),	// @[<stdin>:254:10]
    .R22_clk  (clock),
    .R23_addr (5'h1F),	// @[src/src/core/ID/Registers.scala:31:27]
    .R23_en   (1'h1),	// @[<stdin>:254:10]
    .R23_clk  (clock),
    .R24_addr (5'h3),	// @[src/src/core/ID/Registers.scala:31:27]
    .R24_en   (1'h1),	// @[<stdin>:254:10]
    .R24_clk  (clock),
    .R25_addr (5'h4),	// @[src/src/core/ID/Registers.scala:31:27]
    .R25_en   (1'h1),	// @[<stdin>:254:10]
    .R25_clk  (clock),
    .R26_addr (5'h5),	// @[src/src/core/ID/Registers.scala:31:27]
    .R26_en   (1'h1),	// @[<stdin>:254:10]
    .R26_clk  (clock),
    .R27_addr (5'h6),	// @[src/src/core/ID/Registers.scala:31:27]
    .R27_en   (1'h1),	// @[<stdin>:254:10]
    .R27_clk  (clock),
    .R28_addr (5'h7),	// @[src/src/core/ID/Registers.scala:31:27]
    .R28_en   (1'h1),	// @[<stdin>:254:10]
    .R28_clk  (clock),
    .R29_addr (5'h8),	// @[src/src/core/ID/Registers.scala:31:27]
    .R29_en   (1'h1),	// @[<stdin>:254:10]
    .R29_clk  (clock),
    .R30_addr (5'h9),	// @[src/src/core/ID/Registers.scala:31:27]
    .R30_en   (1'h1),	// @[<stdin>:254:10]
    .R30_clk  (clock),
    .R31_addr (io_raddr1),
    .R31_en   (1'h1),	// @[<stdin>:254:10]
    .R31_clk  (clock),
    .R32_addr (io_raddr2),
    .R32_en   (1'h1),	// @[<stdin>:254:10]
    .R32_clk  (clock),
    .W0_addr  (io_waddr),
    .W0_en    (io_wen),
    .W0_clk   (clock),
    .W0_data  (io_wdata),
    .R0_data  (io_debug_10),
    .R1_data  (io_debug_11),
    .R2_data  (io_debug_12),
    .R3_data  (io_debug_13),
    .R4_data  (io_debug_14),
    .R5_data  (io_debug_15),
    .R6_data  (io_debug_16),
    .R7_data  (io_debug_17),
    .R8_data  (io_debug_18),
    .R9_data  (io_debug_19),
    .R10_data (io_debug_1),
    .R11_data (io_debug_20),
    .R12_data (io_debug_21),
    .R13_data (io_debug_22),
    .R14_data (io_debug_23),
    .R15_data (io_debug_24),
    .R16_data (io_debug_25),
    .R17_data (io_debug_26),
    .R18_data (io_debug_27),
    .R19_data (io_debug_28),
    .R20_data (io_debug_29),
    .R21_data (io_debug_2),
    .R22_data (io_debug_30),
    .R23_data (io_debug_31),
    .R24_data (io_debug_3),
    .R25_data (io_debug_4),
    .R26_data (io_debug_5),
    .R27_data (io_debug_6),
    .R28_data (io_debug_7),
    .R29_data (io_debug_8),
    .R30_data (io_debug_9),
    .R31_data (_regfile_ext_R31_data),
    .R32_data (_regfile_ext_R32_data)
  );
  assign io_rdata1 =
    (|io_raddr1)
      ? (io_raddr1 == io_waddr & io_wen ? io_wdata : _regfile_ext_R31_data)
      : 32'h0;	// @[<stdin>:254:10, src/src/core/ID/Registers.scala:19:20, :26:{19,30,38,50,64}, :29:15]
  assign io_rdata2 =
    (|io_raddr2)
      ? (io_raddr2 == io_waddr & io_wen ? io_wdata : _regfile_ext_R32_data)
      : 32'h0;	// @[<stdin>:254:10, src/src/core/ID/Registers.scala:19:20, :27:{19,30,38,50,64}, :29:15]
endmodule

module Forward(	// @[<stdin>:341:10]
  input         clock,	// @[<stdin>:342:11]
                io_exeForward_enable,	// @[src/src/core/ID/Forward.scala:8:14]
  input  [4:0]  io_exeForward_wAddr,	// @[src/src/core/ID/Forward.scala:8:14]
  input  [31:0] io_exeForward_wData,	// @[src/src/core/ID/Forward.scala:8:14]
  input         io_memForward_enable,	// @[src/src/core/ID/Forward.scala:8:14]
  input  [4:0]  io_memForward_wAddr,	// @[src/src/core/ID/Forward.scala:8:14]
  input  [31:0] io_memForward_wData,	// @[src/src/core/ID/Forward.scala:8:14]
  input         io_writeBack_enable,	// @[src/src/core/ID/Forward.scala:8:14]
  input  [4:0]  io_writeBack_wAddr,	// @[src/src/core/ID/Forward.scala:8:14]
  input  [31:0] io_writeBack_wData,	// @[src/src/core/ID/Forward.scala:8:14]
  input  [4:0]  io_addr1,	// @[src/src/core/ID/Forward.scala:8:14]
                io_addr2,	// @[src/src/core/ID/Forward.scala:8:14]
  output [31:0] io_data1,	// @[src/src/core/ID/Forward.scala:8:14]
                io_data2,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_1,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_2,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_3,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_4,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_5,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_6,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_7,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_8,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_9,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_10,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_11,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_12,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_13,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_14,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_15,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_16,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_17,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_18,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_19,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_20,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_21,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_22,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_23,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_24,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_25,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_26,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_27,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_28,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_29,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_30,	// @[src/src/core/ID/Forward.scala:8:14]
                io_debugRegs_31	// @[src/src/core/ID/Forward.scala:8:14]
);

  wire [31:0] _regs_io_rdata1;	// @[src/src/core/ID/Forward.scala:21:20]
  wire [31:0] _regs_io_rdata2;	// @[src/src/core/ID/Forward.scala:21:20]
  Registers regs (	// @[src/src/core/ID/Forward.scala:21:20]
    .clock       (clock),
    .io_wen      (io_writeBack_enable),
    .io_waddr    (io_writeBack_wAddr),
    .io_wdata    (io_writeBack_wData),
    .io_raddr1   (io_addr1),
    .io_raddr2   (io_addr2),
    .io_rdata1   (_regs_io_rdata1),
    .io_rdata2   (_regs_io_rdata2),
    .io_debug_1  (io_debugRegs_1),
    .io_debug_2  (io_debugRegs_2),
    .io_debug_3  (io_debugRegs_3),
    .io_debug_4  (io_debugRegs_4),
    .io_debug_5  (io_debugRegs_5),
    .io_debug_6  (io_debugRegs_6),
    .io_debug_7  (io_debugRegs_7),
    .io_debug_8  (io_debugRegs_8),
    .io_debug_9  (io_debugRegs_9),
    .io_debug_10 (io_debugRegs_10),
    .io_debug_11 (io_debugRegs_11),
    .io_debug_12 (io_debugRegs_12),
    .io_debug_13 (io_debugRegs_13),
    .io_debug_14 (io_debugRegs_14),
    .io_debug_15 (io_debugRegs_15),
    .io_debug_16 (io_debugRegs_16),
    .io_debug_17 (io_debugRegs_17),
    .io_debug_18 (io_debugRegs_18),
    .io_debug_19 (io_debugRegs_19),
    .io_debug_20 (io_debugRegs_20),
    .io_debug_21 (io_debugRegs_21),
    .io_debug_22 (io_debugRegs_22),
    .io_debug_23 (io_debugRegs_23),
    .io_debug_24 (io_debugRegs_24),
    .io_debug_25 (io_debugRegs_25),
    .io_debug_26 (io_debugRegs_26),
    .io_debug_27 (io_debugRegs_27),
    .io_debug_28 (io_debugRegs_28),
    .io_debug_29 (io_debugRegs_29),
    .io_debug_30 (io_debugRegs_30),
    .io_debug_31 (io_debugRegs_31)
  );
  assign io_data1 =
    io_addr1 == 5'h0
      ? 32'h0
      : io_exeForward_enable & io_exeForward_wAddr == io_addr1
          ? io_exeForward_wData
          : io_memForward_enable & io_memForward_wAddr == io_addr1
              ? io_memForward_wData
              : _regs_io_rdata1;	// @[<stdin>:341:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/ID/Forward.scala:8:14, :21:20, :31:{29,53}, :32:{29,53}, :42:{18,28}]
  assign io_data2 =
    io_addr2 == 5'h0
      ? 32'h0
      : io_exeForward_enable & io_exeForward_wAddr == io_addr2
          ? io_exeForward_wData
          : io_memForward_enable & io_memForward_wAddr == io_addr2
              ? io_memForward_wData
              : _regs_io_rdata2;	// @[<stdin>:341:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/ID/Forward.scala:8:14, :21:20, :38:{29,53}, :39:{29,53}, :42:28, :43:{18,28}]
endmodule

module ImmGen(	// @[<stdin>:374:10]
  input  [31:0] io_inst,	// @[src/src/core/ID/ImmGen.scala:14:14]
  input  [3:0]  io_instType,	// @[src/src/core/ID/ImmGen.scala:14:14]
  output [31:0] io_imm	// @[src/src/core/ID/ImmGen.scala:14:14]
);

  assign io_imm =
    io_instType == 4'h1
      ? {{20{io_inst[31]}}, io_inst[31:20]}
      : io_instType == 4'h2
          ? {{20{io_inst[31]}}, io_inst[31:25], io_inst[11:7]}
          : io_instType == 4'h3
              ? {{20{io_inst[31]}}, io_inst[7], io_inst[30:25], io_inst[11:8], 1'h0}
              : io_instType == 4'h4
                  ? {io_inst[31:12], 12'h0}
                  : io_instType == 4'h5
                      ? {{12{io_inst[31]}},
                         io_inst[19:12],
                         io_inst[20],
                         io_inst[30:21],
                         1'h0}
                      : 32'h0;	// @[<stdin>:374:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/ID/ImmGen.scala:16:21, :19:14, :20:14, :23:17, :25:14, :26:14, :27:14, :28:14, :32:17, :34:14, :35:11, :41:14, :42:14, :43:14, :51:{20,46,51,60}, :52:{20,46,51,60}, :53:{20,46}, :54:20, :55:{20,46}]
endmodule

module Branch(	// @[<stdin>:430:10]
  input  [31:0] io_inst,	// @[src/src/core/ID/Branch.scala:8:14]
                io_regData1,	// @[src/src/core/ID/Branch.scala:8:14]
                io_regData2,	// @[src/src/core/ID/Branch.scala:8:14]
                io_imm,	// @[src/src/core/ID/Branch.scala:8:14]
                io_pc,	// @[src/src/core/ID/Branch.scala:8:14]
  output        io_nextPCsel,	// @[src/src/core/ID/Branch.scala:8:14]
  output [31:0] io_nextPC	// @[src/src/core/ID/Branch.scala:8:14]
);

  wire [31:0] _nextPC_T_1 = io_pc + 32'h4;	// @[src/src/core/ID/Branch.scala:27:8]
  wire [31:0] _nextPC_T_3 = io_pc + io_imm;	// @[src/src/core/ID/Branch.scala:30:25]
  wire [9:0]  _GEN = {io_inst[14:12], io_inst[6:0]};	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire [31:0] nextPC =
    io_inst[6:0] == 7'h6F
      ? _nextPC_T_3
      : _GEN == 10'h67
          ? io_regData1 + io_imm
          : (_GEN == 10'h63
               ? io_regData1 == io_regData2
               : _GEN == 10'hE3
                   ? io_regData1 != io_regData2
                   : _GEN == 10'h263
                       ? $signed(io_regData1) < $signed(io_regData2)
                       : _GEN == 10'h2E3
                           ? $signed(io_regData1) >= $signed(io_regData2)
                           : _GEN == 10'h363
                               ? io_regData1 < io_regData2
                               : _GEN == 10'h3E3 & io_regData1 >= io_regData2)
              ? _nextPC_T_3
              : _nextPC_T_1;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39, src/src/core/ID/Branch.scala:27:8, :30:25, :31:28, :33:17, :34:21, :38:17, :39:21, :43:17, :44:21, :48:17, :49:21, :53:18, :54:21, :59:21]
  assign io_nextPCsel = nextPC != _nextPC_T_1;	// @[<stdin>:430:10, src/main/scala/chisel3/util/Lookup.scala:34:39, src/src/core/ID/Branch.scala:27:8, :68:28]
  assign io_nextPC = nextPC;	// @[<stdin>:430:10, src/main/scala/chisel3/util/Lookup.scala:34:39]
endmodule

module ID(	// @[<stdin>:512:10]
  input         clock,	// @[<stdin>:513:11]
                reset,	// @[<stdin>:514:11]
                io_if2id_valid,	// @[src/src/core/ID/ID.scala:10:14]
  input  [31:0] io_if2id_bits_ifdata_pc,	// @[src/src/core/ID/ID.scala:10:14]
                io_if2id_bits_ifdata_inst,	// @[src/src/core/ID/ID.scala:10:14]
  input         io_exeForward_enable,	// @[src/src/core/ID/ID.scala:10:14]
  input  [4:0]  io_exeForward_wAddr,	// @[src/src/core/ID/ID.scala:10:14]
  input  [31:0] io_exeForward_wData,	// @[src/src/core/ID/ID.scala:10:14]
  input         io_memForward_enable,	// @[src/src/core/ID/ID.scala:10:14]
  input  [4:0]  io_memForward_wAddr,	// @[src/src/core/ID/ID.scala:10:14]
  input  [31:0] io_memForward_wData,	// @[src/src/core/ID/ID.scala:10:14]
  input         io_writeBack_enable,	// @[src/src/core/ID/ID.scala:10:14]
  input  [4:0]  io_writeBack_wAddr,	// @[src/src/core/ID/ID.scala:10:14]
  input  [31:0] io_writeBack_wData,	// @[src/src/core/ID/ID.scala:10:14]
  input         io_exeMemReadEnable,	// @[src/src/core/ID/ID.scala:10:14]
  output        io_if2id_ready,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2exe_valid,	// @[src/src/core/ID/ID.scala:10:14]
  output [31:0] io_id2exe_bits_ifdata_pc,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2exe_bits_ifdata_inst,	// @[src/src/core/ID/ID.scala:10:14]
  output [1:0]  io_id2exe_bits_iddata_control_src1Op,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2exe_bits_iddata_control_src2Op,	// @[src/src/core/ID/ID.scala:10:14]
  output [6:0]  io_id2exe_bits_iddata_control_aluOp,	// @[src/src/core/ID/ID.scala:10:14]
  output [2:0]  io_id2exe_bits_iddata_control_memOp,	// @[src/src/core/ID/ID.scala:10:14]
  output        io_id2exe_bits_iddata_control_memReadEn,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2exe_bits_iddata_control_memWriteEn,	// @[src/src/core/ID/ID.scala:10:14]
  output [1:0]  io_id2exe_bits_iddata_control_wbOp,	// @[src/src/core/ID/ID.scala:10:14]
  output        io_id2exe_bits_iddata_control_halt,	// @[src/src/core/ID/ID.scala:10:14]
  output [31:0] io_id2exe_bits_iddata_reg1,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2exe_bits_iddata_reg2,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2exe_bits_iddata_imm,	// @[src/src/core/ID/ID.scala:10:14]
  output        io_id2global_branch_branchSel,	// @[src/src/core/ID/ID.scala:10:14]
  output [31:0] io_id2global_branch_branchTarget,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_1,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_2,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_3,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_4,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_5,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_6,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_7,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_8,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_9,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_10,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_11,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_12,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_13,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_14,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_15,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_16,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_17,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_18,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_19,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_20,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_21,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_22,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_23,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_24,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_25,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_26,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_27,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_28,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_29,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_30,	// @[src/src/core/ID/ID.scala:10:14]
                io_id2global_debugRegs_31	// @[src/src/core/ID/ID.scala:10:14]
);

  wire [31:0] _immGen_io_imm;	// @[src/src/core/ID/ID.scala:59:22]
  wire [31:0] _forward_io_data1;	// @[src/src/core/ID/ID.scala:50:23]
  wire [31:0] _forward_io_data2;	// @[src/src/core/ID/ID.scala:50:23]
  wire [3:0]  _control_io_outControl_instType;	// @[src/src/core/ID/ID.scala:46:23]
  reg         idValid;	// @[src/src/core/ID/ID.scala:24:27]
  wire        idAllowin = ~idValid | ~io_exeMemReadEnable;	// @[src/src/core/ID/ID.scala:23:20, :24:27, :26:{20,29}]
  reg  [31:0] if2id_ifdata_pc;	// @[src/src/core/ID/ID.scala:34:22]
  reg  [31:0] if2id_ifdata_inst;	// @[src/src/core/ID/ID.scala:34:22]
  always @(posedge clock) begin	// @[<stdin>:513:11]
    if (reset) begin	// @[<stdin>:513:11]
      idValid <= 1'h0;	// @[src/src/core/ID/ID.scala:23:20, :24:27]
      if2id_ifdata_pc <= 32'h0;	// @[src/src/core/ID/ID.scala:10:14, :34:22, :50:23]
      if2id_ifdata_inst <= 32'h0;	// @[src/src/core/ID/ID.scala:10:14, :34:22, :50:23]
    end
    else begin	// @[<stdin>:513:11]
      if (idAllowin)	// @[src/src/core/ID/ID.scala:26:29]
        idValid <= io_if2id_valid;	// @[src/src/core/ID/ID.scala:24:27]
      if (io_if2id_valid & idAllowin) begin	// @[src/src/core/ID/ID.scala:26:29, :38:23]
        if2id_ifdata_pc <= io_if2id_bits_ifdata_pc;	// @[src/src/core/ID/ID.scala:34:22]
        if2id_ifdata_inst <= io_if2id_bits_ifdata_inst;	// @[src/src/core/ID/ID.scala:34:22]
      end
      else if (~io_if2id_valid & idAllowin) begin	// @[src/src/core/ID/ID.scala:26:29, :39:{8,24}]
        if2id_ifdata_pc <= 32'h0;	// @[src/src/core/ID/ID.scala:10:14, :34:22, :50:23]
        if2id_ifdata_inst <= 32'h0;	// @[src/src/core/ID/ID.scala:10:14, :34:22, :50:23]
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[<stdin>:512:10]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[<stdin>:512:10]
      `FIRRTL_BEFORE_INITIAL	// @[<stdin>:512:10]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:2];	// @[<stdin>:512:10]
    initial begin	// @[<stdin>:512:10]
      `ifdef INIT_RANDOM_PROLOG_	// @[<stdin>:512:10]
        `INIT_RANDOM_PROLOG_	// @[<stdin>:512:10]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[<stdin>:512:10]
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// @[<stdin>:512:10]
        end	// @[<stdin>:512:10]
        idValid = _RANDOM[2'h0][0];	// @[<stdin>:512:10, src/src/core/ID/ID.scala:24:27]
        if2id_ifdata_pc = {_RANDOM[2'h0][31:1], _RANDOM[2'h1][0]};	// @[<stdin>:512:10, src/src/core/ID/ID.scala:24:27, :34:22]
        if2id_ifdata_inst = {_RANDOM[2'h1][31:1], _RANDOM[2'h2][0]};	// @[<stdin>:512:10, src/src/core/ID/ID.scala:34:22]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[<stdin>:512:10]
      `FIRRTL_AFTER_INITIAL	// @[<stdin>:512:10]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Control control (	// @[src/src/core/ID/ID.scala:46:23]
    .io_inst                  (if2id_ifdata_inst),	// @[src/src/core/ID/ID.scala:34:22]
    .io_outControl_instType   (_control_io_outControl_instType),
    .io_outControl_src1Op     (io_id2exe_bits_iddata_control_src1Op),
    .io_outControl_src2Op     (io_id2exe_bits_iddata_control_src2Op),
    .io_outControl_aluOp      (io_id2exe_bits_iddata_control_aluOp),
    .io_outControl_memOp      (io_id2exe_bits_iddata_control_memOp),
    .io_outControl_memReadEn  (io_id2exe_bits_iddata_control_memReadEn),
    .io_outControl_memWriteEn (io_id2exe_bits_iddata_control_memWriteEn),
    .io_outControl_wbOp       (io_id2exe_bits_iddata_control_wbOp),
    .io_outControl_halt       (io_id2exe_bits_iddata_control_halt)
  );
  Forward forward (	// @[src/src/core/ID/ID.scala:50:23]
    .clock                (clock),
    .io_exeForward_enable (io_exeForward_enable),
    .io_exeForward_wAddr  (io_exeForward_wAddr),
    .io_exeForward_wData  (io_exeForward_wData),
    .io_memForward_enable (io_memForward_enable),
    .io_memForward_wAddr  (io_memForward_wAddr),
    .io_memForward_wData  (io_memForward_wData),
    .io_writeBack_enable  (io_writeBack_enable),
    .io_writeBack_wAddr   (io_writeBack_wAddr),
    .io_writeBack_wData   (io_writeBack_wData),
    .io_addr1             (if2id_ifdata_inst[19:15]),	// @[src/src/core/ID/ID.scala:34:22, :51:32]
    .io_addr2             (if2id_ifdata_inst[24:20]),	// @[src/src/core/ID/ID.scala:34:22, :52:32]
    .io_data1             (_forward_io_data1),
    .io_data2             (_forward_io_data2),
    .io_debugRegs_1       (io_id2global_debugRegs_1),
    .io_debugRegs_2       (io_id2global_debugRegs_2),
    .io_debugRegs_3       (io_id2global_debugRegs_3),
    .io_debugRegs_4       (io_id2global_debugRegs_4),
    .io_debugRegs_5       (io_id2global_debugRegs_5),
    .io_debugRegs_6       (io_id2global_debugRegs_6),
    .io_debugRegs_7       (io_id2global_debugRegs_7),
    .io_debugRegs_8       (io_id2global_debugRegs_8),
    .io_debugRegs_9       (io_id2global_debugRegs_9),
    .io_debugRegs_10      (io_id2global_debugRegs_10),
    .io_debugRegs_11      (io_id2global_debugRegs_11),
    .io_debugRegs_12      (io_id2global_debugRegs_12),
    .io_debugRegs_13      (io_id2global_debugRegs_13),
    .io_debugRegs_14      (io_id2global_debugRegs_14),
    .io_debugRegs_15      (io_id2global_debugRegs_15),
    .io_debugRegs_16      (io_id2global_debugRegs_16),
    .io_debugRegs_17      (io_id2global_debugRegs_17),
    .io_debugRegs_18      (io_id2global_debugRegs_18),
    .io_debugRegs_19      (io_id2global_debugRegs_19),
    .io_debugRegs_20      (io_id2global_debugRegs_20),
    .io_debugRegs_21      (io_id2global_debugRegs_21),
    .io_debugRegs_22      (io_id2global_debugRegs_22),
    .io_debugRegs_23      (io_id2global_debugRegs_23),
    .io_debugRegs_24      (io_id2global_debugRegs_24),
    .io_debugRegs_25      (io_id2global_debugRegs_25),
    .io_debugRegs_26      (io_id2global_debugRegs_26),
    .io_debugRegs_27      (io_id2global_debugRegs_27),
    .io_debugRegs_28      (io_id2global_debugRegs_28),
    .io_debugRegs_29      (io_id2global_debugRegs_29),
    .io_debugRegs_30      (io_id2global_debugRegs_30),
    .io_debugRegs_31      (io_id2global_debugRegs_31)
  );
  ImmGen immGen (	// @[src/src/core/ID/ID.scala:59:22]
    .io_inst     (if2id_ifdata_inst),	// @[src/src/core/ID/ID.scala:34:22]
    .io_instType (_control_io_outControl_instType),	// @[src/src/core/ID/ID.scala:46:23]
    .io_imm      (_immGen_io_imm)
  );
  Branch branch (	// @[src/src/core/ID/ID.scala:64:22]
    .io_inst      (if2id_ifdata_inst),	// @[src/src/core/ID/ID.scala:34:22]
    .io_regData1  (_forward_io_data1),	// @[src/src/core/ID/ID.scala:50:23]
    .io_regData2  (_forward_io_data2),	// @[src/src/core/ID/ID.scala:50:23]
    .io_imm       (_immGen_io_imm),	// @[src/src/core/ID/ID.scala:59:22]
    .io_pc        (if2id_ifdata_pc),	// @[src/src/core/ID/ID.scala:34:22]
    .io_nextPCsel (io_id2global_branch_branchSel),
    .io_nextPC    (io_id2global_branch_branchTarget)
  );
  assign io_if2id_ready = idAllowin;	// @[<stdin>:512:10, src/src/core/ID/ID.scala:26:29]
  assign io_id2exe_valid = idValid & ~io_exeMemReadEnable;	// @[<stdin>:512:10, src/src/core/ID/ID.scala:23:20, :24:27, :28:26]
  assign io_id2exe_bits_ifdata_pc = if2id_ifdata_pc;	// @[<stdin>:512:10, src/src/core/ID/ID.scala:34:22]
  assign io_id2exe_bits_ifdata_inst = if2id_ifdata_inst;	// @[<stdin>:512:10, src/src/core/ID/ID.scala:34:22]
  assign io_id2exe_bits_iddata_reg1 = _forward_io_data1;	// @[<stdin>:512:10, src/src/core/ID/ID.scala:50:23]
  assign io_id2exe_bits_iddata_reg2 = _forward_io_data2;	// @[<stdin>:512:10, src/src/core/ID/ID.scala:50:23]
  assign io_id2exe_bits_iddata_imm = _immGen_io_imm;	// @[<stdin>:512:10, src/src/core/ID/ID.scala:59:22]
endmodule

module ALU(	// @[<stdin>:588:10]
  input  [6:0]  io_aluOp,	// @[src/src/core/EXE/ALU.scala:15:14]
  input  [31:0] io_src1,	// @[src/src/core/EXE/ALU.scala:15:14]
                io_src2,	// @[src/src/core/EXE/ALU.scala:15:14]
  output [31:0] io_out	// @[src/src/core/EXE/ALU.scala:15:14]
);

  wire [62:0] _io_out_T_21 = {31'h0, io_src1} << io_src2[4:0];	// @[src/src/core/EXE/ALU.scala:28:{55,65}]
  wire [31:0] _GEN = {27'h0, io_src2[4:0]};	// @[src/src/core/EXE/ALU.scala:28:65, :29:55]
  assign io_out =
    io_aluOp == 7'h0
      ? 32'h0
      : io_aluOp == 7'h1
          ? io_src1
          : io_aluOp == 7'h2
              ? io_src1 + io_src2
              : io_aluOp == 7'h3
                  ? {31'h0, $signed(io_src1) < $signed(io_src2)}
                  : io_aluOp == 7'h4
                      ? {31'h0, io_src1 < io_src2}
                      : io_aluOp == 7'h5
                          ? io_src1 ^ io_src2
                          : io_aluOp == 7'h6
                              ? io_src1 | io_src2
                              : io_aluOp == 7'h7
                                  ? io_src1 & io_src2
                                  : io_aluOp == 7'h8
                                      ? _io_out_T_21[31:0]
                                      : io_aluOp == 7'h9
                                          ? io_src1 >> _GEN
                                          : io_aluOp == 7'hA
                                              ? $signed($signed(io_src1) >>> _GEN)
                                              : io_aluOp == 7'hB
                                                  ? io_src1 - io_src2
                                                  : 32'h0;	// @[<stdin>:588:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/ALU.scala:20:17, :21:17, :22:{17,48}, :23:{17,42,58}, :24:{17,59}, :25:{17,48}, :26:{17,47}, :27:{17,48}, :28:{17,55}, :29:{17,55}, :30:{17,55}, :31:{17,48}]
endmodule

module DataMemWriteWrap(	// @[<stdin>:640:10]
  input  [31:0] io_dataMem_readData,	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
  input  [2:0]  io_control_memOp,	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
  input         io_control_memReadEn,	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
                io_control_memWriteEn,	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
  input  [31:0] io_addr,	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
                io_writeData,	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
  output [31:0] io_dataMem_addr,	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
  output        io_dataMem_writeEn,	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
  output [31:0] io_dataMem_writeData,	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
  output        io_dataMem_readEn,	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
  output [3:0]  io_dataMem_mark,	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
  output [31:0] io_rawReadData	// @[src/src/core/MEM/DataMemWrap.scala:11:14]
);

  wire       _io_dataMem_writeData_T = io_control_memOp == 3'h1;	// @[src/src/core/MEM/DataMemWrap.scala:32:22]
  wire       _io_dataMem_writeData_T_1 = io_control_memOp == 3'h2;	// @[src/src/core/MEM/DataMemWrap.scala:32:49]
  wire       _io_dataMem_writeData_T_6 = io_control_memOp == 3'h3;	// @[src/src/core/MEM/DataMemWrap.scala:36:22]
  wire       _io_dataMem_writeData_T_7 = io_control_memOp == 3'h4;	// @[src/src/core/MEM/DataMemWrap.scala:36:49]
  wire [4:0] _mark_T_9 = 5'h3 << io_addr[1:0];	// @[src/src/core/MEM/DataMemWrap.scala:32:82, :36:75]
  wire       _io_dataMem_writeData_T_11 = io_control_memOp == 3'h5;	// @[src/src/core/MEM/DataMemWrap.scala:40:22]
  assign io_dataMem_addr = io_addr;	// @[<stdin>:640:10]
  assign io_dataMem_writeEn = io_control_memWriteEn;	// @[<stdin>:640:10]
  assign io_dataMem_writeData =
    _io_dataMem_writeData_T | _io_dataMem_writeData_T_1
      ? {2{{2{io_writeData[7:0]}}}}
      : _io_dataMem_writeData_T_6 | _io_dataMem_writeData_T_7
          ? {2{io_writeData[15:0]}}
          : _io_dataMem_writeData_T_11 ? io_writeData : 32'h0;	// @[<stdin>:640:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/MEM/DataMemWrap.scala:32:{22,49}, :36:{22,49}, :40:22, :47:{32,69,82}, :48:{32,69,82}]
  assign io_dataMem_readEn = io_control_memReadEn;	// @[<stdin>:640:10]
  assign io_dataMem_mark =
    _io_dataMem_writeData_T | _io_dataMem_writeData_T_1
      ? 4'h1 << io_addr[1:0]
      : _io_dataMem_writeData_T_6 | _io_dataMem_writeData_T_7
          ? _mark_T_9[3:0]
          : {4{_io_dataMem_writeData_T_11}};	// @[<stdin>:640:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/MEM/DataMemWrap.scala:32:{22,32,49,75,82}, :36:{22,32,49,75}, :40:22]
  assign io_rawReadData = io_dataMem_readData;	// @[<stdin>:640:10]
endmodule

module EXE(	// @[<stdin>:681:10]
  input         clock,	// @[<stdin>:682:11]
                reset,	// @[<stdin>:683:11]
  input  [31:0] io_dataMem_readData,	// @[src/src/core/EXE/EXE.scala:12:14]
  input         io_id2exe_valid,	// @[src/src/core/EXE/EXE.scala:12:14]
  input  [31:0] io_id2exe_bits_ifdata_pc,	// @[src/src/core/EXE/EXE.scala:12:14]
                io_id2exe_bits_ifdata_inst,	// @[src/src/core/EXE/EXE.scala:12:14]
  input  [1:0]  io_id2exe_bits_iddata_control_src1Op,	// @[src/src/core/EXE/EXE.scala:12:14]
                io_id2exe_bits_iddata_control_src2Op,	// @[src/src/core/EXE/EXE.scala:12:14]
  input  [6:0]  io_id2exe_bits_iddata_control_aluOp,	// @[src/src/core/EXE/EXE.scala:12:14]
  input  [2:0]  io_id2exe_bits_iddata_control_memOp,	// @[src/src/core/EXE/EXE.scala:12:14]
  input         io_id2exe_bits_iddata_control_memReadEn,	// @[src/src/core/EXE/EXE.scala:12:14]
                io_id2exe_bits_iddata_control_memWriteEn,	// @[src/src/core/EXE/EXE.scala:12:14]
  input  [1:0]  io_id2exe_bits_iddata_control_wbOp,	// @[src/src/core/EXE/EXE.scala:12:14]
  input         io_id2exe_bits_iddata_control_halt,	// @[src/src/core/EXE/EXE.scala:12:14]
  input  [31:0] io_id2exe_bits_iddata_reg1,	// @[src/src/core/EXE/EXE.scala:12:14]
                io_id2exe_bits_iddata_reg2,	// @[src/src/core/EXE/EXE.scala:12:14]
                io_id2exe_bits_iddata_imm,	// @[src/src/core/EXE/EXE.scala:12:14]
  output [31:0] io_dataMem_addr,	// @[src/src/core/EXE/EXE.scala:12:14]
  output        io_dataMem_writeEn,	// @[src/src/core/EXE/EXE.scala:12:14]
  output [31:0] io_dataMem_writeData,	// @[src/src/core/EXE/EXE.scala:12:14]
  output        io_dataMem_readEn,	// @[src/src/core/EXE/EXE.scala:12:14]
  output [3:0]  io_dataMem_mark,	// @[src/src/core/EXE/EXE.scala:12:14]
  output        io_exe2mem_valid,	// @[src/src/core/EXE/EXE.scala:12:14]
  output [31:0] io_exe2mem_bits_ifdata_pc,	// @[src/src/core/EXE/EXE.scala:12:14]
                io_exe2mem_bits_ifdata_inst,	// @[src/src/core/EXE/EXE.scala:12:14]
  output [2:0]  io_exe2mem_bits_iddata_control_memOp,	// @[src/src/core/EXE/EXE.scala:12:14]
  output [1:0]  io_exe2mem_bits_iddata_control_wbOp,	// @[src/src/core/EXE/EXE.scala:12:14]
  output        io_exe2mem_bits_iddata_control_halt,	// @[src/src/core/EXE/EXE.scala:12:14]
  output [31:0] io_exe2mem_bits_exedata_aluResult,	// @[src/src/core/EXE/EXE.scala:12:14]
                io_exe2global_globalmem_memData,	// @[src/src/core/EXE/EXE.scala:12:14]
  output        io_exe2global_forward_enable,	// @[src/src/core/EXE/EXE.scala:12:14]
  output [4:0]  io_exe2global_forward_wAddr,	// @[src/src/core/EXE/EXE.scala:12:14]
  output [31:0] io_exe2global_forward_wData,	// @[src/src/core/EXE/EXE.scala:12:14]
  output        io_exe2global_exeMemReadEnable	// @[src/src/core/EXE/EXE.scala:12:14]
);

  wire [31:0] _alu_io_out;	// @[src/src/core/EXE/EXE.scala:46:19]
  reg  [31:0] casez_tmp;	// @[src/main/scala/chisel3/util/Mux.scala:141:16]
  reg  [31:0] casez_tmp_0;	// @[src/main/scala/chisel3/util/Mux.scala:141:16]
  reg         wbValid;	// @[src/src/core/EXE/EXE.scala:20:27]
  reg  [31:0] id2exe_ifdata_pc;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg  [31:0] id2exe_ifdata_inst;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg  [1:0]  id2exe_iddata_control_src1Op;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg  [1:0]  id2exe_iddata_control_src2Op;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg  [6:0]  id2exe_iddata_control_aluOp;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg  [2:0]  id2exe_iddata_control_memOp;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg         id2exe_iddata_control_memReadEn;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg         id2exe_iddata_control_memWriteEn;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg  [1:0]  id2exe_iddata_control_wbOp;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg         id2exe_iddata_control_halt;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg  [31:0] id2exe_iddata_reg1;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg  [31:0] id2exe_iddata_reg2;	// @[src/src/core/EXE/EXE.scala:30:23]
  reg  [31:0] id2exe_iddata_imm;	// @[src/src/core/EXE/EXE.scala:30:23]
  wire [31:0] _alu_io_src1_T_3 = id2exe_ifdata_pc + 32'h4;	// @[src/src/core/EXE/EXE.scala:30:23, :52:53]
  always_comb begin	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:51:23, :52:23, :53:23]
    casez (id2exe_iddata_control_src1Op)	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23, :51:23, :52:23, :53:23]
      2'b00:
        casez_tmp = id2exe_iddata_reg1;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23, :51:23, :52:23, :53:23]
      2'b01:
        casez_tmp = id2exe_ifdata_pc;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23, :51:23, :52:23, :53:23]
      2'b10:
        casez_tmp = _alu_io_src1_T_3;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:51:23, :52:{23,53}, :53:23]
      default:
        casez_tmp = id2exe_iddata_imm;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23, :51:23, :52:23, :53:23]
    endcase	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23, :51:23, :52:23, :53:23]
  end // always_comb
  always_comb begin	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:59:23, :60:23, :61:23]
    casez (id2exe_iddata_control_src2Op)	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23, :59:23, :60:23, :61:23]
      2'b00:
        casez_tmp_0 = id2exe_iddata_reg2;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23, :59:23, :60:23, :61:23]
      2'b01:
        casez_tmp_0 = id2exe_ifdata_pc;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23, :59:23, :60:23, :61:23]
      2'b10:
        casez_tmp_0 = _alu_io_src1_T_3;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:52:53, :59:23, :60:23, :61:23]
      default:
        casez_tmp_0 = id2exe_iddata_imm;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23, :59:23, :60:23, :61:23]
    endcase	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23, :59:23, :60:23, :61:23]
  end // always_comb
  always @(posedge clock) begin	// @[<stdin>:682:11]
    if (reset) begin	// @[<stdin>:682:11]
      wbValid <= 1'h0;	// @[src/src/core/EXE/EXE.scala:20:27]
      id2exe_ifdata_pc <= 32'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
      id2exe_ifdata_inst <= 32'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
      id2exe_iddata_control_src1Op <= 2'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
      id2exe_iddata_control_src2Op <= 2'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
      id2exe_iddata_control_aluOp <= 7'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
      id2exe_iddata_control_memOp <= 3'h0;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
      id2exe_iddata_control_memReadEn <= 1'h0;	// @[src/src/core/EXE/EXE.scala:20:27, :30:23]
      id2exe_iddata_control_memWriteEn <= 1'h0;	// @[src/src/core/EXE/EXE.scala:20:27, :30:23]
      id2exe_iddata_control_wbOp <= 2'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
      id2exe_iddata_control_halt <= 1'h0;	// @[src/src/core/EXE/EXE.scala:20:27, :30:23]
      id2exe_iddata_reg1 <= 32'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
      id2exe_iddata_reg2 <= 32'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
      id2exe_iddata_imm <= 32'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
    end
    else begin	// @[<stdin>:682:11]
      wbValid <= io_id2exe_valid;	// @[src/src/core/EXE/EXE.scala:20:27]
      if (io_id2exe_valid) begin	// @[src/src/core/EXE/EXE.scala:12:14]
        id2exe_ifdata_pc <= io_id2exe_bits_ifdata_pc;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_ifdata_inst <= io_id2exe_bits_ifdata_inst;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_src1Op <= io_id2exe_bits_iddata_control_src1Op;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_src2Op <= io_id2exe_bits_iddata_control_src2Op;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_aluOp <= io_id2exe_bits_iddata_control_aluOp;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_memOp <= io_id2exe_bits_iddata_control_memOp;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_memReadEn <= io_id2exe_bits_iddata_control_memReadEn;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_memWriteEn <= io_id2exe_bits_iddata_control_memWriteEn;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_wbOp <= io_id2exe_bits_iddata_control_wbOp;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_halt <= io_id2exe_bits_iddata_control_halt;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_reg1 <= io_id2exe_bits_iddata_reg1;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_reg2 <= io_id2exe_bits_iddata_reg2;	// @[src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_imm <= io_id2exe_bits_iddata_imm;	// @[src/src/core/EXE/EXE.scala:30:23]
      end
      else begin	// @[src/src/core/EXE/EXE.scala:12:14]
        id2exe_ifdata_pc <= 32'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
        id2exe_ifdata_inst <= 32'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
        id2exe_iddata_control_src1Op <= 2'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
        id2exe_iddata_control_src2Op <= 2'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
        id2exe_iddata_control_aluOp <= 7'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
        id2exe_iddata_control_memOp <= 3'h0;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_memReadEn <=
          io_id2exe_valid & id2exe_iddata_control_memReadEn;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_memWriteEn <=
          io_id2exe_valid & id2exe_iddata_control_memWriteEn;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_wbOp <= 2'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
        id2exe_iddata_control_halt <= io_id2exe_valid & id2exe_iddata_control_halt;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_reg1 <= 32'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
        id2exe_iddata_reg2 <= 32'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
        id2exe_iddata_imm <= 32'h0;	// @[src/src/core/EXE/EXE.scala:30:{23,36}]
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[<stdin>:681:10]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[<stdin>:681:10]
      `FIRRTL_BEFORE_INITIAL	// @[<stdin>:681:10]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:5];	// @[<stdin>:681:10]
    initial begin	// @[<stdin>:681:10]
      `ifdef INIT_RANDOM_PROLOG_	// @[<stdin>:681:10]
        `INIT_RANDOM_PROLOG_	// @[<stdin>:681:10]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[<stdin>:681:10]
        for (logic [2:0] i = 3'h0; i < 3'h6; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// @[<stdin>:681:10]
        end	// @[<stdin>:681:10]
        wbValid = _RANDOM[3'h0][0];	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:20:27]
        id2exe_ifdata_pc = {_RANDOM[3'h0][31:1], _RANDOM[3'h1][0]};	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:20:27, :30:23]
        id2exe_ifdata_inst = {_RANDOM[3'h1][31:1], _RANDOM[3'h2][0]};	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_src1Op = _RANDOM[3'h2][6:5];	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_src2Op = _RANDOM[3'h2][8:7];	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_aluOp = _RANDOM[3'h2][15:9];	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_memOp = _RANDOM[3'h2][18:16];	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_memReadEn = _RANDOM[3'h2][19];	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_memWriteEn = _RANDOM[3'h2][20];	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_wbOp = _RANDOM[3'h2][22:21];	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_control_halt = _RANDOM[3'h2][23];	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_reg1 = {_RANDOM[3'h2][31:24], _RANDOM[3'h3][23:0]};	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_reg2 = {_RANDOM[3'h3][31:24], _RANDOM[3'h4][23:0]};	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
        id2exe_iddata_imm = {_RANDOM[3'h4][31:24], _RANDOM[3'h5][23:0]};	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[<stdin>:681:10]
      `FIRRTL_AFTER_INITIAL	// @[<stdin>:681:10]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ALU alu (	// @[src/src/core/EXE/EXE.scala:46:19]
    .io_aluOp (id2exe_iddata_control_aluOp),	// @[src/src/core/EXE/EXE.scala:30:23]
    .io_src1  (casez_tmp),	// @[src/main/scala/chisel3/util/Mux.scala:141:16]
    .io_src2  (casez_tmp_0),	// @[src/main/scala/chisel3/util/Mux.scala:141:16]
    .io_out   (_alu_io_out)
  );
  DataMemWriteWrap writeMemWrap (	// @[src/src/core/EXE/EXE.scala:67:28]
    .io_dataMem_readData   (io_dataMem_readData),
    .io_control_memOp      (id2exe_iddata_control_memOp),	// @[src/src/core/EXE/EXE.scala:30:23]
    .io_control_memReadEn  (id2exe_iddata_control_memReadEn),	// @[src/src/core/EXE/EXE.scala:30:23]
    .io_control_memWriteEn (id2exe_iddata_control_memWriteEn),	// @[src/src/core/EXE/EXE.scala:30:23]
    .io_addr               (_alu_io_out),	// @[src/src/core/EXE/EXE.scala:46:19]
    .io_writeData          (id2exe_iddata_reg2),	// @[src/src/core/EXE/EXE.scala:30:23]
    .io_dataMem_addr       (io_dataMem_addr),
    .io_dataMem_writeEn    (io_dataMem_writeEn),
    .io_dataMem_writeData  (io_dataMem_writeData),
    .io_dataMem_readEn     (io_dataMem_readEn),
    .io_dataMem_mark       (io_dataMem_mark),
    .io_rawReadData        (io_exe2global_globalmem_memData)
  );
  assign io_exe2mem_valid = wbValid;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:20:27]
  assign io_exe2mem_bits_ifdata_pc = id2exe_ifdata_pc;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
  assign io_exe2mem_bits_ifdata_inst = id2exe_ifdata_inst;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
  assign io_exe2mem_bits_iddata_control_memOp = id2exe_iddata_control_memOp;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
  assign io_exe2mem_bits_iddata_control_wbOp = id2exe_iddata_control_wbOp;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
  assign io_exe2mem_bits_iddata_control_halt = id2exe_iddata_control_halt;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23]
  assign io_exe2mem_bits_exedata_aluResult = _alu_io_out;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:46:19]
  assign io_exe2global_forward_enable = id2exe_iddata_control_wbOp == 2'h1 & wbValid;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:20:27, :30:23, :51:23, :85:{49,73}]
  assign io_exe2global_forward_wAddr = id2exe_ifdata_inst[11:7];	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:30:23, :86:39]
  assign io_exe2global_forward_wData = _alu_io_out;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:46:19]
  assign io_exe2global_exeMemReadEnable = id2exe_iddata_control_memReadEn & wbValid;	// @[<stdin>:681:10, src/src/core/EXE/EXE.scala:20:27, :30:23, :89:55]
endmodule

module DataMemReadWrap(	// @[<stdin>:791:10]
  input  [31:0] io_rawReadData,	// @[src/src/core/MEM/DataMemWrap.scala:57:14]
  input  [2:0]  io_control_memOp,	// @[src/src/core/MEM/DataMemWrap.scala:57:14]
  input  [31:0] io_addr,	// @[src/src/core/MEM/DataMemWrap.scala:57:14]
  output [31:0] io_readData	// @[src/src/core/MEM/DataMemWrap.scala:57:14]
);

  wire [31:0] shiftData = io_rawReadData >> {27'h0, io_addr[1:0], 3'h0};	// @[src/src/core/MEM/DataMemWrap.scala:69:{31,38,43}]
  assign io_readData =
    io_control_memOp == 3'h1
      ? {{24{shiftData[7]}}, shiftData[7:0]}
      : io_control_memOp == 3'h2
          ? {24'h0, shiftData[7:0]}
          : io_control_memOp == 3'h3
              ? {{16{shiftData[15]}}, shiftData[15:0]}
              : io_control_memOp == 3'h4 ? {16'h0, shiftData[15:0]} : shiftData;	// @[<stdin>:791:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/MEM/DataMemWrap.scala:69:31, :73:{22,40,45,59,74}, :74:{22,41}, :75:{22,40,45,59,75}, :76:{22,41}]
endmodule

module MEM(	// @[<stdin>:825:10]
  input         clock,	// @[<stdin>:826:11]
                reset,	// @[<stdin>:827:11]
                io_exe2mem_valid,	// @[src/src/core/MEM/MEM.scala:11:14]
  input  [31:0] io_exe2mem_bits_ifdata_pc,	// @[src/src/core/MEM/MEM.scala:11:14]
                io_exe2mem_bits_ifdata_inst,	// @[src/src/core/MEM/MEM.scala:11:14]
  input  [2:0]  io_exe2mem_bits_iddata_control_memOp,	// @[src/src/core/MEM/MEM.scala:11:14]
  input  [1:0]  io_exe2mem_bits_iddata_control_wbOp,	// @[src/src/core/MEM/MEM.scala:11:14]
  input         io_exe2mem_bits_iddata_control_halt,	// @[src/src/core/MEM/MEM.scala:11:14]
  input  [31:0] io_exe2mem_bits_exedata_aluResult,	// @[src/src/core/MEM/MEM.scala:11:14]
                io_globalmem_memData,	// @[src/src/core/MEM/MEM.scala:11:14]
  output        io_mem2wb_valid,	// @[src/src/core/MEM/MEM.scala:11:14]
  output [31:0] io_mem2wb_bits_ifdata_pc,	// @[src/src/core/MEM/MEM.scala:11:14]
                io_mem2wb_bits_ifdata_inst,	// @[src/src/core/MEM/MEM.scala:11:14]
  output [1:0]  io_mem2wb_bits_iddata_control_wbOp,	// @[src/src/core/MEM/MEM.scala:11:14]
  output        io_mem2wb_bits_iddata_control_halt,	// @[src/src/core/MEM/MEM.scala:11:14]
  output [31:0] io_mem2wb_bits_exedata_aluResult,	// @[src/src/core/MEM/MEM.scala:11:14]
                io_mem2wb_bits_memdata_memData,	// @[src/src/core/MEM/MEM.scala:11:14]
  output        io_mem2global_forward_enable,	// @[src/src/core/MEM/MEM.scala:11:14]
  output [4:0]  io_mem2global_forward_wAddr,	// @[src/src/core/MEM/MEM.scala:11:14]
  output [31:0] io_mem2global_forward_wData	// @[src/src/core/MEM/MEM.scala:11:14]
);

  wire [31:0] _memReadWrap_io_readData;	// @[src/src/core/MEM/MEM.scala:43:27]
  reg         wbValid;	// @[src/src/core/MEM/MEM.scala:21:27]
  reg  [31:0] exe2mem_ifdata_pc;	// @[src/src/core/MEM/MEM.scala:31:24]
  reg  [31:0] exe2mem_ifdata_inst;	// @[src/src/core/MEM/MEM.scala:31:24]
  reg  [2:0]  exe2mem_iddata_control_memOp;	// @[src/src/core/MEM/MEM.scala:31:24]
  reg  [1:0]  exe2mem_iddata_control_wbOp;	// @[src/src/core/MEM/MEM.scala:31:24]
  reg         exe2mem_iddata_control_halt;	// @[src/src/core/MEM/MEM.scala:31:24]
  reg  [31:0] exe2mem_exedata_aluResult;	// @[src/src/core/MEM/MEM.scala:31:24]
  always @(posedge clock) begin	// @[<stdin>:826:11]
    if (reset) begin	// @[<stdin>:826:11]
      wbValid <= 1'h0;	// @[src/src/core/MEM/MEM.scala:21:27]
      exe2mem_ifdata_pc <= 32'h0;	// @[src/src/core/MEM/MEM.scala:31:{24,37}]
      exe2mem_ifdata_inst <= 32'h0;	// @[src/src/core/MEM/MEM.scala:31:{24,37}]
      exe2mem_iddata_control_memOp <= 3'h0;	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
      exe2mem_iddata_control_wbOp <= 2'h0;	// @[src/src/core/MEM/MEM.scala:31:{24,37}]
      exe2mem_iddata_control_halt <= 1'h0;	// @[src/src/core/MEM/MEM.scala:21:27, :31:24]
      exe2mem_exedata_aluResult <= 32'h0;	// @[src/src/core/MEM/MEM.scala:31:{24,37}]
    end
    else begin	// @[<stdin>:826:11]
      wbValid <= io_exe2mem_valid;	// @[src/src/core/MEM/MEM.scala:21:27]
      if (io_exe2mem_valid) begin	// @[src/src/core/MEM/MEM.scala:11:14]
        exe2mem_ifdata_pc <= io_exe2mem_bits_ifdata_pc;	// @[src/src/core/MEM/MEM.scala:31:24]
        exe2mem_ifdata_inst <= io_exe2mem_bits_ifdata_inst;	// @[src/src/core/MEM/MEM.scala:31:24]
        exe2mem_iddata_control_memOp <= io_exe2mem_bits_iddata_control_memOp;	// @[src/src/core/MEM/MEM.scala:31:24]
        exe2mem_iddata_control_wbOp <= io_exe2mem_bits_iddata_control_wbOp;	// @[src/src/core/MEM/MEM.scala:31:24]
        exe2mem_iddata_control_halt <= io_exe2mem_bits_iddata_control_halt;	// @[src/src/core/MEM/MEM.scala:31:24]
        exe2mem_exedata_aluResult <= io_exe2mem_bits_exedata_aluResult;	// @[src/src/core/MEM/MEM.scala:31:24]
      end
      else begin	// @[src/src/core/MEM/MEM.scala:11:14]
        exe2mem_ifdata_pc <= 32'h0;	// @[src/src/core/MEM/MEM.scala:31:{24,37}]
        exe2mem_ifdata_inst <= 32'h0;	// @[src/src/core/MEM/MEM.scala:31:{24,37}]
        exe2mem_iddata_control_memOp <= 3'h0;	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
        exe2mem_iddata_control_wbOp <= 2'h0;	// @[src/src/core/MEM/MEM.scala:31:{24,37}]
        exe2mem_iddata_control_halt <= io_exe2mem_valid & exe2mem_iddata_control_halt;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/MEM/MEM.scala:31:24]
        exe2mem_exedata_aluResult <= 32'h0;	// @[src/src/core/MEM/MEM.scala:31:{24,37}]
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[<stdin>:825:10]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[<stdin>:825:10]
      `FIRRTL_BEFORE_INITIAL	// @[<stdin>:825:10]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:6];	// @[<stdin>:825:10]
    initial begin	// @[<stdin>:825:10]
      `ifdef INIT_RANDOM_PROLOG_	// @[<stdin>:825:10]
        `INIT_RANDOM_PROLOG_	// @[<stdin>:825:10]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[<stdin>:825:10]
        for (logic [2:0] i = 3'h0; i < 3'h7; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// @[<stdin>:825:10]
        end	// @[<stdin>:825:10]
        wbValid = _RANDOM[3'h0][0];	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:21:27]
        exe2mem_ifdata_pc = {_RANDOM[3'h0][31:1], _RANDOM[3'h1][0]};	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:21:27, :31:24]
        exe2mem_ifdata_inst = {_RANDOM[3'h1][31:1], _RANDOM[3'h2][0]};	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
        exe2mem_iddata_control_memOp = _RANDOM[3'h2][18:16];	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
        exe2mem_iddata_control_wbOp = _RANDOM[3'h2][22:21];	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
        exe2mem_iddata_control_halt = _RANDOM[3'h2][23];	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
        exe2mem_exedata_aluResult = {_RANDOM[3'h5][31:24], _RANDOM[3'h6][23:0]};	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[<stdin>:825:10]
      `FIRRTL_AFTER_INITIAL	// @[<stdin>:825:10]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  DataMemReadWrap memReadWrap (	// @[src/src/core/MEM/MEM.scala:43:27]
    .io_rawReadData   (io_globalmem_memData),
    .io_control_memOp (exe2mem_iddata_control_memOp),	// @[src/src/core/MEM/MEM.scala:31:24]
    .io_addr          (exe2mem_exedata_aluResult),	// @[src/src/core/MEM/MEM.scala:31:24]
    .io_readData      (_memReadWrap_io_readData)
  );
  assign io_mem2wb_valid = wbValid;	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:21:27]
  assign io_mem2wb_bits_ifdata_pc = exe2mem_ifdata_pc;	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
  assign io_mem2wb_bits_ifdata_inst = exe2mem_ifdata_inst;	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
  assign io_mem2wb_bits_iddata_control_wbOp = exe2mem_iddata_control_wbOp;	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
  assign io_mem2wb_bits_iddata_control_halt = exe2mem_iddata_control_halt;	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
  assign io_mem2wb_bits_exedata_aluResult = exe2mem_exedata_aluResult;	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24]
  assign io_mem2wb_bits_memdata_memData = _memReadWrap_io_readData;	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:43:27]
  assign io_mem2global_forward_enable = (|exe2mem_iddata_control_wbOp) & wbValid;	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:21:27, :31:24, :59:{49,73}]
  assign io_mem2global_forward_wAddr = exe2mem_ifdata_inst[11:7];	// @[<stdin>:825:10, src/src/core/MEM/MEM.scala:31:24, :60:39]
  assign io_mem2global_forward_wData =
    exe2mem_iddata_control_wbOp == 2'h1
      ? exe2mem_exedata_aluResult
      : exe2mem_iddata_control_wbOp == 2'h2 ? _memReadWrap_io_readData : 32'h0;	// @[<stdin>:825:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/MEM/MEM.scala:31:{24,37}, :43:27, :64:21, :65:21]
endmodule

module WB(	// @[<stdin>:911:10]
  input         clock,	// @[<stdin>:912:11]
                reset,	// @[<stdin>:913:11]
                io_mem2wb_valid,	// @[src/src/core/WB/WB.scala:11:14]
  input  [31:0] io_mem2wb_bits_ifdata_pc,	// @[src/src/core/WB/WB.scala:11:14]
                io_mem2wb_bits_ifdata_inst,	// @[src/src/core/WB/WB.scala:11:14]
  input  [1:0]  io_mem2wb_bits_iddata_control_wbOp,	// @[src/src/core/WB/WB.scala:11:14]
  input         io_mem2wb_bits_iddata_control_halt,	// @[src/src/core/WB/WB.scala:11:14]
  input  [31:0] io_mem2wb_bits_exedata_aluResult,	// @[src/src/core/WB/WB.scala:11:14]
                io_mem2wb_bits_memdata_memData,	// @[src/src/core/WB/WB.scala:11:14]
  output        io_wb2global_debug_valid,	// @[src/src/core/WB/WB.scala:11:14]
  output [31:0] io_wb2global_debug_pc,	// @[src/src/core/WB/WB.scala:11:14]
                io_wb2global_debug_inst,	// @[src/src/core/WB/WB.scala:11:14]
  output        io_wb2global_debug_halt,	// @[src/src/core/WB/WB.scala:11:14]
                io_wb2global_writeBack_enable,	// @[src/src/core/WB/WB.scala:11:14]
  output [4:0]  io_wb2global_writeBack_wAddr,	// @[src/src/core/WB/WB.scala:11:14]
  output [31:0] io_wb2global_writeBack_wData	// @[src/src/core/WB/WB.scala:11:14]
);

  reg        wbValid;	// @[src/src/core/WB/WB.scala:18:26]
  reg [31:0] mem2wb_ifdata_pc;	// @[src/src/core/WB/WB.scala:25:23]
  reg [31:0] mem2wb_ifdata_inst;	// @[src/src/core/WB/WB.scala:25:23]
  reg [1:0]  mem2wb_iddata_control_wbOp;	// @[src/src/core/WB/WB.scala:25:23]
  reg        mem2wb_iddata_control_halt;	// @[src/src/core/WB/WB.scala:25:23]
  reg [31:0] mem2wb_exedata_aluResult;	// @[src/src/core/WB/WB.scala:25:23]
  reg [31:0] mem2wb_memdata_memData;	// @[src/src/core/WB/WB.scala:25:23]
  reg [31:0] io_wb2global_debug_inst_REG;	// @[src/src/core/WB/WB.scala:52:38]
  reg        io_wb2global_debug_halt_REG;	// @[src/src/core/WB/WB.scala:53:38]
  always @(posedge clock) begin	// @[<stdin>:912:11]
    if (reset) begin	// @[<stdin>:912:11]
      wbValid <= 1'h0;	// @[src/src/core/WB/WB.scala:18:26]
      mem2wb_ifdata_pc <= 32'h0;	// @[src/src/core/WB/WB.scala:25:{23,36}]
      mem2wb_ifdata_inst <= 32'h0;	// @[src/src/core/WB/WB.scala:25:{23,36}]
      mem2wb_iddata_control_wbOp <= 2'h0;	// @[src/src/core/WB/WB.scala:25:{23,36}]
      mem2wb_iddata_control_halt <= 1'h0;	// @[src/src/core/WB/WB.scala:18:26, :25:23]
      mem2wb_exedata_aluResult <= 32'h0;	// @[src/src/core/WB/WB.scala:25:{23,36}]
      mem2wb_memdata_memData <= 32'h0;	// @[src/src/core/WB/WB.scala:25:{23,36}]
    end
    else begin	// @[<stdin>:912:11]
      wbValid <= io_mem2wb_valid;	// @[src/src/core/WB/WB.scala:18:26]
      if (io_mem2wb_valid) begin	// @[src/src/core/WB/WB.scala:11:14]
        mem2wb_ifdata_pc <= io_mem2wb_bits_ifdata_pc;	// @[src/src/core/WB/WB.scala:25:23]
        mem2wb_ifdata_inst <= io_mem2wb_bits_ifdata_inst;	// @[src/src/core/WB/WB.scala:25:23]
        mem2wb_iddata_control_wbOp <= io_mem2wb_bits_iddata_control_wbOp;	// @[src/src/core/WB/WB.scala:25:23]
        mem2wb_iddata_control_halt <= io_mem2wb_bits_iddata_control_halt;	// @[src/src/core/WB/WB.scala:25:23]
        mem2wb_exedata_aluResult <= io_mem2wb_bits_exedata_aluResult;	// @[src/src/core/WB/WB.scala:25:23]
        mem2wb_memdata_memData <= io_mem2wb_bits_memdata_memData;	// @[src/src/core/WB/WB.scala:25:23]
      end
      else begin	// @[src/src/core/WB/WB.scala:11:14]
        mem2wb_ifdata_pc <= 32'h0;	// @[src/src/core/WB/WB.scala:25:{23,36}]
        mem2wb_ifdata_inst <= 32'h0;	// @[src/src/core/WB/WB.scala:25:{23,36}]
        mem2wb_iddata_control_wbOp <= 2'h0;	// @[src/src/core/WB/WB.scala:25:{23,36}]
        mem2wb_iddata_control_halt <= io_mem2wb_valid & mem2wb_iddata_control_halt;	// @[src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/WB/WB.scala:25:23]
        mem2wb_exedata_aluResult <= 32'h0;	// @[src/src/core/WB/WB.scala:25:{23,36}]
        mem2wb_memdata_memData <= 32'h0;	// @[src/src/core/WB/WB.scala:25:{23,36}]
      end
    end
    io_wb2global_debug_inst_REG <= mem2wb_ifdata_inst;	// @[src/src/core/WB/WB.scala:25:23, :52:38]
    io_wb2global_debug_halt_REG <= mem2wb_iddata_control_halt;	// @[src/src/core/WB/WB.scala:25:23, :53:38]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[<stdin>:911:10]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[<stdin>:911:10]
      `FIRRTL_BEFORE_INITIAL	// @[<stdin>:911:10]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:8];	// @[<stdin>:911:10]
    initial begin	// @[<stdin>:911:10]
      `ifdef INIT_RANDOM_PROLOG_	// @[<stdin>:911:10]
        `INIT_RANDOM_PROLOG_	// @[<stdin>:911:10]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[<stdin>:911:10]
        for (logic [3:0] i = 4'h0; i < 4'h9; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;	// @[<stdin>:911:10]
        end	// @[<stdin>:911:10]
        wbValid = _RANDOM[4'h0][0];	// @[<stdin>:911:10, src/src/core/WB/WB.scala:18:26]
        mem2wb_ifdata_pc = {_RANDOM[4'h0][31:1], _RANDOM[4'h1][0]};	// @[<stdin>:911:10, src/src/core/WB/WB.scala:18:26, :25:23]
        mem2wb_ifdata_inst = {_RANDOM[4'h1][31:1], _RANDOM[4'h2][0]};	// @[<stdin>:911:10, src/src/core/WB/WB.scala:25:23]
        mem2wb_iddata_control_wbOp = _RANDOM[4'h2][22:21];	// @[<stdin>:911:10, src/src/core/WB/WB.scala:25:23]
        mem2wb_iddata_control_halt = _RANDOM[4'h2][23];	// @[<stdin>:911:10, src/src/core/WB/WB.scala:25:23]
        mem2wb_exedata_aluResult = {_RANDOM[4'h5][31:24], _RANDOM[4'h6][23:0]};	// @[<stdin>:911:10, src/src/core/WB/WB.scala:25:23]
        mem2wb_memdata_memData = {_RANDOM[4'h6][31:24], _RANDOM[4'h7][23:0]};	// @[<stdin>:911:10, src/src/core/WB/WB.scala:25:23]
        io_wb2global_debug_inst_REG = {_RANDOM[4'h7][31:24], _RANDOM[4'h8][23:0]};	// @[<stdin>:911:10, src/src/core/WB/WB.scala:25:23, :52:38]
        io_wb2global_debug_halt_REG = _RANDOM[4'h8][24];	// @[<stdin>:911:10, src/src/core/WB/WB.scala:52:38, :53:38]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[<stdin>:911:10]
      `FIRRTL_AFTER_INITIAL	// @[<stdin>:911:10]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_wb2global_debug_valid = wbValid;	// @[<stdin>:911:10, src/src/core/WB/WB.scala:18:26]
  assign io_wb2global_debug_pc = mem2wb_ifdata_pc;	// @[<stdin>:911:10, src/src/core/WB/WB.scala:25:23]
  assign io_wb2global_debug_inst = io_wb2global_debug_inst_REG;	// @[<stdin>:911:10, src/src/core/WB/WB.scala:52:38]
  assign io_wb2global_debug_halt = io_wb2global_debug_halt_REG;	// @[<stdin>:911:10, src/src/core/WB/WB.scala:53:38]
  assign io_wb2global_writeBack_enable = wbValid & (|mem2wb_iddata_control_wbOp);	// @[<stdin>:911:10, src/src/core/WB/WB.scala:18:26, :25:23, :40:{44,60}]
  assign io_wb2global_writeBack_wAddr = mem2wb_ifdata_inst[11:7];	// @[<stdin>:911:10, src/src/core/WB/WB.scala:25:23, :35:23]
  assign io_wb2global_writeBack_wData =
    mem2wb_iddata_control_wbOp == 2'h1
      ? mem2wb_exedata_aluResult
      : mem2wb_iddata_control_wbOp == 2'h2 ? mem2wb_memdata_memData : 32'h0;	// @[<stdin>:911:10, src/main/scala/chisel3/util/Mux.scala:141:16, src/src/core/WB/WB.scala:25:{23,36}, :45:21, :46:21]
endmodule

module CPUTop(	// @[<stdin>:986:10]
  input         clock,	// @[<stdin>:987:11]
                reset,	// @[<stdin>:988:11]
  input  [31:0] io_inst_readData,	// @[src/src/core/CPUTop.scala:22:14]
                io_data_readData,	// @[src/src/core/CPUTop.scala:22:14]
  output [31:0] io_inst_addr,	// @[src/src/core/CPUTop.scala:22:14]
  output        io_inst_writeEn,	// @[src/src/core/CPUTop.scala:22:14]
  output [31:0] io_inst_writeData,	// @[src/src/core/CPUTop.scala:22:14]
  output        io_inst_readEn,	// @[src/src/core/CPUTop.scala:22:14]
  output [3:0]  io_inst_mark,	// @[src/src/core/CPUTop.scala:22:14]
  output [31:0] io_data_addr,	// @[src/src/core/CPUTop.scala:22:14]
  output        io_data_writeEn,	// @[src/src/core/CPUTop.scala:22:14]
  output [31:0] io_data_writeData,	// @[src/src/core/CPUTop.scala:22:14]
  output        io_data_readEn,	// @[src/src/core/CPUTop.scala:22:14]
  output [3:0]  io_data_mark,	// @[src/src/core/CPUTop.scala:22:14]
  output [31:0] io_debug_regs_0,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_1,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_2,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_3,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_4,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_5,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_6,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_7,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_8,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_9,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_10,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_11,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_12,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_13,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_14,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_15,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_16,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_17,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_18,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_19,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_20,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_21,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_22,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_23,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_24,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_25,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_26,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_27,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_28,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_29,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_30,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_regs_31,	// @[src/src/core/CPUTop.scala:22:14]
  output        io_debug_wbDebug_valid,	// @[src/src/core/CPUTop.scala:22:14]
  output [31:0] io_debug_wbDebug_pc,	// @[src/src/core/CPUTop.scala:22:14]
                io_debug_wbDebug_inst,	// @[src/src/core/CPUTop.scala:22:14]
  output        io_debug_wbDebug_halt	// @[src/src/core/CPUTop.scala:22:14]
);

  wire        _wbStage_io_wb2global_writeBack_enable;	// @[src/src/core/CPUTop.scala:33:26]
  wire [4:0]  _wbStage_io_wb2global_writeBack_wAddr;	// @[src/src/core/CPUTop.scala:33:26]
  wire [31:0] _wbStage_io_wb2global_writeBack_wData;	// @[src/src/core/CPUTop.scala:33:26]
  wire        _memStage_io_mem2wb_valid;	// @[src/src/core/CPUTop.scala:32:26]
  wire [31:0] _memStage_io_mem2wb_bits_ifdata_pc;	// @[src/src/core/CPUTop.scala:32:26]
  wire [31:0] _memStage_io_mem2wb_bits_ifdata_inst;	// @[src/src/core/CPUTop.scala:32:26]
  wire [1:0]  _memStage_io_mem2wb_bits_iddata_control_wbOp;	// @[src/src/core/CPUTop.scala:32:26]
  wire        _memStage_io_mem2wb_bits_iddata_control_halt;	// @[src/src/core/CPUTop.scala:32:26]
  wire [31:0] _memStage_io_mem2wb_bits_exedata_aluResult;	// @[src/src/core/CPUTop.scala:32:26]
  wire [31:0] _memStage_io_mem2wb_bits_memdata_memData;	// @[src/src/core/CPUTop.scala:32:26]
  wire        _memStage_io_mem2global_forward_enable;	// @[src/src/core/CPUTop.scala:32:26]
  wire [4:0]  _memStage_io_mem2global_forward_wAddr;	// @[src/src/core/CPUTop.scala:32:26]
  wire [31:0] _memStage_io_mem2global_forward_wData;	// @[src/src/core/CPUTop.scala:32:26]
  wire        _exeStage_io_exe2mem_valid;	// @[src/src/core/CPUTop.scala:31:26]
  wire [31:0] _exeStage_io_exe2mem_bits_ifdata_pc;	// @[src/src/core/CPUTop.scala:31:26]
  wire [31:0] _exeStage_io_exe2mem_bits_ifdata_inst;	// @[src/src/core/CPUTop.scala:31:26]
  wire [2:0]  _exeStage_io_exe2mem_bits_iddata_control_memOp;	// @[src/src/core/CPUTop.scala:31:26]
  wire [1:0]  _exeStage_io_exe2mem_bits_iddata_control_wbOp;	// @[src/src/core/CPUTop.scala:31:26]
  wire        _exeStage_io_exe2mem_bits_iddata_control_halt;	// @[src/src/core/CPUTop.scala:31:26]
  wire [31:0] _exeStage_io_exe2mem_bits_exedata_aluResult;	// @[src/src/core/CPUTop.scala:31:26]
  wire [31:0] _exeStage_io_exe2global_globalmem_memData;	// @[src/src/core/CPUTop.scala:31:26]
  wire        _exeStage_io_exe2global_forward_enable;	// @[src/src/core/CPUTop.scala:31:26]
  wire [4:0]  _exeStage_io_exe2global_forward_wAddr;	// @[src/src/core/CPUTop.scala:31:26]
  wire [31:0] _exeStage_io_exe2global_forward_wData;	// @[src/src/core/CPUTop.scala:31:26]
  wire        _exeStage_io_exe2global_exeMemReadEnable;	// @[src/src/core/CPUTop.scala:31:26]
  wire        _idStage_io_if2id_ready;	// @[src/src/core/CPUTop.scala:30:26]
  wire        _idStage_io_id2exe_valid;	// @[src/src/core/CPUTop.scala:30:26]
  wire [31:0] _idStage_io_id2exe_bits_ifdata_pc;	// @[src/src/core/CPUTop.scala:30:26]
  wire [31:0] _idStage_io_id2exe_bits_ifdata_inst;	// @[src/src/core/CPUTop.scala:30:26]
  wire [1:0]  _idStage_io_id2exe_bits_iddata_control_src1Op;	// @[src/src/core/CPUTop.scala:30:26]
  wire [1:0]  _idStage_io_id2exe_bits_iddata_control_src2Op;	// @[src/src/core/CPUTop.scala:30:26]
  wire [6:0]  _idStage_io_id2exe_bits_iddata_control_aluOp;	// @[src/src/core/CPUTop.scala:30:26]
  wire [2:0]  _idStage_io_id2exe_bits_iddata_control_memOp;	// @[src/src/core/CPUTop.scala:30:26]
  wire        _idStage_io_id2exe_bits_iddata_control_memReadEn;	// @[src/src/core/CPUTop.scala:30:26]
  wire        _idStage_io_id2exe_bits_iddata_control_memWriteEn;	// @[src/src/core/CPUTop.scala:30:26]
  wire [1:0]  _idStage_io_id2exe_bits_iddata_control_wbOp;	// @[src/src/core/CPUTop.scala:30:26]
  wire        _idStage_io_id2exe_bits_iddata_control_halt;	// @[src/src/core/CPUTop.scala:30:26]
  wire [31:0] _idStage_io_id2exe_bits_iddata_reg1;	// @[src/src/core/CPUTop.scala:30:26]
  wire [31:0] _idStage_io_id2exe_bits_iddata_reg2;	// @[src/src/core/CPUTop.scala:30:26]
  wire [31:0] _idStage_io_id2exe_bits_iddata_imm;	// @[src/src/core/CPUTop.scala:30:26]
  wire        _idStage_io_id2global_branch_branchSel;	// @[src/src/core/CPUTop.scala:30:26]
  wire [31:0] _idStage_io_id2global_branch_branchTarget;	// @[src/src/core/CPUTop.scala:30:26]
  wire        _ifStage_io_preif2if_ready;	// @[src/src/core/CPUTop.scala:29:26]
  wire        _ifStage_io_if2id_valid;	// @[src/src/core/CPUTop.scala:29:26]
  wire [31:0] _ifStage_io_if2id_bits_ifdata_pc;	// @[src/src/core/CPUTop.scala:29:26]
  wire [31:0] _ifStage_io_if2id_bits_ifdata_inst;	// @[src/src/core/CPUTop.scala:29:26]
  wire [31:0] _ifStage_io_if2global_pc;	// @[src/src/core/CPUTop.scala:29:26]
  wire [31:0] _preifStage_io_preif2if_bits_nextPC;	// @[src/src/core/CPUTop.scala:28:26]
  wire [31:0] _preifStage_io_preif2if_bits_instData;	// @[src/src/core/CPUTop.scala:28:26]
  PreIF preifStage (	// @[src/src/core/CPUTop.scala:28:26]
    .io_instMem_readData       (io_inst_readData),
    .io_preif2if_ready         (_ifStage_io_preif2if_ready),	// @[src/src/core/CPUTop.scala:29:26]
    .io_pc                     (_ifStage_io_if2global_pc),	// @[src/src/core/CPUTop.scala:29:26]
    .io_branch_branchSel       (_idStage_io_id2global_branch_branchSel),	// @[src/src/core/CPUTop.scala:30:26]
    .io_branch_branchTarget    (_idStage_io_id2global_branch_branchTarget),	// @[src/src/core/CPUTop.scala:30:26]
    .io_instMem_addr           (io_inst_addr),
    .io_instMem_readEn         (io_inst_readEn),
    .io_preif2if_bits_nextPC   (_preifStage_io_preif2if_bits_nextPC),
    .io_preif2if_bits_instData (_preifStage_io_preif2if_bits_instData)
  );
  IF ifStage (	// @[src/src/core/CPUTop.scala:29:26]
    .clock                     (clock),
    .reset                     (reset),
    .io_preif2if_bits_nextPC   (_preifStage_io_preif2if_bits_nextPC),	// @[src/src/core/CPUTop.scala:28:26]
    .io_preif2if_bits_instData (_preifStage_io_preif2if_bits_instData),	// @[src/src/core/CPUTop.scala:28:26]
    .io_if2id_ready            (_idStage_io_if2id_ready),	// @[src/src/core/CPUTop.scala:30:26]
    .io_branch_branchSel       (_idStage_io_id2global_branch_branchSel),	// @[src/src/core/CPUTop.scala:30:26]
    .io_preif2if_ready         (_ifStage_io_preif2if_ready),
    .io_if2id_valid            (_ifStage_io_if2id_valid),
    .io_if2id_bits_ifdata_pc   (_ifStage_io_if2id_bits_ifdata_pc),
    .io_if2id_bits_ifdata_inst (_ifStage_io_if2id_bits_ifdata_inst),
    .io_if2global_pc           (_ifStage_io_if2global_pc)
  );
  ID idStage (	// @[src/src/core/CPUTop.scala:30:26]
    .clock                                    (clock),
    .reset                                    (reset),
    .io_if2id_valid                           (_ifStage_io_if2id_valid),	// @[src/src/core/CPUTop.scala:29:26]
    .io_if2id_bits_ifdata_pc                  (_ifStage_io_if2id_bits_ifdata_pc),	// @[src/src/core/CPUTop.scala:29:26]
    .io_if2id_bits_ifdata_inst                (_ifStage_io_if2id_bits_ifdata_inst),	// @[src/src/core/CPUTop.scala:29:26]
    .io_exeForward_enable                     (_exeStage_io_exe2global_forward_enable),	// @[src/src/core/CPUTop.scala:31:26]
    .io_exeForward_wAddr                      (_exeStage_io_exe2global_forward_wAddr),	// @[src/src/core/CPUTop.scala:31:26]
    .io_exeForward_wData                      (_exeStage_io_exe2global_forward_wData),	// @[src/src/core/CPUTop.scala:31:26]
    .io_memForward_enable                     (_memStage_io_mem2global_forward_enable),	// @[src/src/core/CPUTop.scala:32:26]
    .io_memForward_wAddr                      (_memStage_io_mem2global_forward_wAddr),	// @[src/src/core/CPUTop.scala:32:26]
    .io_memForward_wData                      (_memStage_io_mem2global_forward_wData),	// @[src/src/core/CPUTop.scala:32:26]
    .io_writeBack_enable                      (_wbStage_io_wb2global_writeBack_enable),	// @[src/src/core/CPUTop.scala:33:26]
    .io_writeBack_wAddr                       (_wbStage_io_wb2global_writeBack_wAddr),	// @[src/src/core/CPUTop.scala:33:26]
    .io_writeBack_wData                       (_wbStage_io_wb2global_writeBack_wData),	// @[src/src/core/CPUTop.scala:33:26]
    .io_exeMemReadEnable                      (_exeStage_io_exe2global_exeMemReadEnable),	// @[src/src/core/CPUTop.scala:31:26]
    .io_if2id_ready                           (_idStage_io_if2id_ready),
    .io_id2exe_valid                          (_idStage_io_id2exe_valid),
    .io_id2exe_bits_ifdata_pc                 (_idStage_io_id2exe_bits_ifdata_pc),
    .io_id2exe_bits_ifdata_inst               (_idStage_io_id2exe_bits_ifdata_inst),
    .io_id2exe_bits_iddata_control_src1Op
      (_idStage_io_id2exe_bits_iddata_control_src1Op),
    .io_id2exe_bits_iddata_control_src2Op
      (_idStage_io_id2exe_bits_iddata_control_src2Op),
    .io_id2exe_bits_iddata_control_aluOp
      (_idStage_io_id2exe_bits_iddata_control_aluOp),
    .io_id2exe_bits_iddata_control_memOp
      (_idStage_io_id2exe_bits_iddata_control_memOp),
    .io_id2exe_bits_iddata_control_memReadEn
      (_idStage_io_id2exe_bits_iddata_control_memReadEn),
    .io_id2exe_bits_iddata_control_memWriteEn
      (_idStage_io_id2exe_bits_iddata_control_memWriteEn),
    .io_id2exe_bits_iddata_control_wbOp
      (_idStage_io_id2exe_bits_iddata_control_wbOp),
    .io_id2exe_bits_iddata_control_halt
      (_idStage_io_id2exe_bits_iddata_control_halt),
    .io_id2exe_bits_iddata_reg1               (_idStage_io_id2exe_bits_iddata_reg1),
    .io_id2exe_bits_iddata_reg2               (_idStage_io_id2exe_bits_iddata_reg2),
    .io_id2exe_bits_iddata_imm                (_idStage_io_id2exe_bits_iddata_imm),
    .io_id2global_branch_branchSel            (_idStage_io_id2global_branch_branchSel),
    .io_id2global_branch_branchTarget         (_idStage_io_id2global_branch_branchTarget),
    .io_id2global_debugRegs_1                 (io_debug_regs_1),
    .io_id2global_debugRegs_2                 (io_debug_regs_2),
    .io_id2global_debugRegs_3                 (io_debug_regs_3),
    .io_id2global_debugRegs_4                 (io_debug_regs_4),
    .io_id2global_debugRegs_5                 (io_debug_regs_5),
    .io_id2global_debugRegs_6                 (io_debug_regs_6),
    .io_id2global_debugRegs_7                 (io_debug_regs_7),
    .io_id2global_debugRegs_8                 (io_debug_regs_8),
    .io_id2global_debugRegs_9                 (io_debug_regs_9),
    .io_id2global_debugRegs_10                (io_debug_regs_10),
    .io_id2global_debugRegs_11                (io_debug_regs_11),
    .io_id2global_debugRegs_12                (io_debug_regs_12),
    .io_id2global_debugRegs_13                (io_debug_regs_13),
    .io_id2global_debugRegs_14                (io_debug_regs_14),
    .io_id2global_debugRegs_15                (io_debug_regs_15),
    .io_id2global_debugRegs_16                (io_debug_regs_16),
    .io_id2global_debugRegs_17                (io_debug_regs_17),
    .io_id2global_debugRegs_18                (io_debug_regs_18),
    .io_id2global_debugRegs_19                (io_debug_regs_19),
    .io_id2global_debugRegs_20                (io_debug_regs_20),
    .io_id2global_debugRegs_21                (io_debug_regs_21),
    .io_id2global_debugRegs_22                (io_debug_regs_22),
    .io_id2global_debugRegs_23                (io_debug_regs_23),
    .io_id2global_debugRegs_24                (io_debug_regs_24),
    .io_id2global_debugRegs_25                (io_debug_regs_25),
    .io_id2global_debugRegs_26                (io_debug_regs_26),
    .io_id2global_debugRegs_27                (io_debug_regs_27),
    .io_id2global_debugRegs_28                (io_debug_regs_28),
    .io_id2global_debugRegs_29                (io_debug_regs_29),
    .io_id2global_debugRegs_30                (io_debug_regs_30),
    .io_id2global_debugRegs_31                (io_debug_regs_31)
  );
  EXE exeStage (	// @[src/src/core/CPUTop.scala:31:26]
    .clock                                    (clock),
    .reset                                    (reset),
    .io_dataMem_readData                      (io_data_readData),
    .io_id2exe_valid                          (_idStage_io_id2exe_valid),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_ifdata_pc                 (_idStage_io_id2exe_bits_ifdata_pc),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_ifdata_inst               (_idStage_io_id2exe_bits_ifdata_inst),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_iddata_control_src1Op
      (_idStage_io_id2exe_bits_iddata_control_src1Op),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_iddata_control_src2Op
      (_idStage_io_id2exe_bits_iddata_control_src2Op),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_iddata_control_aluOp
      (_idStage_io_id2exe_bits_iddata_control_aluOp),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_iddata_control_memOp
      (_idStage_io_id2exe_bits_iddata_control_memOp),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_iddata_control_memReadEn
      (_idStage_io_id2exe_bits_iddata_control_memReadEn),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_iddata_control_memWriteEn
      (_idStage_io_id2exe_bits_iddata_control_memWriteEn),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_iddata_control_wbOp
      (_idStage_io_id2exe_bits_iddata_control_wbOp),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_iddata_control_halt
      (_idStage_io_id2exe_bits_iddata_control_halt),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_iddata_reg1               (_idStage_io_id2exe_bits_iddata_reg1),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_iddata_reg2               (_idStage_io_id2exe_bits_iddata_reg2),	// @[src/src/core/CPUTop.scala:30:26]
    .io_id2exe_bits_iddata_imm                (_idStage_io_id2exe_bits_iddata_imm),	// @[src/src/core/CPUTop.scala:30:26]
    .io_dataMem_addr                          (io_data_addr),
    .io_dataMem_writeEn                       (io_data_writeEn),
    .io_dataMem_writeData                     (io_data_writeData),
    .io_dataMem_readEn                        (io_data_readEn),
    .io_dataMem_mark                          (io_data_mark),
    .io_exe2mem_valid                         (_exeStage_io_exe2mem_valid),
    .io_exe2mem_bits_ifdata_pc                (_exeStage_io_exe2mem_bits_ifdata_pc),
    .io_exe2mem_bits_ifdata_inst              (_exeStage_io_exe2mem_bits_ifdata_inst),
    .io_exe2mem_bits_iddata_control_memOp
      (_exeStage_io_exe2mem_bits_iddata_control_memOp),
    .io_exe2mem_bits_iddata_control_wbOp
      (_exeStage_io_exe2mem_bits_iddata_control_wbOp),
    .io_exe2mem_bits_iddata_control_halt
      (_exeStage_io_exe2mem_bits_iddata_control_halt),
    .io_exe2mem_bits_exedata_aluResult
      (_exeStage_io_exe2mem_bits_exedata_aluResult),
    .io_exe2global_globalmem_memData          (_exeStage_io_exe2global_globalmem_memData),
    .io_exe2global_forward_enable             (_exeStage_io_exe2global_forward_enable),
    .io_exe2global_forward_wAddr              (_exeStage_io_exe2global_forward_wAddr),
    .io_exe2global_forward_wData              (_exeStage_io_exe2global_forward_wData),
    .io_exe2global_exeMemReadEnable           (_exeStage_io_exe2global_exeMemReadEnable)
  );
  MEM memStage (	// @[src/src/core/CPUTop.scala:32:26]
    .clock                                (clock),
    .reset                                (reset),
    .io_exe2mem_valid                     (_exeStage_io_exe2mem_valid),	// @[src/src/core/CPUTop.scala:31:26]
    .io_exe2mem_bits_ifdata_pc            (_exeStage_io_exe2mem_bits_ifdata_pc),	// @[src/src/core/CPUTop.scala:31:26]
    .io_exe2mem_bits_ifdata_inst          (_exeStage_io_exe2mem_bits_ifdata_inst),	// @[src/src/core/CPUTop.scala:31:26]
    .io_exe2mem_bits_iddata_control_memOp
      (_exeStage_io_exe2mem_bits_iddata_control_memOp),	// @[src/src/core/CPUTop.scala:31:26]
    .io_exe2mem_bits_iddata_control_wbOp  (_exeStage_io_exe2mem_bits_iddata_control_wbOp),	// @[src/src/core/CPUTop.scala:31:26]
    .io_exe2mem_bits_iddata_control_halt  (_exeStage_io_exe2mem_bits_iddata_control_halt),	// @[src/src/core/CPUTop.scala:31:26]
    .io_exe2mem_bits_exedata_aluResult    (_exeStage_io_exe2mem_bits_exedata_aluResult),	// @[src/src/core/CPUTop.scala:31:26]
    .io_globalmem_memData                 (_exeStage_io_exe2global_globalmem_memData),	// @[src/src/core/CPUTop.scala:31:26]
    .io_mem2wb_valid                      (_memStage_io_mem2wb_valid),
    .io_mem2wb_bits_ifdata_pc             (_memStage_io_mem2wb_bits_ifdata_pc),
    .io_mem2wb_bits_ifdata_inst           (_memStage_io_mem2wb_bits_ifdata_inst),
    .io_mem2wb_bits_iddata_control_wbOp   (_memStage_io_mem2wb_bits_iddata_control_wbOp),
    .io_mem2wb_bits_iddata_control_halt   (_memStage_io_mem2wb_bits_iddata_control_halt),
    .io_mem2wb_bits_exedata_aluResult     (_memStage_io_mem2wb_bits_exedata_aluResult),
    .io_mem2wb_bits_memdata_memData       (_memStage_io_mem2wb_bits_memdata_memData),
    .io_mem2global_forward_enable         (_memStage_io_mem2global_forward_enable),
    .io_mem2global_forward_wAddr          (_memStage_io_mem2global_forward_wAddr),
    .io_mem2global_forward_wData          (_memStage_io_mem2global_forward_wData)
  );
  WB wbStage (	// @[src/src/core/CPUTop.scala:33:26]
    .clock                              (clock),
    .reset                              (reset),
    .io_mem2wb_valid                    (_memStage_io_mem2wb_valid),	// @[src/src/core/CPUTop.scala:32:26]
    .io_mem2wb_bits_ifdata_pc           (_memStage_io_mem2wb_bits_ifdata_pc),	// @[src/src/core/CPUTop.scala:32:26]
    .io_mem2wb_bits_ifdata_inst         (_memStage_io_mem2wb_bits_ifdata_inst),	// @[src/src/core/CPUTop.scala:32:26]
    .io_mem2wb_bits_iddata_control_wbOp (_memStage_io_mem2wb_bits_iddata_control_wbOp),	// @[src/src/core/CPUTop.scala:32:26]
    .io_mem2wb_bits_iddata_control_halt (_memStage_io_mem2wb_bits_iddata_control_halt),	// @[src/src/core/CPUTop.scala:32:26]
    .io_mem2wb_bits_exedata_aluResult   (_memStage_io_mem2wb_bits_exedata_aluResult),	// @[src/src/core/CPUTop.scala:32:26]
    .io_mem2wb_bits_memdata_memData     (_memStage_io_mem2wb_bits_memdata_memData),	// @[src/src/core/CPUTop.scala:32:26]
    .io_wb2global_debug_valid           (io_debug_wbDebug_valid),
    .io_wb2global_debug_pc              (io_debug_wbDebug_pc),
    .io_wb2global_debug_inst            (io_debug_wbDebug_inst),
    .io_wb2global_debug_halt            (io_debug_wbDebug_halt),
    .io_wb2global_writeBack_enable      (_wbStage_io_wb2global_writeBack_enable),
    .io_wb2global_writeBack_wAddr       (_wbStage_io_wb2global_writeBack_wAddr),
    .io_wb2global_writeBack_wData       (_wbStage_io_wb2global_writeBack_wData)
  );
  assign io_inst_writeEn = 1'h0;	// @[<stdin>:986:10, src/src/core/CPUTop.scala:28:26]
  assign io_inst_writeData = 32'h0;	// @[<stdin>:986:10, src/src/core/CPUTop.scala:28:26, :30:26]
  assign io_inst_mark = 4'hF;	// @[<stdin>:986:10, src/src/core/CPUTop.scala:28:26]
  assign io_debug_regs_0 = 32'h0;	// @[<stdin>:986:10, src/src/core/CPUTop.scala:28:26, :30:26]
endmodule


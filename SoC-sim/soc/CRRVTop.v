// Generated by CIRCT firtool-1.44.0
// VCS coverage exclude_file
module regfile_combMem(	// @[CRRV/src/core/regfile/RegFile.scala:15:20]
  input  [4:0]  R0_addr,
  input         R0_en,
                R0_clk,
  input  [4:0]  R1_addr,
  input         R1_en,
                R1_clk,
  input  [4:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [31:0] W0_data,
  output [31:0] R0_data,
                R1_data
);

  reg [31:0] Memory[0:31];	// @[CRRV/src/core/regfile/RegFile.scala:15:20]
  always @(posedge W0_clk) begin	// @[CRRV/src/core/regfile/RegFile.scala:15:20]
    if (W0_en)	// @[CRRV/src/core/regfile/RegFile.scala:15:20]
      Memory[W0_addr] <= W0_data;	// @[CRRV/src/core/regfile/RegFile.scala:15:20]
  end // always @(posedge)
  assign R0_data = R0_en ? Memory[R0_addr] : 32'bx;	// @[CRRV/src/core/regfile/RegFile.scala:15:20]
  assign R1_data = R1_en ? Memory[R1_addr] : 32'bx;	// @[CRRV/src/core/regfile/RegFile.scala:15:20]
endmodule

// VCS coverage exclude_file
module lines_combMem(	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
  input  [4:0]  R0_addr,
  input         R0_en,
                R0_clk,
  input  [4:0]  R1_addr,
  input         R1_en,
                R1_clk,
  input  [4:0]  R2_addr,
  input         R2_en,
                R2_clk,
  input  [4:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [55:0] W0_data,
                W0_mask,
  input  [4:0]  W1_addr,
  input         W1_en,
                W1_clk,
  input  [55:0] W1_data,
                W1_mask,
  input  [4:0]  W2_addr,
  input         W2_en,
                W2_clk,
  input  [55:0] W2_data,
                W2_mask,
  output [55:0] R0_data,
                R1_data,
                R2_data
);

  reg [55:0] Memory[0:31];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
  always @(posedge W0_clk) begin	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[0])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h0 +: 1] <= W0_data[0];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[1])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h1 +: 1] <= W0_data[1];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[2])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h2 +: 1] <= W0_data[2];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[3])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h3 +: 1] <= W0_data[3];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[4])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h4 +: 1] <= W0_data[4];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[5])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h5 +: 1] <= W0_data[5];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[6])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h6 +: 1] <= W0_data[6];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[7])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h7 +: 1] <= W0_data[7];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[8])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h8 +: 1] <= W0_data[8];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[9])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h9 +: 1] <= W0_data[9];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[10])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'hA +: 1] <= W0_data[10];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[11])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'hB +: 1] <= W0_data[11];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[12])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'hC +: 1] <= W0_data[12];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[13])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'hD +: 1] <= W0_data[13];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[14])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'hE +: 1] <= W0_data[14];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[15])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'hF +: 1] <= W0_data[15];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[16])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h10 +: 1] <= W0_data[16];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[17])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h11 +: 1] <= W0_data[17];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[18])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h12 +: 1] <= W0_data[18];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[19])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h13 +: 1] <= W0_data[19];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[20])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h14 +: 1] <= W0_data[20];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[21])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h15 +: 1] <= W0_data[21];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[22])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h16 +: 1] <= W0_data[22];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[23])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h17 +: 1] <= W0_data[23];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[24])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h18 +: 1] <= W0_data[24];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[25])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h19 +: 1] <= W0_data[25];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[26])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h1A +: 1] <= W0_data[26];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[27])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h1B +: 1] <= W0_data[27];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[28])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h1C +: 1] <= W0_data[28];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[29])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h1D +: 1] <= W0_data[29];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[30])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h1E +: 1] <= W0_data[30];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[31])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h1F +: 1] <= W0_data[31];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[32])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h20 +: 1] <= W0_data[32];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[33])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h21 +: 1] <= W0_data[33];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[34])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h22 +: 1] <= W0_data[34];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[35])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h23 +: 1] <= W0_data[35];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[36])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h24 +: 1] <= W0_data[36];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[37])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h25 +: 1] <= W0_data[37];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[38])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h26 +: 1] <= W0_data[38];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[39])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h27 +: 1] <= W0_data[39];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[40])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h28 +: 1] <= W0_data[40];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[41])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h29 +: 1] <= W0_data[41];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[42])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h2A +: 1] <= W0_data[42];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[43])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h2B +: 1] <= W0_data[43];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[44])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h2C +: 1] <= W0_data[44];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[45])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h2D +: 1] <= W0_data[45];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[46])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h2E +: 1] <= W0_data[46];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[47])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h2F +: 1] <= W0_data[47];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[48])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h30 +: 1] <= W0_data[48];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[49])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h31 +: 1] <= W0_data[49];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[50])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h32 +: 1] <= W0_data[50];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[51])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h33 +: 1] <= W0_data[51];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[52])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h34 +: 1] <= W0_data[52];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[53])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h35 +: 1] <= W0_data[53];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[54])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h36 +: 1] <= W0_data[54];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W0_en & W0_mask[55])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W0_addr][32'h37 +: 1] <= W0_data[55];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[0])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h0 +: 1] <= W1_data[0];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[1])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h1 +: 1] <= W1_data[1];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[2])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h2 +: 1] <= W1_data[2];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[3])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h3 +: 1] <= W1_data[3];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[4])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h4 +: 1] <= W1_data[4];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[5])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h5 +: 1] <= W1_data[5];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[6])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h6 +: 1] <= W1_data[6];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[7])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h7 +: 1] <= W1_data[7];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[8])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h8 +: 1] <= W1_data[8];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[9])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h9 +: 1] <= W1_data[9];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[10])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'hA +: 1] <= W1_data[10];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[11])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'hB +: 1] <= W1_data[11];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[12])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'hC +: 1] <= W1_data[12];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[13])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'hD +: 1] <= W1_data[13];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[14])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'hE +: 1] <= W1_data[14];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[15])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'hF +: 1] <= W1_data[15];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[16])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h10 +: 1] <= W1_data[16];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[17])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h11 +: 1] <= W1_data[17];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[18])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h12 +: 1] <= W1_data[18];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[19])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h13 +: 1] <= W1_data[19];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[20])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h14 +: 1] <= W1_data[20];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[21])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h15 +: 1] <= W1_data[21];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[22])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h16 +: 1] <= W1_data[22];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[23])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h17 +: 1] <= W1_data[23];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[24])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h18 +: 1] <= W1_data[24];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[25])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h19 +: 1] <= W1_data[25];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[26])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h1A +: 1] <= W1_data[26];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[27])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h1B +: 1] <= W1_data[27];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[28])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h1C +: 1] <= W1_data[28];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[29])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h1D +: 1] <= W1_data[29];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[30])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h1E +: 1] <= W1_data[30];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[31])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h1F +: 1] <= W1_data[31];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[32])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h20 +: 1] <= W1_data[32];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[33])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h21 +: 1] <= W1_data[33];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[34])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h22 +: 1] <= W1_data[34];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[35])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h23 +: 1] <= W1_data[35];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[36])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h24 +: 1] <= W1_data[36];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[37])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h25 +: 1] <= W1_data[37];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[38])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h26 +: 1] <= W1_data[38];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[39])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h27 +: 1] <= W1_data[39];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[40])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h28 +: 1] <= W1_data[40];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[41])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h29 +: 1] <= W1_data[41];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[42])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h2A +: 1] <= W1_data[42];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[43])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h2B +: 1] <= W1_data[43];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[44])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h2C +: 1] <= W1_data[44];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[45])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h2D +: 1] <= W1_data[45];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[46])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h2E +: 1] <= W1_data[46];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[47])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h2F +: 1] <= W1_data[47];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[48])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h30 +: 1] <= W1_data[48];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[49])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h31 +: 1] <= W1_data[49];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[50])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h32 +: 1] <= W1_data[50];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[51])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h33 +: 1] <= W1_data[51];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[52])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h34 +: 1] <= W1_data[52];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[53])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h35 +: 1] <= W1_data[53];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[54])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h36 +: 1] <= W1_data[54];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W1_en & W1_mask[55])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W1_addr][32'h37 +: 1] <= W1_data[55];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[0])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h0 +: 1] <= W2_data[0];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[1])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h1 +: 1] <= W2_data[1];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[2])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h2 +: 1] <= W2_data[2];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[3])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h3 +: 1] <= W2_data[3];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[4])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h4 +: 1] <= W2_data[4];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[5])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h5 +: 1] <= W2_data[5];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[6])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h6 +: 1] <= W2_data[6];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[7])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h7 +: 1] <= W2_data[7];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[8])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h8 +: 1] <= W2_data[8];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[9])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h9 +: 1] <= W2_data[9];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[10])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'hA +: 1] <= W2_data[10];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[11])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'hB +: 1] <= W2_data[11];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[12])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'hC +: 1] <= W2_data[12];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[13])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'hD +: 1] <= W2_data[13];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[14])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'hE +: 1] <= W2_data[14];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[15])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'hF +: 1] <= W2_data[15];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[16])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h10 +: 1] <= W2_data[16];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[17])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h11 +: 1] <= W2_data[17];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[18])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h12 +: 1] <= W2_data[18];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[19])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h13 +: 1] <= W2_data[19];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[20])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h14 +: 1] <= W2_data[20];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[21])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h15 +: 1] <= W2_data[21];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[22])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h16 +: 1] <= W2_data[22];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[23])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h17 +: 1] <= W2_data[23];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[24])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h18 +: 1] <= W2_data[24];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[25])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h19 +: 1] <= W2_data[25];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[26])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h1A +: 1] <= W2_data[26];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[27])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h1B +: 1] <= W2_data[27];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[28])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h1C +: 1] <= W2_data[28];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[29])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h1D +: 1] <= W2_data[29];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[30])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h1E +: 1] <= W2_data[30];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[31])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h1F +: 1] <= W2_data[31];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[32])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h20 +: 1] <= W2_data[32];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[33])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h21 +: 1] <= W2_data[33];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[34])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h22 +: 1] <= W2_data[34];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[35])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h23 +: 1] <= W2_data[35];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[36])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h24 +: 1] <= W2_data[36];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[37])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h25 +: 1] <= W2_data[37];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[38])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h26 +: 1] <= W2_data[38];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[39])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h27 +: 1] <= W2_data[39];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[40])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h28 +: 1] <= W2_data[40];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[41])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h29 +: 1] <= W2_data[41];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[42])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h2A +: 1] <= W2_data[42];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[43])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h2B +: 1] <= W2_data[43];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[44])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h2C +: 1] <= W2_data[44];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[45])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h2D +: 1] <= W2_data[45];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[46])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h2E +: 1] <= W2_data[46];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[47])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h2F +: 1] <= W2_data[47];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[48])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h30 +: 1] <= W2_data[48];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[49])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h31 +: 1] <= W2_data[49];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[50])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h32 +: 1] <= W2_data[50];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[51])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h33 +: 1] <= W2_data[51];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[52])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h34 +: 1] <= W2_data[52];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[53])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h35 +: 1] <= W2_data[53];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[54])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h36 +: 1] <= W2_data[54];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    if (W2_en & W2_mask[55])	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
      Memory[W2_addr][32'h37 +: 1] <= W2_data[55];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
  end // always @(posedge)
  assign R0_data = R0_en ? Memory[R0_addr] : 56'bx;	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
  assign R1_data = R1_en ? Memory[R1_addr] : 56'bx;	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
  assign R2_data = R2_en ? Memory[R2_addr] : 56'bx;	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
endmodule

module GHR(	// @[<stdin>:3:10]
  input        clock,	// @[<stdin>:4:11]
               io_branch,	// @[CRRV/src/core/brachpediction/GRH.scala:7:14]
               io_taken,	// @[CRRV/src/core/brachpediction/GRH.scala:7:14]
  output [4:0] io_ghr	// @[CRRV/src/core/brachpediction/GRH.scala:7:14]
);

  reg [4:0] ghr;	// @[CRRV/src/core/brachpediction/GRH.scala:13:16]
  always @(posedge clock) begin	// @[<stdin>:4:11]
    if (io_branch)	// @[CRRV/src/core/brachpediction/GRH.scala:7:14]
      ghr <= {ghr[3:0], io_taken};	// @[CRRV/src/core/brachpediction/GRH.scala:13:16, :16:{15,19}]
  end // always @(posedge)
  assign io_ghr = ghr;	// @[<stdin>:3:10, CRRV/src/core/brachpediction/GRH.scala:13:16]
endmodule

module PHT(	// @[<stdin>:16:10]
  input        clock,	// @[<stdin>:17:11]
               reset,	// @[<stdin>:18:11]
               io_lastBranch,	// @[CRRV/src/core/brachpediction/PHT.scala:11:14]
               io_lastTaken,	// @[CRRV/src/core/brachpediction/PHT.scala:11:14]
  input  [4:0] io_lastIndex,	// @[CRRV/src/core/brachpediction/PHT.scala:11:14]
               io_index,	// @[CRRV/src/core/brachpediction/PHT.scala:11:14]
  output       io_taken	// @[CRRV/src/core/brachpediction/PHT.scala:11:14]
);

  reg  [1:0] casez_tmp;	// @[CRRV/src/core/brachpediction/PHT.scala:23:33]
  reg  [1:0] casez_tmp_0;	// @[CRRV/src/core/brachpediction/PHT.scala:40:33]
  reg  [1:0] counters_0;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_4;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_5;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_6;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_7;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_8;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_9;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_10;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_11;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_12;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_13;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_14;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_15;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_16;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_17;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_18;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_19;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_20;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_21;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_22;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_23;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_24;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_25;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_26;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_27;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_28;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_29;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_30;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  reg  [1:0] counters_31;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25]
  always_comb begin	// @[CRRV/src/core/brachpediction/PHT.scala:23:33]
    casez (io_lastIndex)	// @[CRRV/src/core/brachpediction/PHT.scala:23:33]
      5'b00000:
        casez_tmp = counters_0;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00001:
        casez_tmp = counters_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00010:
        casez_tmp = counters_2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00011:
        casez_tmp = counters_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00100:
        casez_tmp = counters_4;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00101:
        casez_tmp = counters_5;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00110:
        casez_tmp = counters_6;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00111:
        casez_tmp = counters_7;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01000:
        casez_tmp = counters_8;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01001:
        casez_tmp = counters_9;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01010:
        casez_tmp = counters_10;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01011:
        casez_tmp = counters_11;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01100:
        casez_tmp = counters_12;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01101:
        casez_tmp = counters_13;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01110:
        casez_tmp = counters_14;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01111:
        casez_tmp = counters_15;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10000:
        casez_tmp = counters_16;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10001:
        casez_tmp = counters_17;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10010:
        casez_tmp = counters_18;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10011:
        casez_tmp = counters_19;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10100:
        casez_tmp = counters_20;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10101:
        casez_tmp = counters_21;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10110:
        casez_tmp = counters_22;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10111:
        casez_tmp = counters_23;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11000:
        casez_tmp = counters_24;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11001:
        casez_tmp = counters_25;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11010:
        casez_tmp = counters_26;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11011:
        casez_tmp = counters_27;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11100:
        casez_tmp = counters_28;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11101:
        casez_tmp = counters_29;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11110:
        casez_tmp = counters_30;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      default:
        casez_tmp = counters_31;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
    endcase	// @[CRRV/src/core/brachpediction/PHT.scala:23:33]
  end // always_comb
  always_comb begin	// @[CRRV/src/core/brachpediction/PHT.scala:23:33]
    casez (io_index)	// @[CRRV/src/core/brachpediction/PHT.scala:23:33]
      5'b00000:
        casez_tmp_0 = counters_0;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00001:
        casez_tmp_0 = counters_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00010:
        casez_tmp_0 = counters_2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00011:
        casez_tmp_0 = counters_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00100:
        casez_tmp_0 = counters_4;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00101:
        casez_tmp_0 = counters_5;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00110:
        casez_tmp_0 = counters_6;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b00111:
        casez_tmp_0 = counters_7;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01000:
        casez_tmp_0 = counters_8;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01001:
        casez_tmp_0 = counters_9;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01010:
        casez_tmp_0 = counters_10;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01011:
        casez_tmp_0 = counters_11;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01100:
        casez_tmp_0 = counters_12;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01101:
        casez_tmp_0 = counters_13;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01110:
        casez_tmp_0 = counters_14;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b01111:
        casez_tmp_0 = counters_15;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10000:
        casez_tmp_0 = counters_16;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10001:
        casez_tmp_0 = counters_17;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10010:
        casez_tmp_0 = counters_18;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10011:
        casez_tmp_0 = counters_19;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10100:
        casez_tmp_0 = counters_20;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10101:
        casez_tmp_0 = counters_21;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10110:
        casez_tmp_0 = counters_22;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b10111:
        casez_tmp_0 = counters_23;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11000:
        casez_tmp_0 = counters_24;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11001:
        casez_tmp_0 = counters_25;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11010:
        casez_tmp_0 = counters_26;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11011:
        casez_tmp_0 = counters_27;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11100:
        casez_tmp_0 = counters_28;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11101:
        casez_tmp_0 = counters_29;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      5'b11110:
        casez_tmp_0 = counters_30;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
      default:
        casez_tmp_0 = counters_31;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33]
    endcase	// @[CRRV/src/core/brachpediction/PHT.scala:23:33]
  end // always_comb
  wire [1:0] _counters_T_1 = casez_tmp - 2'h1;	// @[CRRV/src/core/brachpediction/PHT.scala:23:33, :25:58]
  wire [1:0] _counters_T_3 = casez_tmp + 2'h1;	// @[CRRV/src/core/brachpediction/PHT.scala:23:33, :25:58, :29:58]
  wire [1:0] _GEN = io_lastTaken ? casez_tmp + 2'h1 : casez_tmp - 2'h1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :23:33, :25:58, :33:{32,58}, :35:{32,58}]
  wire       _GEN_0 = io_lastIndex == 5'h0;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_1 = io_lastIndex == 5'h1;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_2 = io_lastIndex == 5'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_3 = io_lastIndex == 5'h3;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_4 = io_lastIndex == 5'h4;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_5 = io_lastIndex == 5'h5;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_6 = io_lastIndex == 5'h6;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_7 = io_lastIndex == 5'h7;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_8 = io_lastIndex == 5'h8;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_9 = io_lastIndex == 5'h9;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_10 = io_lastIndex == 5'hA;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_11 = io_lastIndex == 5'hB;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_12 = io_lastIndex == 5'hC;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_13 = io_lastIndex == 5'hD;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_14 = io_lastIndex == 5'hE;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_15 = io_lastIndex == 5'hF;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_16 = io_lastIndex == 5'h10;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_17 = io_lastIndex == 5'h11;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_18 = io_lastIndex == 5'h12;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_19 = io_lastIndex == 5'h13;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_20 = io_lastIndex == 5'h14;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_21 = io_lastIndex == 5'h15;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_22 = io_lastIndex == 5'h16;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_23 = io_lastIndex == 5'h17;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_24 = io_lastIndex == 5'h18;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_25 = io_lastIndex == 5'h19;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_26 = io_lastIndex == 5'h1A;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_27 = io_lastIndex == 5'h1B;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_28 = io_lastIndex == 5'h1C;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_29 = io_lastIndex == 5'h1D;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  wire       _GEN_30 = io_lastIndex == 5'h1E;	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
  always @(posedge clock) begin	// @[<stdin>:17:11]
    if (reset) begin	// @[<stdin>:17:11]
      counters_0 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_1 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_2 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_3 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_4 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_5 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_6 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_7 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_8 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_9 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_10 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_11 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_12 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_13 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_14 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_15 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_16 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_17 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_18 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_19 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_20 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_21 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_22 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_23 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_24 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_25 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_26 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_27 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_28 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_29 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_30 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
      counters_31 <= 2'h2;	// @[CRRV/src/core/brachpediction/PHT.scala:20:{25,33}]
    end
    else if (io_lastBranch) begin	// @[CRRV/src/core/brachpediction/PHT.scala:11:14]
      if (&casez_tmp) begin	// @[CRRV/src/core/brachpediction/PHT.scala:23:33]
        if (~io_lastTaken & _GEN_0)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_0 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_1)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_1 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_2)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_2 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_3)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_3 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_4)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_4 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_5)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_5 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_6)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_6 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_7)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_7 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_8)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_8 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_9)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_9 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_10)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_10 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_11)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_11 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_12)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_12 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_13)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_13 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_14)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_14 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_15)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_15 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_16)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_16 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_17)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_17 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_18)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_18 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_19)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_19 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_20)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_20 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_21)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_21 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_22)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_22 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_23)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_23 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_24)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_24 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_25)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_25 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_26)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_26 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_27)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_27 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_28)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_28 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_29)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_29 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & _GEN_30)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_30 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
        if (~io_lastTaken & (&io_lastIndex))	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :24:{12,27}, :25:32]
          counters_31 <= _counters_T_1;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:58]
      end
      else if (casez_tmp == 2'h0) begin	// @[CRRV/src/core/brachpediction/PHT.scala:23:33, :25:58, :27:39]
        if (io_lastTaken & _GEN_0)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_0 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_1)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_1 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_2)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_2 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_3)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_3 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_4)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_4 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_5)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_5 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_6)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_6 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_7)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_7 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_8)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_8 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_9)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_9 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_10)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_10 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_11)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_11 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_12)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_12 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_13)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_13 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_14)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_14 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_15)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_15 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_16)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_16 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_17)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_17 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_18)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_18 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_19)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_19 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_20)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_20 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_21)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_21 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_22)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_22 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_23)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_23 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_24)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_24 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_25)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_25 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_26)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_26 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_27)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_27 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_28)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_28 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_29)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_29 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & _GEN_30)	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_30 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
        if (io_lastTaken & (&io_lastIndex))	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :25:32, :28:26, :29:32]
          counters_31 <= _counters_T_3;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :29:58]
      end
      else begin	// @[CRRV/src/core/brachpediction/PHT.scala:27:39]
        if (_GEN_0)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_0 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_1)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_1 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_2)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_2 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_3)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_3 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_4)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_4 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_5)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_5 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_6)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_6 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_7)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_7 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_8)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_8 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_9)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_9 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_10)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_10 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_11)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_11 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_12)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_12 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_13)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_13 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_14)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_14 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_15)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_15 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_16)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_16 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_17)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_17 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_18)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_18 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_19)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_19 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_20)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_20 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_21)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_21 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_22)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_22 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_23)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_23 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_24)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_24 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_25)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_25 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_26)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_26 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_27)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_27 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_28)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_28 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_29)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_29 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (_GEN_30)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_30 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
        if (&io_lastIndex)	// @[CRRV/src/core/brachpediction/PHT.scala:25:32]
          counters_31 <= _GEN;	// @[CRRV/src/core/brachpediction/PHT.scala:20:25, :33:32, :35:32]
      end
    end
  end // always @(posedge)
  assign io_taken = casez_tmp_0[1];	// @[<stdin>:16:10, CRRV/src/core/brachpediction/PHT.scala:40:33]
endmodule

module BTB(	// @[<stdin>:84:10]
  input         clock,	// @[<stdin>:85:11]
                reset,	// @[<stdin>:86:11]
                io_branch,	// @[CRRV/src/core/brachpediction/BTB.scala:18:14]
                io_jump,	// @[CRRV/src/core/brachpediction/BTB.scala:18:14]
  input  [31:0] io_pc,	// @[CRRV/src/core/brachpediction/BTB.scala:18:14]
                io_target,	// @[CRRV/src/core/brachpediction/BTB.scala:18:14]
                io_lookupPc,	// @[CRRV/src/core/brachpediction/BTB.scala:18:14]
  output        io_lookupBranch,	// @[CRRV/src/core/brachpediction/BTB.scala:18:14]
                io_lookupJump,	// @[CRRV/src/core/brachpediction/BTB.scala:18:14]
  output [31:0] io_lookupTarget	// @[CRRV/src/core/brachpediction/BTB.scala:18:14]
);

  wire [29:0] lines_MPORT_2_data_target;	// @[CRRV/src/core/brachpediction/BTB.scala:47:37]
  wire [24:0] lines_MPORT_1_data_pc;	// @[CRRV/src/core/brachpediction/BTB.scala:36:26]
  wire [55:0] _lines_ext_R0_data;	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
  wire [55:0] _lines_ext_R1_data;	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
  wire [55:0] _lines_ext_R2_data;	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
  reg         casez_tmp;	// @[CRRV/src/core/brachpediction/BTB.scala:40:41]
  reg         valids_0;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_1;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_2;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_3;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_4;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_5;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_6;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_7;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_8;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_9;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_10;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_11;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_12;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_13;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_14;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_15;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_16;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_17;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_18;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_19;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_20;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_21;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_22;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_23;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_24;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_25;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_26;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_27;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_28;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_29;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_30;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  reg         valids_31;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23]
  assign lines_MPORT_1_data_pc = io_pc[31:7];	// @[CRRV/src/core/brachpediction/BTB.scala:36:26]
  always_comb begin	// @[CRRV/src/core/brachpediction/BTB.scala:40:41]
    casez (io_lookupPc[6:2])	// @[CRRV/src/core/brachpediction/BTB.scala:39:32, :40:41]
      5'b00000:
        casez_tmp = valids_0;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b00001:
        casez_tmp = valids_1;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b00010:
        casez_tmp = valids_2;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b00011:
        casez_tmp = valids_3;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b00100:
        casez_tmp = valids_4;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b00101:
        casez_tmp = valids_5;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b00110:
        casez_tmp = valids_6;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b00111:
        casez_tmp = valids_7;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b01000:
        casez_tmp = valids_8;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b01001:
        casez_tmp = valids_9;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b01010:
        casez_tmp = valids_10;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b01011:
        casez_tmp = valids_11;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b01100:
        casez_tmp = valids_12;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b01101:
        casez_tmp = valids_13;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b01110:
        casez_tmp = valids_14;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b01111:
        casez_tmp = valids_15;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b10000:
        casez_tmp = valids_16;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b10001:
        casez_tmp = valids_17;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b10010:
        casez_tmp = valids_18;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b10011:
        casez_tmp = valids_19;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b10100:
        casez_tmp = valids_20;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b10101:
        casez_tmp = valids_21;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b10110:
        casez_tmp = valids_22;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b10111:
        casez_tmp = valids_23;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b11000:
        casez_tmp = valids_24;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b11001:
        casez_tmp = valids_25;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b11010:
        casez_tmp = valids_26;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b11011:
        casez_tmp = valids_27;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b11100:
        casez_tmp = valids_28;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b11101:
        casez_tmp = valids_29;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      5'b11110:
        casez_tmp = valids_30;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
      default:
        casez_tmp = valids_31;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :40:41]
    endcase	// @[CRRV/src/core/brachpediction/BTB.scala:39:32, :40:41]
  end // always_comb
  wire        btbHit = casez_tmp & _lines_ext_R0_data[25:1] == io_lookupPc[31:7];	// @[CRRV/src/core/brachpediction/BTB.scala:34:19, :38:32, :40:{41,66}]
  assign lines_MPORT_2_data_target = io_target[31:2];	// @[CRRV/src/core/brachpediction/BTB.scala:47:37]
  always @(posedge clock) begin	// @[<stdin>:85:11]
    if (reset) begin	// @[<stdin>:85:11]
      valids_0 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_1 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_2 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_3 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_4 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_5 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_6 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_7 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_8 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_9 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_10 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_11 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_12 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_13 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_14 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_15 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_16 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_17 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_18 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_19 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_20 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_21 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_22 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_23 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_24 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_25 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_26 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_27 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_28 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_29 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_30 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
      valids_31 <= 1'h0;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:33:23]
    end
    else begin	// @[<stdin>:85:11]
      valids_0 <= io_branch & io_pc[6:2] == 5'h0 | valids_0;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_1 <= io_branch & io_pc[6:2] == 5'h1 | valids_1;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_2 <= io_branch & io_pc[6:2] == 5'h2 | valids_2;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_3 <= io_branch & io_pc[6:2] == 5'h3 | valids_3;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_4 <= io_branch & io_pc[6:2] == 5'h4 | valids_4;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_5 <= io_branch & io_pc[6:2] == 5'h5 | valids_5;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_6 <= io_branch & io_pc[6:2] == 5'h6 | valids_6;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_7 <= io_branch & io_pc[6:2] == 5'h7 | valids_7;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_8 <= io_branch & io_pc[6:2] == 5'h8 | valids_8;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_9 <= io_branch & io_pc[6:2] == 5'h9 | valids_9;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_10 <= io_branch & io_pc[6:2] == 5'hA | valids_10;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_11 <= io_branch & io_pc[6:2] == 5'hB | valids_11;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_12 <= io_branch & io_pc[6:2] == 5'hC | valids_12;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_13 <= io_branch & io_pc[6:2] == 5'hD | valids_13;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_14 <= io_branch & io_pc[6:2] == 5'hE | valids_14;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_15 <= io_branch & io_pc[6:2] == 5'hF | valids_15;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_16 <= io_branch & io_pc[6:2] == 5'h10 | valids_16;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_17 <= io_branch & io_pc[6:2] == 5'h11 | valids_17;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_18 <= io_branch & io_pc[6:2] == 5'h12 | valids_18;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_19 <= io_branch & io_pc[6:2] == 5'h13 | valids_19;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_20 <= io_branch & io_pc[6:2] == 5'h14 | valids_20;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_21 <= io_branch & io_pc[6:2] == 5'h15 | valids_21;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_22 <= io_branch & io_pc[6:2] == 5'h16 | valids_22;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_23 <= io_branch & io_pc[6:2] == 5'h17 | valids_23;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_24 <= io_branch & io_pc[6:2] == 5'h18 | valids_24;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_25 <= io_branch & io_pc[6:2] == 5'h19 | valids_25;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_26 <= io_branch & io_pc[6:2] == 5'h1A | valids_26;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_27 <= io_branch & io_pc[6:2] == 5'h1B | valids_27;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_28 <= io_branch & io_pc[6:2] == 5'h1C | valids_28;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_29 <= io_branch & io_pc[6:2] == 5'h1D | valids_29;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_30 <= io_branch & io_pc[6:2] == 5'h1E | valids_30;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
      valids_31 <= io_branch & (&(io_pc[6:2])) | valids_31;	// @[CRRV/src/core/brachpediction/BTB.scala:33:23, :37:26, :43:19, :44:25]
    end
  end // always @(posedge)
  lines_combMem lines_ext (	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    .R0_addr (io_lookupPc[6:2]),	// @[CRRV/src/core/brachpediction/BTB.scala:39:32]
    .R0_en   (1'h1),	// @[<stdin>:84:10]
    .R0_clk  (clock),
    .R1_addr (io_lookupPc[6:2]),	// @[CRRV/src/core/brachpediction/BTB.scala:39:32]
    .R1_en   (1'h1),	// @[<stdin>:84:10]
    .R1_clk  (clock),
    .R2_addr (io_lookupPc[6:2]),	// @[CRRV/src/core/brachpediction/BTB.scala:39:32]
    .R2_en   (1'h1),	// @[<stdin>:84:10]
    .R2_clk  (clock),
    .W0_addr (io_pc[6:2]),	// @[CRRV/src/core/brachpediction/BTB.scala:37:26]
    .W0_en   (io_branch),
    .W0_clk  (clock),
    .W0_data ({55'h0, io_jump}),	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    .W0_mask (56'h1),	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    .W1_addr (io_pc[6:2]),	// @[CRRV/src/core/brachpediction/BTB.scala:37:26]
    .W1_en   (io_branch),
    .W1_clk  (clock),
    .W1_data ({30'h0, lines_MPORT_1_data_pc, 1'h0}),	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:34:19, :36:26]
    .W1_mask (56'h3FFFFFE),	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    .W2_addr (io_pc[6:2]),	// @[CRRV/src/core/brachpediction/BTB.scala:37:26]
    .W2_en   (io_branch),
    .W2_clk  (clock),
    .W2_data ({lines_MPORT_2_data_target, 26'h0}),	// @[CRRV/src/core/brachpediction/BTB.scala:34:19, :47:37]
    .W2_mask (56'hFFFFFFFC000000),	// @[CRRV/src/core/brachpediction/BTB.scala:34:19]
    .R0_data (_lines_ext_R0_data),
    .R1_data (_lines_ext_R1_data),
    .R2_data (_lines_ext_R2_data)
  );
  assign io_lookupBranch = btbHit;	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:40:41]
  assign io_lookupJump = btbHit & _lines_ext_R1_data[0];	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:34:19, :40:41, :52:25]
  assign io_lookupTarget = {btbHit ? _lines_ext_R2_data[55:26] : 30'h0, 2'h0};	// @[<stdin>:84:10, CRRV/src/core/brachpediction/BTB.scala:34:19, :40:41, :53:{25,29}]
endmodule

module BranchPredictor(	// @[<stdin>:150:10]
  input         clock,	// @[<stdin>:151:11]
                reset,	// @[<stdin>:152:11]
                io_branchInfo_branch,	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:11:14]
                io_branchInfo_jump,	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:11:14]
                io_branchInfo_taken,	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:11:14]
  input  [4:0]  io_branchInfo_index,	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:11:14]
  input  [31:0] io_branchInfo_pc,	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:11:14]
                io_branchInfo_target,	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:11:14]
                io_lookupPc,	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:11:14]
  output        io_predTaken,	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:11:14]
  output [31:0] io_predTarget,	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:11:14]
  output [4:0]  io_predIndex	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:11:14]
);

  wire       _btb_io_lookupBranch;	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:21:19]
  wire       _btb_io_lookupJump;	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:21:19]
  wire       _pht_io_taken;	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:20:19]
  wire [4:0] _ghr_io_ghr;	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:19:19]
  wire [4:0] index = io_lookupPc[6:2] ^ _ghr_io_ghr;	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:19:19, :26:{26,44}]
  GHR ghr (	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:19:19]
    .clock     (clock),
    .io_branch (io_branchInfo_branch),
    .io_taken  (io_branchInfo_taken),
    .io_ghr    (_ghr_io_ghr)
  );
  PHT pht (	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:20:19]
    .clock         (clock),
    .reset         (reset),
    .io_lastBranch (io_branchInfo_branch),
    .io_lastTaken  (io_branchInfo_taken),
    .io_lastIndex  (io_branchInfo_index),
    .io_index      (index),	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:26:44]
    .io_taken      (_pht_io_taken)
  );
  BTB btb (	// @[CRRV/src/core/brachpediction/BranchPredictor.scala:21:19]
    .clock           (clock),
    .reset           (reset),
    .io_branch       (io_branchInfo_branch),
    .io_jump         (io_branchInfo_jump),
    .io_pc           (io_branchInfo_pc),
    .io_target       (io_branchInfo_target),
    .io_lookupPc     (io_lookupPc),
    .io_lookupBranch (_btb_io_lookupBranch),
    .io_lookupJump   (_btb_io_lookupJump),
    .io_lookupTarget (io_predTarget)
  );
  assign io_predTaken = _btb_io_lookupBranch & (_pht_io_taken | _btb_io_lookupJump);	// @[<stdin>:150:10, CRRV/src/core/brachpediction/BranchPredictor.scala:20:19, :21:19, :38:{40,57}]
  assign io_predIndex = index;	// @[<stdin>:150:10, CRRV/src/core/brachpediction/BranchPredictor.scala:26:44]
endmodule

module FetchStage(	// @[<stdin>:183:10]
  input         clock,	// @[<stdin>:184:11]
                reset,	// @[<stdin>:185:11]
                io_control_flush,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
  input  [31:0] io_control_flushPC,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
  input         io_control_stall,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
                io_instRom_ready,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
                io_branchInfo_branch,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
                io_branchInfo_jump,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
                io_branchInfo_taken,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
  input  [4:0]  io_branchInfo_index,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
  input  [31:0] io_branchInfo_pc,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
                io_branchInfo_target,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
  output        io_control_stallReq,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
  output [31:0] io_instRom_bits_addr,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
  output        io_if2id_IF_instValid,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
  output [31:0] io_if2id_IF_pc,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
  output        io_if2id_IF_predTaken,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
  output [31:0] io_if2id_IF_predTarget,	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
  output [4:0]  io_if2id_IF_predIndex	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
);

  wire        _bpu_io_predTaken;	// @[CRRV/src/core/pipeline/FetchStage.scala:18:19]
  wire [31:0] _bpu_io_predTarget;	// @[CRRV/src/core/pipeline/FetchStage.scala:18:19]
  reg  [31:0] pc;	// @[CRRV/src/core/pipeline/FetchStage.scala:17:20]
  always @(posedge clock) begin	// @[<stdin>:184:11]
    if (reset)	// @[<stdin>:184:11]
      pc <= 32'h30000000;	// @[CRRV/src/core/pipeline/FetchStage.scala:17:20]
    else if (io_control_flush)	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
      pc <= io_control_flushPC;	// @[CRRV/src/core/pipeline/FetchStage.scala:17:20]
    else if (io_control_stall) begin	// @[CRRV/src/core/pipeline/FetchStage.scala:10:14]
    end
    else if (_bpu_io_predTaken)	// @[CRRV/src/core/pipeline/FetchStage.scala:18:19]
      pc <= _bpu_io_predTarget;	// @[CRRV/src/core/pipeline/FetchStage.scala:17:20, :18:19]
    else	// @[CRRV/src/core/pipeline/FetchStage.scala:18:19]
      pc <= pc + 32'h4;	// @[CRRV/src/core/pipeline/FetchStage.scala:17:20, :23:8]
  end // always @(posedge)
  BranchPredictor bpu (	// @[CRRV/src/core/pipeline/FetchStage.scala:18:19]
    .clock                (clock),
    .reset                (reset),
    .io_branchInfo_branch (io_branchInfo_branch),
    .io_branchInfo_jump   (io_branchInfo_jump),
    .io_branchInfo_taken  (io_branchInfo_taken),
    .io_branchInfo_index  (io_branchInfo_index),
    .io_branchInfo_pc     (io_branchInfo_pc),
    .io_branchInfo_target (io_branchInfo_target),
    .io_lookupPc          (pc),	// @[CRRV/src/core/pipeline/FetchStage.scala:17:20]
    .io_predTaken         (_bpu_io_predTaken),
    .io_predTarget        (_bpu_io_predTarget),
    .io_predIndex         (io_if2id_IF_predIndex)
  );
  assign io_control_stallReq = ~io_instRom_ready;	// @[<stdin>:183:10, CRRV/src/core/pipeline/FetchStage.scala:33:26]
  assign io_instRom_bits_addr = pc;	// @[<stdin>:183:10, CRRV/src/core/pipeline/FetchStage.scala:17:20]
  assign io_if2id_IF_instValid = io_instRom_ready;	// @[<stdin>:183:10]
  assign io_if2id_IF_pc = pc;	// @[<stdin>:183:10, CRRV/src/core/pipeline/FetchStage.scala:17:20]
  assign io_if2id_IF_predTaken = _bpu_io_predTaken;	// @[<stdin>:183:10, CRRV/src/core/pipeline/FetchStage.scala:18:19]
  assign io_if2id_IF_predTarget = _bpu_io_predTarget;	// @[<stdin>:183:10, CRRV/src/core/pipeline/FetchStage.scala:18:19]
endmodule

module PipelineStage(	// @[<stdin>:214:10]
  input         clock,	// @[<stdin>:215:11]
                reset,	// @[<stdin>:216:11]
                io_flush,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_stallPrev,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_stallNext,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_IF_instValid,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_IF_pc,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input         io_prev_IF_predTaken,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_IF_predTarget,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [4:0]  io_prev_IF_predIndex,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output        io_next_IF_instValid,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_IF_pc,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output        io_next_IF_predTaken,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_IF_predTarget,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [4:0]  io_next_IF_predIndex	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
);

  reg         pipelineReg_IF_instValid;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_IF_pc;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg         pipelineReg_IF_predTaken;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_IF_predTarget;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [4:0]  pipelineReg_IF_predIndex;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  wire        _GEN = io_flush | io_stallPrev & ~io_stallNext;	// @[CRRV/src/core/pipeline/PipelineStage.scala:24:{17,34,37}]
  always @(posedge clock) begin	// @[<stdin>:215:11]
    if (reset) begin	// @[<stdin>:215:11]
      pipelineReg_IF_instValid <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_IF_pc <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_IF_predTaken <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_IF_predTarget <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_IF_predIndex <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
    end
    else begin	// @[<stdin>:215:11]
      pipelineReg_IF_instValid <=
        ~_GEN & (io_stallPrev ? pipelineReg_IF_instValid : io_prev_IF_instValid);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
      if (_GEN) begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:24:17]
        pipelineReg_IF_pc <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_IF_predTarget <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_IF_predIndex <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      end
      else if (io_stallPrev) begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
      end
      else begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
        pipelineReg_IF_pc <= io_prev_IF_pc;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_IF_predTarget <= io_prev_IF_predTarget;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_IF_predIndex <= io_prev_IF_predIndex;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
      end
      pipelineReg_IF_predTaken <=
        ~_GEN & (io_stallPrev ? pipelineReg_IF_predTaken : io_prev_IF_predTaken);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
    end
  end // always @(posedge)
  assign io_next_IF_instValid = pipelineReg_IF_instValid;	// @[<stdin>:214:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_IF_pc = pipelineReg_IF_pc;	// @[<stdin>:214:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_IF_predTaken = pipelineReg_IF_predTaken;	// @[<stdin>:214:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_IF_predTarget = pipelineReg_IF_predTarget;	// @[<stdin>:214:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_IF_predIndex = pipelineReg_IF_predIndex;	// @[<stdin>:214:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
endmodule

module DecodeStage(	// @[<stdin>:244:10]
  input         clock,	// @[<stdin>:245:11]
                io_if2id_IF_instValid,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  input  [31:0] io_if2id_IF_pc,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  input         io_if2id_IF_predTaken,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  input  [31:0] io_if2id_IF_predTarget,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  input  [4:0]  io_if2id_IF_predIndex,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  input         io_control_stall,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  input  [31:0] io_read_rdata,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
                io_regRead1_data,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
                io_regRead2_data,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output        io_control_flushIF,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [31:0] io_control_flushPc,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output        io_id2exe_IF_instValid,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [31:0] io_id2exe_IF_pc,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
                io_id2exe_ID_inst,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [3:0]  io_id2exe_ID_aluOp,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
                io_id2exe_ID_mduOp,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [31:0] io_id2exe_ID_src1,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
                io_id2exe_ID_src2,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [4:0]  io_id2exe_ID_lsuOp,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [31:0] io_id2exe_ID_lsuData,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output        io_id2exe_ID_regWen,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [4:0]  io_id2exe_ID_regWaddr,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [2:0]  io_id2exe_ID_csrOp,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [11:0] io_id2exe_ID_csrAddr,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [31:0] io_id2exe_ID_csrWriteData,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [2:0]  io_id2exe_ID_exceptType,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output        io_branchInfo_branch,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
                io_branchInfo_jump,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
                io_branchInfo_taken,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [4:0]  io_branchInfo_index,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [31:0] io_branchInfo_pc,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
                io_branchInfo_target,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output        io_regRead1_en,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [4:0]  io_regRead1_addr,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output        io_regRead2_en,	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
  output [4:0]  io_regRead2_addr	// @[CRRV/src/core/pipeline/DecodeStage.scala:12:14]
);

  reg         casez_tmp;	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51]
  reg         stallDelay;	// @[CRRV/src/core/pipeline/DecodeStage.scala:24:27]
  reg  [31:0] lastInst;	// @[CRRV/src/core/pipeline/DecodeStage.scala:25:23]
  wire [31:0] inst =
    io_if2id_IF_instValid ? (stallDelay ? lastInst : io_read_rdata) : 32'h13;	// @[CRRV/src/core/pipeline/DecodeStage.scala:24:27, :25:23, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire [31:0] immU = {inst[31:12], 12'h0};	// @[CRRV/src/core/pipeline/DecodeStage.scala:42:{17,22}, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire [16:0] _GEN = {inst[31:25], inst[14:12], inst[6:0]};	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_0 = _GEN == 17'h33;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire [9:0]  _GEN_1 = {inst[14:12], inst[6:0]};	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_2 = _GEN_1 == 10'h13;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_3 = _GEN == 17'h8033;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_4 = inst[6:0] == 7'h37;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_5 = inst[6:0] == 7'h17;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_6 = _GEN == 17'h233;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_7 = _GEN_1 == 10'h213;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_8 = _GEN == 17'h333;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_9 = _GEN_1 == 10'h313;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_10 = _GEN == 17'h3B3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_11 = _GEN_1 == 10'h393;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_12 = _GEN == 17'h133;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_13 = _GEN_1 == 10'h113;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_14 = _GEN == 17'h1B3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_15 = _GEN_1 == 10'h193;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_16 = _GEN == 17'hB3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_17 = _GEN == 17'h93;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_18 = _GEN == 17'h2B3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_19 = _GEN == 17'h293;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_20 = _GEN == 17'h82B3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_21 = _GEN == 17'h8293;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_22 = _GEN_1 == 10'h63;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_23 = _GEN_1 == 10'hE3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_24 = _GEN_1 == 10'h263;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_25 = _GEN_1 == 10'h2E3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_26 = _GEN_1 == 10'h363;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_27 = _GEN_1 == 10'h3E3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_28 = inst[6:0] == 7'h6F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_29 = _GEN_1 == 10'h67;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_30 = _GEN_1 == 10'h3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_31 = _GEN_1 == 10'h83;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_32 = _GEN_1 == 10'h103;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_33 = _GEN_1 == 10'h203;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_34 = _GEN_1 == 10'h283;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_35 = _GEN_1 == 10'h23;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_36 = _GEN_1 == 10'hA3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_37 = _GEN_1 == 10'h123;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_38 = _GEN_1 == 10'hF3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_39 = _GEN_1 == 10'h173;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_40 = _GEN_1 == 10'h1F3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_41 = _GEN_1 == 10'h2F3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_42 = _GEN_1 == 10'h373;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_43 = _GEN_1 == 10'h3F3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_44 = _GEN == 17'h433;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_45 = _GEN == 17'h4B3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_46 = _GEN == 17'h533;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_47 = _GEN == 17'h5B3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_48 = _GEN == 17'h633;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_49 = _GEN == 17'h6B3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_50 = _GEN == 17'h733;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_51 = _GEN == 17'h7B3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_52 = {inst[31:27], inst[24:20], inst[14:12], inst[6:0]} == 20'h1012F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire [14:0] _GEN_53 = {inst[31:27], inst[14:12], inst[6:0]};	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_54 = _GEN_53 == 15'hD2F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_55 = _GEN_53 == 15'h52F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_56 = _GEN_53 == 15'h12F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_57 = _GEN_53 == 15'h112F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_58 = _GEN_53 == 15'h312F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_59 = _GEN_53 == 15'h212F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_60 = _GEN_53 == 15'h412F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_61 = _GEN_53 == 15'h512F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_62 = _GEN_53 == 15'h612F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_63 = _GEN_53 == 15'h712F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_64 = {inst[31:28], inst[19:0]} == 24'hF;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_65 = inst == 32'h100F;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_66 = inst == 32'h73;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_67 = inst == 32'h100073;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_68 = inst == 32'h10500073;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_69 = inst == 32'h30200073;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _GEN_70 =
    _GEN_54 | _GEN_55 | _GEN_56 | _GEN_57 | _GEN_58 | _GEN_59 | _GEN_60 | _GEN_61
    | _GEN_62;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_71 =
    _GEN_44 | _GEN_45 | _GEN_46 | _GEN_47 | _GEN_48 | _GEN_49 | _GEN_50 | _GEN_51
    | _GEN_52 | _GEN_70;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_72 = _GEN_41 | _GEN_42 | _GEN_43;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_73 = _GEN_22 | _GEN_23 | _GEN_24 | _GEN_25 | _GEN_26 | _GEN_27;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_74 = _GEN_4 | _GEN_5;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_75 = _GEN_0 | _GEN_2 | _GEN_3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        regEn1 =
    _GEN_75 | ~_GEN_74
    & (_GEN_6 | _GEN_7 | _GEN_8 | _GEN_9 | _GEN_10 | _GEN_11 | _GEN_12 | _GEN_13 | _GEN_14
       | _GEN_15 | _GEN_16 | _GEN_17 | _GEN_18 | _GEN_19 | _GEN_20 | _GEN_21 | _GEN_73
       | ~_GEN_28
       & (_GEN_29 | _GEN_30 | _GEN_31 | _GEN_32 | _GEN_33 | _GEN_34 | _GEN_35 | _GEN_36
          | _GEN_37 | _GEN_38 | _GEN_39 | _GEN_40 | ~_GEN_72 & (_GEN_71 | _GEN_63)));	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_76 =
    _GEN_44 | _GEN_45 | _GEN_46 | _GEN_47 | _GEN_48 | _GEN_49 | _GEN_50 | _GEN_51;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_77 = _GEN_38 | _GEN_39 | _GEN_40 | _GEN_72;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_78 = _GEN_35 | _GEN_36 | _GEN_37;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_79 = _GEN_30 | _GEN_31 | _GEN_32 | _GEN_33 | _GEN_34;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_80 = _GEN_28 | _GEN_29 | _GEN_79;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_81 = _GEN_20 | _GEN_21;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_82 =
    _GEN_6 | _GEN_7 | _GEN_8 | _GEN_9 | _GEN_10 | _GEN_11 | _GEN_12 | _GEN_13 | _GEN_14
    | _GEN_15 | _GEN_16 | _GEN_17 | _GEN_18 | _GEN_19 | _GEN_81;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_83 = _GEN_0 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_82;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_84 =
    _GEN_52 | _GEN_54 | _GEN_55 | _GEN_56 | _GEN_57 | _GEN_58 | _GEN_59 | _GEN_60
    | _GEN_61 | _GEN_62 | _GEN_63;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_85 = _GEN_30 | _GEN_31 | _GEN_32 | _GEN_33 | _GEN_34 | _GEN_78;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_86 = _GEN_28 | _GEN_29;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire [3:0]  aluSrc1Op =
    _GEN_75
      ? 4'h1
      : _GEN_4
          ? 4'h0
          : _GEN_5
              ? 4'h7
              : _GEN_82
                  ? 4'h1
                  : _GEN_73
                      ? 4'h0
                      : _GEN_86
                          ? 4'h7
                          : _GEN_85
                              ? 4'h1
                              : _GEN_77
                                  ? 4'h0
                                  : {3'h0,
                                     _GEN_44 | _GEN_45 | _GEN_46 | _GEN_47 | _GEN_48
                                       | _GEN_49 | _GEN_50 | _GEN_51 | _GEN_84};	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire [3:0]  aluSrc2Op =
    _GEN_0
      ? 4'h2
      : _GEN_2
          ? 4'h3
          : _GEN_3
              ? 4'h2
              : _GEN_74
                  ? 4'h5
                  : _GEN_6
                      ? 4'h2
                      : _GEN_7
                          ? 4'h3
                          : _GEN_8
                              ? 4'h2
                              : _GEN_9
                                  ? 4'h3
                                  : _GEN_10
                                      ? 4'h2
                                      : _GEN_11
                                          ? 4'h3
                                          : _GEN_12
                                              ? 4'h2
                                              : _GEN_13
                                                  ? 4'h3
                                                  : _GEN_14
                                                      ? 4'h2
                                                      : _GEN_15
                                                          ? 4'h3
                                                          : _GEN_16
                                                              ? 4'h2
                                                              : _GEN_17
                                                                  ? 4'h6
                                                                  : _GEN_18
                                                                      ? 4'h2
                                                                      : _GEN_19
                                                                          ? 4'h6
                                                                          : _GEN_20
                                                                              ? 4'h2
                                                                              : _GEN_21
                                                                                  ? 4'h6
                                                                                  : _GEN_73
                                                                                      ? 4'h0
                                                                                      : _GEN_86
                                                                                          ? 4'h8
                                                                                          : _GEN_79
                                                                                              ? 4'h3
                                                                                              : _GEN_78
                                                                                                  ? 4'h4
                                                                                                  : _GEN_77
                                                                                                      ? 4'h0
                                                                                                      : {2'h0,
                                                                                                         _GEN_76,
                                                                                                         1'h0};	// @[CRRV/src/core/pipeline/DecodeStage.scala:24:27, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_87 = _GEN_64 | _GEN_65;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_88 =
    _GEN_38 | _GEN_39 | _GEN_40 | _GEN_41 | _GEN_42 | _GEN_43 | _GEN_76;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_89 =
    _GEN_22 | _GEN_23 | _GEN_24 | _GEN_25 | _GEN_26 | _GEN_27 | _GEN_28 | _GEN_29
    | _GEN_85;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire [2:0]  branchFlag =
    _GEN_83
      ? 3'h0
      : _GEN_22
          ? 3'h2
          : _GEN_23
              ? 3'h3
              : _GEN_24
                  ? 3'h4
                  : _GEN_25 ? 3'h5 : _GEN_26 ? 3'h6 : _GEN_27 ? 3'h7 : {2'h0, _GEN_86};	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire [2:0]  csrOp =
    _GEN_0 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8 | _GEN_9
    | _GEN_10 | _GEN_11 | _GEN_12 | _GEN_13 | _GEN_14 | _GEN_15 | _GEN_16 | _GEN_17
    | _GEN_18 | _GEN_19 | _GEN_20 | _GEN_21 | _GEN_89
      ? 3'h0
      : _GEN_38
          ? 3'h3
          : _GEN_39
              ? 3'h4
              : _GEN_40 ? 3'h5 : _GEN_41 ? 3'h3 : _GEN_42 ? 3'h4 : _GEN_43 ? 3'h5 : 3'h0;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _io_branchInfo_jump_T = branchFlag == 3'h1;	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51, src/main/scala/chisel3/util/Lookup.scala:34:39]
  always_comb begin	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51]
    casez (branchFlag)	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51, src/main/scala/chisel3/util/Lookup.scala:34:39]
      3'b000:
        casez_tmp = _io_branchInfo_jump_T;	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51]
      3'b001:
        casez_tmp = _io_branchInfo_jump_T;	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51]
      3'b010:
        casez_tmp = io_regRead1_data == io_regRead2_data;	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51, :66:34]
      3'b011:
        casez_tmp = io_regRead1_data != io_regRead2_data;	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51, :67:34]
      3'b100:
        casez_tmp = $signed(io_regRead1_data) < $signed(io_regRead2_data);	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51, :68:41]
      3'b101:
        casez_tmp = $signed(io_regRead1_data) >= $signed(io_regRead2_data);	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51, :69:41]
      3'b110:
        casez_tmp = io_regRead1_data < io_regRead2_data;	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51, :70:35]
      default:
        casez_tmp = io_regRead1_data >= io_regRead2_data;	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51, :71:35]
    endcase	// @[CRRV/src/core/pipeline/DecodeStage.scala:63:51, src/main/scala/chisel3/util/Lookup.scala:34:39]
  end // always_comb
  wire [19:0] _GEN_90 = {20{inst[31]}};	// @[CRRV/src/core/pipeline/DecodeStage.scala:75:51, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire [31:0] _GEN_91 = {_GEN_90, inst[31:20]};	// @[CRRV/src/core/pipeline/DecodeStage.scala:39:18, :75:51, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire [31:0] _targetJALR_T_3 = io_regRead1_data + _GEN_91;	// @[CRRV/src/core/pipeline/DecodeStage.scala:75:51]
  wire [31:0] branchTarget =
    _io_branchInfo_jump_T
      ? (regEn1
           ? {_targetJALR_T_3[31:1], 1'h0}
           : io_if2id_IF_pc + {{12{inst[31]}}, inst[19:12], inst[20], inst[30:21], 1'h0})
      : io_if2id_IF_pc + {{20{inst[31]}}, inst[7], inst[30:25], inst[11:8], 1'h0};	// @[CRRV/src/core/pipeline/DecodeStage.scala:24:27, :41:{22,32,41,55}, :43:{32,46,56}, :63:51, :74:39, :75:{25,51,65}, :76:25, :77:39, :78:25, src/main/scala/chisel3/util/Lookup.scala:34:39, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _csrOperation_T_4 = inst[19:15] == 5'h0;	// @[CRRV/src/core/pipeline/DecodeStage.scala:36:17, :86:25, src/main/scala/chisel3/util/Lookup.scala:34:39, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire [2:0]  csrOperation =
    csrOp == 3'h5
      ? {~_csrOperation_T_4, 2'h1}
      : csrOp == 3'h4
          ? (_csrOperation_T_4 ? 3'h1 : 3'h4)
          : csrOp == 3'h3 ? {2'h1, |(inst[11:7])} : 3'h0;	// @[CRRV/src/core/pipeline/DecodeStage.scala:35:17, :83:47, :85:{20,24}, :86:{20,25}, :87:20, src/main/scala/chisel3/util/Lookup.scala:34:39, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire [31:0] _GEN_92 = {_GEN_90, inst[31:25], inst[11:7]};	// @[CRRV/src/core/pipeline/DecodeStage.scala:35:17, :40:22, :50:57, :75:51, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire [31:0] _GEN_93 = {27'h0, inst[24:20]};	// @[CRRV/src/core/pipeline/DecodeStage.scala:37:17, :50:57, src/main/scala/chisel3/util/Lookup.scala:31:38, src/main/scala/chisel3/util/Mux.scala:141:16]
  always @(posedge clock) begin	// @[<stdin>:245:11]
    stallDelay <= io_control_stall;	// @[CRRV/src/core/pipeline/DecodeStage.scala:24:27]
    if (stallDelay) begin	// @[CRRV/src/core/pipeline/DecodeStage.scala:24:27]
    end
    else	// @[CRRV/src/core/pipeline/DecodeStage.scala:24:27]
      lastInst <= io_read_rdata;	// @[CRRV/src/core/pipeline/DecodeStage.scala:25:23]
  end // always @(posedge)
  assign io_control_flushIF =
    ~io_control_stall
    & (io_if2id_IF_predTaken != casez_tmp | casez_tmp
       & io_if2id_IF_predTarget != branchTarget);	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:63:51, :78:25, :80:{38,54,70,90}, :92:{25,43}]
  assign io_control_flushPc = casez_tmp ? branchTarget : io_if2id_IF_pc + 32'h4;	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:50:57, :63:51, :78:25, :79:{25,62}]
  assign io_id2exe_IF_instValid = io_if2id_IF_instValid;	// @[<stdin>:244:10]
  assign io_id2exe_IF_pc = io_if2id_IF_pc;	// @[<stdin>:244:10]
  assign io_id2exe_ID_inst = inst;	// @[<stdin>:244:10, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_id2exe_ID_aluOp =
    _GEN_0 | _GEN_2
      ? 4'h1
      : _GEN_3
          ? 4'h2
          : _GEN_4
              ? 4'h4
              : _GEN_5
                  ? 4'h1
                  : _GEN_6 | _GEN_7
                      ? 4'h3
                      : _GEN_8 | _GEN_9
                          ? 4'h4
                          : _GEN_10 | _GEN_11
                              ? 4'h5
                              : _GEN_12 | _GEN_13
                                  ? 4'h6
                                  : _GEN_14 | _GEN_15
                                      ? 4'h7
                                      : _GEN_16 | _GEN_17
                                          ? 4'h8
                                          : _GEN_18 | _GEN_19
                                              ? 4'h9
                                              : _GEN_81
                                                  ? 4'hA
                                                  : _GEN_89
                                                      ? 4'h1
                                                      : _GEN_88
                                                          ? 4'h0
                                                          : _GEN_84
                                                              ? 4'h4
                                                              : _GEN_87
                                                                  ? 4'h0
                                                                  : {3'h0,
                                                                     _GEN_66 | _GEN_67
                                                                       | _GEN_68
                                                                       | _GEN_69};	// @[<stdin>:244:10, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  assign io_id2exe_ID_mduOp =
    _GEN_0 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8 | _GEN_9
    | _GEN_10 | _GEN_11 | _GEN_12 | _GEN_13 | _GEN_14 | _GEN_15 | _GEN_16 | _GEN_17
    | _GEN_18 | _GEN_19 | _GEN_20 | _GEN_21 | _GEN_22 | _GEN_23 | _GEN_24 | _GEN_25
    | _GEN_26 | _GEN_27 | _GEN_28 | _GEN_29 | _GEN_30 | _GEN_31 | _GEN_32 | _GEN_33
    | _GEN_34 | _GEN_35 | _GEN_36 | _GEN_37 | _GEN_77
      ? 4'h0
      : _GEN_44
          ? 4'h1
          : _GEN_45
              ? 4'h2
              : _GEN_46
                  ? 4'h3
                  : _GEN_47
                      ? 4'h4
                      : _GEN_48
                          ? 4'h5
                          : _GEN_49 ? 4'h6 : _GEN_50 ? 4'h7 : {_GEN_51, 3'h0};	// @[<stdin>:244:10, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  assign io_id2exe_ID_src1 =
    aluSrc1Op == 4'h8
      ? 32'h4
      : aluSrc1Op == 4'h7
          ? io_if2id_IF_pc
          : aluSrc1Op == 4'h6
              ? _GEN_93
              : aluSrc1Op == 4'h5
                  ? immU
                  : aluSrc1Op == 4'h4
                      ? _GEN_92
                      : aluSrc1Op == 4'h3
                          ? _GEN_91
                          : aluSrc1Op == 4'h2
                              ? io_regRead2_data
                              : aluSrc1Op == 4'h1 ? io_regRead1_data : 32'h0;	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:42:17, :50:57, :75:51, src/main/scala/chisel3/util/Lookup.scala:34:39]
  assign io_id2exe_ID_src2 =
    aluSrc2Op == 4'h8
      ? 32'h4
      : aluSrc2Op == 4'h7
          ? io_if2id_IF_pc
          : aluSrc2Op == 4'h6
              ? _GEN_93
              : aluSrc2Op == 4'h5
                  ? immU
                  : aluSrc2Op == 4'h4
                      ? _GEN_92
                      : aluSrc2Op == 4'h3
                          ? _GEN_91
                          : aluSrc2Op == 4'h2
                              ? io_regRead2_data
                              : aluSrc2Op == 4'h1 ? io_regRead1_data : 32'h0;	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:42:17, :50:57, :75:51, src/main/scala/chisel3/util/Lookup.scala:34:39]
  assign io_id2exe_ID_lsuOp =
    _GEN_0 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8 | _GEN_9
    | _GEN_10 | _GEN_11 | _GEN_12 | _GEN_13 | _GEN_14 | _GEN_15 | _GEN_16 | _GEN_17
    | _GEN_18 | _GEN_19 | _GEN_20 | _GEN_21 | _GEN_22 | _GEN_23 | _GEN_24 | _GEN_25
    | _GEN_26 | _GEN_27 | _GEN_86
      ? 5'h0
      : _GEN_30
          ? 5'h1
          : _GEN_31
              ? 5'h2
              : _GEN_32
                  ? 5'h3
                  : _GEN_33
                      ? 5'h4
                      : _GEN_34
                          ? 5'h5
                          : _GEN_35
                              ? 5'h6
                              : _GEN_36
                                  ? 5'h7
                                  : _GEN_37
                                      ? 5'h8
                                      : _GEN_88
                                          ? 5'h0
                                          : _GEN_52
                                              ? 5'h9
                                              : _GEN_54
                                                  ? 5'hA
                                                  : _GEN_55
                                                      ? 5'hB
                                                      : _GEN_56
                                                          ? 5'hC
                                                          : _GEN_57
                                                              ? 5'hD
                                                              : _GEN_58
                                                                  ? 5'hE
                                                                  : _GEN_59
                                                                      ? 5'hF
                                                                      : _GEN_60
                                                                          ? 5'h10
                                                                          : _GEN_61
                                                                              ? 5'h11
                                                                              : _GEN_62
                                                                                  ? 5'h12
                                                                                  : _GEN_63
                                                                                      ? 5'h13
                                                                                      : _GEN_64
                                                                                          ? 5'h14
                                                                                          : _GEN_65
                                                                                              ? 5'h15
                                                                                              : 5'h0;	// @[<stdin>:244:10, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  assign io_id2exe_ID_lsuData = io_regRead2_data;	// @[<stdin>:244:10]
  assign io_id2exe_ID_regWen =
    _GEN_83 | ~_GEN_73
    & (_GEN_80 | ~_GEN_78
       & (_GEN_38 | _GEN_39 | _GEN_40 | _GEN_41 | _GEN_42 | _GEN_43 | _GEN_71 | _GEN_63));	// @[<stdin>:244:10, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  assign io_id2exe_ID_regWaddr = inst[11:7];	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:35:17, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_id2exe_ID_csrOp = csrOperation;	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:83:47]
  assign io_id2exe_ID_csrAddr = inst[31:20];	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:39:18, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_id2exe_ID_csrWriteData =
    csrOperation == 3'h0 ? 32'h0 : regEn1 ? io_regRead1_data : {27'h0, inst[19:15]};	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:36:17, :50:57, :83:47, :90:{25,39,60}, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_id2exe_ID_exceptType =
    _GEN_0 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8 | _GEN_9
    | _GEN_10 | _GEN_11 | _GEN_12 | _GEN_13 | _GEN_14 | _GEN_15 | _GEN_16 | _GEN_17
    | _GEN_18 | _GEN_19 | _GEN_20 | _GEN_21 | _GEN_22 | _GEN_23 | _GEN_24 | _GEN_25
    | _GEN_26 | _GEN_27 | _GEN_28 | _GEN_29 | _GEN_30 | _GEN_31 | _GEN_32 | _GEN_33
    | _GEN_34 | _GEN_35 | _GEN_36 | _GEN_37 | _GEN_38 | _GEN_39 | _GEN_40 | _GEN_41
    | _GEN_42 | _GEN_43 | _GEN_44 | _GEN_45 | _GEN_46 | _GEN_47 | _GEN_48 | _GEN_49
    | _GEN_50 | _GEN_51 | _GEN_52 | _GEN_54 | _GEN_55 | _GEN_56 | _GEN_57 | _GEN_58
    | _GEN_59 | _GEN_60 | _GEN_61 | _GEN_62 | _GEN_63 | _GEN_87
      ? 3'h0
      : _GEN_66 ? 3'h1 : _GEN_67 | _GEN_68 ? 3'h0 : _GEN_69 ? 3'h2 : 3'h7;	// @[<stdin>:244:10, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  assign io_branchInfo_branch = |branchFlag;	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:95:38, src/main/scala/chisel3/util/Lookup.scala:34:39]
  assign io_branchInfo_jump = _io_branchInfo_jump_T;	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:63:51]
  assign io_branchInfo_taken = casez_tmp;	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:63:51]
  assign io_branchInfo_index = io_if2id_IF_predIndex;	// @[<stdin>:244:10]
  assign io_branchInfo_pc = io_if2id_IF_pc;	// @[<stdin>:244:10]
  assign io_branchInfo_target = branchTarget;	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:78:25]
  assign io_regRead1_en = regEn1;	// @[<stdin>:244:10, src/main/scala/chisel3/util/Lookup.scala:34:39]
  assign io_regRead1_addr = inst[19:15];	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:36:17, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_regRead2_en =
    _GEN_0 | ~_GEN_2
    & (_GEN_3 | ~_GEN_74
       & (_GEN_6 | ~_GEN_7
          & (_GEN_8 | ~_GEN_9
             & (_GEN_10 | ~_GEN_11
                & (_GEN_12 | ~_GEN_13
                   & (_GEN_14 | ~_GEN_15
                      & (_GEN_16 | ~_GEN_17
                         & (_GEN_18 | ~_GEN_19
                            & (_GEN_20 | ~_GEN_21
                               & (_GEN_73 | ~_GEN_80
                                  & (_GEN_78 | ~_GEN_77
                                     & (_GEN_76 | ~_GEN_52
                                        & (_GEN_70 | _GEN_63)))))))))))));	// @[<stdin>:244:10, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  assign io_regRead2_addr = inst[24:20];	// @[<stdin>:244:10, CRRV/src/core/pipeline/DecodeStage.scala:37:17, src/main/scala/chisel3/util/Mux.scala:141:16]
endmodule

module PipelineStage_1(	// @[<stdin>:1317:10]
  input         clock,	// @[<stdin>:1318:11]
                reset,	// @[<stdin>:1319:11]
                io_flush,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_stallPrev,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_stallNext,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_IF_instValid,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_IF_pc,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_ID_inst,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [3:0]  io_prev_ID_aluOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_ID_mduOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_ID_src1,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_ID_src2,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [4:0]  io_prev_ID_lsuOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_ID_lsuData,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input         io_prev_ID_regWen,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [4:0]  io_prev_ID_regWaddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [2:0]  io_prev_ID_csrOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [11:0] io_prev_ID_csrAddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_ID_csrWriteData,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [2:0]  io_prev_ID_exceptType,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output        io_next_IF_instValid,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_IF_pc,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_next_ID_inst,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [3:0]  io_next_ID_aluOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_next_ID_mduOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_ID_src1,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_next_ID_src2,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [4:0]  io_next_ID_lsuOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_ID_lsuData,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output        io_next_ID_regWen,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [4:0]  io_next_ID_regWaddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [2:0]  io_next_ID_csrOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [11:0] io_next_ID_csrAddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_ID_csrWriteData,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [2:0]  io_next_ID_exceptType	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
);

  reg         pipelineReg_IF_instValid;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_IF_pc;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_ID_inst;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [3:0]  pipelineReg_ID_aluOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [3:0]  pipelineReg_ID_mduOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_ID_src1;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_ID_src2;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [4:0]  pipelineReg_ID_lsuOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_ID_lsuData;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg         pipelineReg_ID_regWen;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [4:0]  pipelineReg_ID_regWaddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [2:0]  pipelineReg_ID_csrOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [11:0] pipelineReg_ID_csrAddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_ID_csrWriteData;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [2:0]  pipelineReg_ID_exceptType;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  wire        _GEN = io_flush | io_stallPrev & ~io_stallNext;	// @[CRRV/src/core/pipeline/PipelineStage.scala:24:{17,34,37}]
  always @(posedge clock) begin	// @[<stdin>:1318:11]
    if (reset) begin	// @[<stdin>:1318:11]
      pipelineReg_IF_instValid <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_IF_pc <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_inst <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_aluOp <= 4'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_mduOp <= 4'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_src1 <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_src2 <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_lsuOp <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_lsuData <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_regWen <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_regWaddr <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_csrOp <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_csrAddr <= 12'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_csrWriteData <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_exceptType <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
    end
    else begin	// @[<stdin>:1318:11]
      pipelineReg_IF_instValid <=
        ~_GEN & (io_stallPrev ? pipelineReg_IF_instValid : io_prev_IF_instValid);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
      if (_GEN) begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:24:17]
        pipelineReg_IF_pc <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_inst <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_aluOp <= 4'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_mduOp <= 4'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_src1 <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_src2 <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_lsuOp <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_lsuData <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_regWaddr <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_csrOp <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_csrAddr <= 12'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_csrWriteData <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_exceptType <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      end
      else if (io_stallPrev) begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
      end
      else begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
        pipelineReg_IF_pc <= io_prev_IF_pc;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_inst <= io_prev_ID_inst;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_aluOp <= io_prev_ID_aluOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_mduOp <= io_prev_ID_mduOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_src1 <= io_prev_ID_src1;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_src2 <= io_prev_ID_src2;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_lsuOp <= io_prev_ID_lsuOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_lsuData <= io_prev_ID_lsuData;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_regWaddr <= io_prev_ID_regWaddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_csrOp <= io_prev_ID_csrOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_csrAddr <= io_prev_ID_csrAddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_csrWriteData <= io_prev_ID_csrWriteData;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_exceptType <= io_prev_ID_exceptType;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
      end
      pipelineReg_ID_regWen <=
        ~_GEN & (io_stallPrev ? pipelineReg_ID_regWen : io_prev_ID_regWen);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
    end
  end // always @(posedge)
  assign io_next_IF_instValid = pipelineReg_IF_instValid;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_IF_pc = pipelineReg_IF_pc;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_inst = pipelineReg_ID_inst;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_aluOp = pipelineReg_ID_aluOp;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_mduOp = pipelineReg_ID_mduOp;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_src1 = pipelineReg_ID_src1;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_src2 = pipelineReg_ID_src2;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_lsuOp = pipelineReg_ID_lsuOp;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_lsuData = pipelineReg_ID_lsuData;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_regWen = pipelineReg_ID_regWen;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_regWaddr = pipelineReg_ID_regWaddr;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_csrOp = pipelineReg_ID_csrOp;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_csrAddr = pipelineReg_ID_csrAddr;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_csrWriteData = pipelineReg_ID_csrWriteData;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_exceptType = pipelineReg_ID_exceptType;	// @[<stdin>:1317:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
endmodule

module Multiplier(	// @[<stdin>:1375:10]
  input         clock,	// @[<stdin>:1376:11]
                reset,	// @[<stdin>:1377:11]
                io_en,	// @[CRRV/src/core/muldiv/Multiplier.scala:14:14]
                io_flush,	// @[CRRV/src/core/muldiv/Multiplier.scala:14:14]
                io_opr1Sign,	// @[CRRV/src/core/muldiv/Multiplier.scala:14:14]
  input  [31:0] io_opr1,	// @[CRRV/src/core/muldiv/Multiplier.scala:14:14]
  input         io_opr2Sign,	// @[CRRV/src/core/muldiv/Multiplier.scala:14:14]
  input  [31:0] io_opr2,	// @[CRRV/src/core/muldiv/Multiplier.scala:14:14]
  output        io_valid,	// @[CRRV/src/core/muldiv/Multiplier.scala:14:14]
  output [63:0] io_result	// @[CRRV/src/core/muldiv/Multiplier.scala:14:14]
);

  reg  [64:0] casez_tmp;	// @[CRRV/src/core/muldiv/Multiplier.scala:48:60]
  reg  [1:0]  casez_tmp_0;	// @[CRRV/src/core/muldiv/Multiplier.scala:36:17, :38:32]
  reg  [63:0] opr1;	// @[CRRV/src/core/muldiv/Multiplier.scala:29:47]
  reg  [34:0] opr2;	// @[CRRV/src/core/muldiv/Multiplier.scala:30:47]
  reg  [63:0] mulResutl;	// @[CRRV/src/core/muldiv/Multiplier.scala:31:47]
  reg  [5:0]  count;	// @[CRRV/src/core/muldiv/Multiplier.scala:32:51]
  reg  [1:0]  state;	// @[CRRV/src/core/muldiv/Multiplier.scala:34:51]
  wire        _GEN = io_en & ~io_flush;	// @[CRRV/src/core/muldiv/Multiplier.scala:38:{18,21}]
  wire        _GEN_0 = count < 6'h11 & (|opr2) & ~io_flush;	// @[CRRV/src/core/muldiv/Multiplier.scala:30:47, :32:51, :38:21, :47:{18,48,56}]
  wire [64:0] _GEN_1 = {1'h0, opr2[2:0] == 3'h2 | opr2[2:0] == 3'h1 ? opr1 : 64'h0};	// @[CRRV/src/core/muldiv/Multiplier.scala:29:47, :30:47, :41:19, :48:{48,60}]
  wire [64:0] _GEN_2 = {1'h0, 64'h0 - opr1};	// @[CRRV/src/core/muldiv/Multiplier.scala:29:47, :41:19, :48:60, :55:27]
  always_comb begin	// @[CRRV/src/core/muldiv/Multiplier.scala:48:60]
    casez (opr2[2:0])	// @[CRRV/src/core/muldiv/Multiplier.scala:30:47, :48:{48,60}]
      3'b000:
        casez_tmp = _GEN_1;	// @[CRRV/src/core/muldiv/Multiplier.scala:48:60]
      3'b001:
        casez_tmp = _GEN_1;	// @[CRRV/src/core/muldiv/Multiplier.scala:48:60]
      3'b010:
        casez_tmp = _GEN_1;	// @[CRRV/src/core/muldiv/Multiplier.scala:48:60]
      3'b011:
        casez_tmp = {opr1, 1'h0};	// @[CRRV/src/core/muldiv/Multiplier.scala:29:47, :48:60, :53:33]
      3'b100:
        casez_tmp = 65'h0 - {opr1, 1'h0};	// @[CRRV/src/core/muldiv/Multiplier.scala:29:47, :48:60, :54:27]
      3'b101:
        casez_tmp = _GEN_2;	// @[CRRV/src/core/muldiv/Multiplier.scala:48:60]
      3'b110:
        casez_tmp = _GEN_2;	// @[CRRV/src/core/muldiv/Multiplier.scala:48:60]
      default:
        casez_tmp = 65'h0;	// @[CRRV/src/core/muldiv/Multiplier.scala:48:60]
    endcase	// @[CRRV/src/core/muldiv/Multiplier.scala:30:47, :48:{48,60}]
  end // always_comb
  always_comb begin	// @[CRRV/src/core/muldiv/Multiplier.scala:34:51, :36:17, :38:32, :47:70, :68:13]
    casez (state)	// @[CRRV/src/core/muldiv/Multiplier.scala:34:51, :36:17, :38:32, :47:70, :68:13]
      2'b00:
        casez_tmp_0 = _GEN ? 2'h1 : state;	// @[CRRV/src/core/muldiv/Multiplier.scala:34:51, :36:17, :38:{18,32}, :43:19, :47:70, :68:13]
      2'b01:
        casez_tmp_0 = _GEN_0 ? state : 2'h2;	// @[CRRV/src/core/muldiv/Multiplier.scala:34:51, :36:17, :38:32, :47:{56,70}, :48:60, :64:15, :68:13]
      2'b10:
        casez_tmp_0 = 2'h0;	// @[CRRV/src/core/muldiv/Multiplier.scala:34:51, :36:17, :38:32, :47:70, :68:13]
      default:
        casez_tmp_0 = state;	// @[CRRV/src/core/muldiv/Multiplier.scala:34:51, :36:17, :38:32, :47:70, :68:13]
    endcase	// @[CRRV/src/core/muldiv/Multiplier.scala:34:51, :36:17, :38:32, :47:70, :68:13]
  end // always_comb
  wire        _GEN_3 = state == 2'h0;	// @[CRRV/src/core/muldiv/Multiplier.scala:34:51, :36:17]
  wire        _GEN_4 = state == 2'h1 & _GEN_0;	// @[CRRV/src/core/muldiv/Multiplier.scala:31:47, :34:51, :36:17, :43:19, :47:{56,70}, :48:19]
  always @(posedge clock) begin	// @[<stdin>:1376:11]
    if (_GEN_3) begin	// @[CRRV/src/core/muldiv/Multiplier.scala:36:17]
      if (_GEN) begin	// @[CRRV/src/core/muldiv/Multiplier.scala:38:18]
        opr1 <= {{32{io_opr1Sign & io_opr1[31]}}, io_opr1};	// @[CRRV/src/core/muldiv/Multiplier.scala:26:{30,39}, :29:47, :39:{25,30}]
        opr2 <= {{2{io_opr2Sign & io_opr2[31]}}, io_opr2, 1'h0};	// @[CRRV/src/core/muldiv/Multiplier.scala:27:{30,39}, :29:47, :30:47, :40:{25,30}]
        mulResutl <= 64'h0;	// @[CRRV/src/core/muldiv/Multiplier.scala:31:47, :41:19]
      end
    end
    else if (_GEN_4) begin	// @[CRRV/src/core/muldiv/Multiplier.scala:31:47, :36:17, :47:70, :48:19]
      opr1 <= {opr1[61:0], 2'h0};	// @[CRRV/src/core/muldiv/Multiplier.scala:29:47, :34:51, :60:15]
      opr2 <= {2'h0, opr2[34:2]};	// @[CRRV/src/core/muldiv/Multiplier.scala:30:47, :34:51, :61:{15,23}]
      mulResutl <= mulResutl + casez_tmp[63:0];	// @[CRRV/src/core/muldiv/Multiplier.scala:31:47, :48:{32,60}]
    end
    if (reset) begin	// @[<stdin>:1376:11]
      count <= 6'h0;	// @[CRRV/src/core/muldiv/Multiplier.scala:32:51]
      state <= 2'h0;	// @[CRRV/src/core/muldiv/Multiplier.scala:34:51]
    end
    else begin	// @[<stdin>:1376:11]
      if (_GEN_3) begin	// @[CRRV/src/core/muldiv/Multiplier.scala:36:17]
        if (_GEN)	// @[CRRV/src/core/muldiv/Multiplier.scala:38:18]
          count <= 6'h0;	// @[CRRV/src/core/muldiv/Multiplier.scala:32:51]
      end
      else if (_GEN_4)	// @[CRRV/src/core/muldiv/Multiplier.scala:31:47, :36:17, :47:70, :48:19]
        count <= count + 6'h1;	// @[CRRV/src/core/muldiv/Multiplier.scala:32:51, :62:24]
      state <= casez_tmp_0;	// @[CRRV/src/core/muldiv/Multiplier.scala:34:51, :36:17, :38:32]
    end
  end // always @(posedge)
  assign io_valid = io_en & ~io_flush & state == 2'h2;	// @[<stdin>:1375:10, CRRV/src/core/muldiv/Multiplier.scala:34:51, :48:60, :75:{25,35,44}]
  assign io_result = mulResutl;	// @[<stdin>:1375:10, CRRV/src/core/muldiv/Multiplier.scala:31:47]
endmodule

module Divider(	// @[<stdin>:1466:10]
  input         clock,	// @[<stdin>:1467:11]
                reset,	// @[<stdin>:1468:11]
                io_en,	// @[CRRV/src/core/muldiv/Divider.scala:14:14]
                io_flush,	// @[CRRV/src/core/muldiv/Divider.scala:14:14]
                io_sign,	// @[CRRV/src/core/muldiv/Divider.scala:14:14]
  input  [31:0] io_opr1,	// @[CRRV/src/core/muldiv/Divider.scala:14:14]
                io_opr2,	// @[CRRV/src/core/muldiv/Divider.scala:14:14]
  output        io_valid,	// @[CRRV/src/core/muldiv/Divider.scala:14:14]
  output [31:0] io_divresult,	// @[CRRV/src/core/muldiv/Divider.scala:14:14]
                io_remresult	// @[CRRV/src/core/muldiv/Divider.scala:14:14]
);

  reg  [1:0]  casez_tmp;	// @[CRRV/src/core/muldiv/Divider.scala:40:17, :42:32]
  wire        opr1Neg = io_sign & io_opr1[31];	// @[CRRV/src/core/muldiv/Divider.scala:26:{30,40}]
  wire        opr2Neg = io_sign & io_opr2[31];	// @[CRRV/src/core/muldiv/Divider.scala:27:{30,40}]
  reg  [63:0] dividend;	// @[CRRV/src/core/muldiv/Divider.scala:33:47]
  reg  [32:0] divisor;	// @[CRRV/src/core/muldiv/Divider.scala:34:47]
  reg  [31:0] quotient;	// @[CRRV/src/core/muldiv/Divider.scala:35:47]
  reg  [5:0]  count;	// @[CRRV/src/core/muldiv/Divider.scala:36:51]
  reg  [1:0]  state;	// @[CRRV/src/core/muldiv/Divider.scala:38:51]
  wire        _GEN = io_en & ~io_flush;	// @[CRRV/src/core/muldiv/Divider.scala:42:{18,21}]
  wire        _GEN_0 = count != 6'h20 & ~io_flush;	// @[CRRV/src/core/muldiv/Divider.scala:36:51, :42:21, :51:{18,35}]
  always_comb begin	// @[CRRV/src/core/muldiv/Divider.scala:38:51, :40:17, :42:32, :51:49, :61:13]
    casez (state)	// @[CRRV/src/core/muldiv/Divider.scala:38:51, :40:17, :42:32, :51:49, :61:13]
      2'b00:
        casez_tmp = _GEN ? 2'h1 : state;	// @[CRRV/src/core/muldiv/Divider.scala:38:51, :40:17, :42:{18,32}, :47:18, :51:49, :61:13]
      2'b01:
        casez_tmp = _GEN_0 ? state : 2'h2;	// @[CRRV/src/core/muldiv/Divider.scala:38:51, :40:17, :42:32, :51:{35,49}, :57:15, :61:13]
      2'b10:
        casez_tmp = 2'h0;	// @[CRRV/src/core/muldiv/Divider.scala:38:51, :40:17, :42:32, :51:49, :61:13]
      default:
        casez_tmp = state;	// @[CRRV/src/core/muldiv/Divider.scala:38:51, :40:17, :42:32, :51:49, :61:13]
    endcase	// @[CRRV/src/core/muldiv/Divider.scala:38:51, :40:17, :42:32, :51:49, :61:13]
  end // always_comb
  wire [32:0] ans = dividend[63:31] - divisor;	// @[CRRV/src/core/muldiv/Divider.scala:33:47, :34:47, :52:{27,64}]
  wire        _GEN_1 = state == 2'h0;	// @[CRRV/src/core/muldiv/Divider.scala:38:51, :40:17]
  wire        _GEN_2 = state == 2'h1 & _GEN_0;	// @[CRRV/src/core/muldiv/Divider.scala:35:47, :38:51, :40:17, :47:18, :51:{35,49}, :53:18]
  always @(posedge clock) begin	// @[<stdin>:1467:11]
    if (_GEN_1) begin	// @[CRRV/src/core/muldiv/Divider.scala:40:17]
      if (_GEN) begin	// @[CRRV/src/core/muldiv/Divider.scala:42:18]
        dividend <= {32'h0, opr1Neg ? 32'h0 - io_opr1 : io_opr1};	// @[CRRV/src/core/muldiv/Divider.scala:26:30, :30:{25,35}, :33:47, :43:24]
        quotient <= 32'h0;	// @[CRRV/src/core/muldiv/Divider.scala:35:47, :43:24]
      end
    end
    else if (_GEN_2) begin	// @[CRRV/src/core/muldiv/Divider.scala:35:47, :40:17, :51:49, :53:18]
      dividend <= {ans[32] ? dividend[62:0] : {ans[31:0], dividend[30:0]}, 1'h0};	// @[CRRV/src/core/muldiv/Divider.scala:30:35, :33:47, :52:64, :53:58, :54:{18,24,74,95}]
      quotient <= {quotient[30:0], ~(ans[32])};	// @[CRRV/src/core/muldiv/Divider.scala:35:47, :52:64, :53:{24,33,54,58}]
    end
    if (_GEN_1 & _GEN)	// @[CRRV/src/core/muldiv/Divider.scala:34:47, :40:17, :42:{18,32}, :44:18]
      divisor <= {1'h0, opr2Neg ? 32'h0 - io_opr2 : io_opr2};	// @[CRRV/src/core/muldiv/Divider.scala:27:30, :30:35, :31:{25,35}, :34:47, :43:24, :44:24]
    if (reset) begin	// @[<stdin>:1467:11]
      count <= 6'h0;	// @[CRRV/src/core/muldiv/Divider.scala:36:51]
      state <= 2'h0;	// @[CRRV/src/core/muldiv/Divider.scala:38:51]
    end
    else begin	// @[<stdin>:1467:11]
      if (_GEN_1) begin	// @[CRRV/src/core/muldiv/Divider.scala:40:17]
        if (_GEN)	// @[CRRV/src/core/muldiv/Divider.scala:42:18]
          count <= 6'h0;	// @[CRRV/src/core/muldiv/Divider.scala:36:51]
      end
      else if (_GEN_2)	// @[CRRV/src/core/muldiv/Divider.scala:35:47, :40:17, :51:49, :53:18]
        count <= count + 6'h1;	// @[CRRV/src/core/muldiv/Divider.scala:36:51, :55:27]
      state <= casez_tmp;	// @[CRRV/src/core/muldiv/Divider.scala:38:51, :40:17, :42:32]
    end
  end // always @(posedge)
  assign io_valid = io_en & ~io_flush & state == 2'h2;	// @[<stdin>:1466:10, CRRV/src/core/muldiv/Divider.scala:38:51, :57:15, :67:{28,38,47}]
  assign io_divresult = opr1Neg ^ opr2Neg ? 32'h0 - quotient : quotient;	// @[<stdin>:1466:10, CRRV/src/core/muldiv/Divider.scala:26:30, :27:30, :28:30, :30:35, :35:47, :43:24, :68:{22,37}]
  assign io_remresult = opr1Neg ? 32'h0 - dividend[63:32] : dividend[63:32];	// @[<stdin>:1466:10, CRRV/src/core/muldiv/Divider.scala:26:30, :30:35, :33:47, :43:24, :65:27, :69:{22,37}]
endmodule

module MDU(	// @[<stdin>:1550:10]
  input         clock,	// @[<stdin>:1551:11]
                reset,	// @[<stdin>:1552:11]
  input  [3:0]  io_op,	// @[CRRV/src/core/muldiv/MDU.scala:14:14]
  input         io_flush,	// @[CRRV/src/core/muldiv/MDU.scala:14:14]
  input  [31:0] io_opr1,	// @[CRRV/src/core/muldiv/MDU.scala:14:14]
                io_opr2,	// @[CRRV/src/core/muldiv/MDU.scala:14:14]
  output        io_valid,	// @[CRRV/src/core/muldiv/MDU.scala:14:14]
  output [31:0] io_result	// @[CRRV/src/core/muldiv/MDU.scala:14:14]
);

  wire        _divider_io_valid;	// @[CRRV/src/core/muldiv/MDU.scala:41:23]
  wire [31:0] _divider_io_divresult;	// @[CRRV/src/core/muldiv/MDU.scala:41:23]
  wire [31:0] _divider_io_remresult;	// @[CRRV/src/core/muldiv/MDU.scala:41:23]
  wire        _multiplier_io_valid;	// @[CRRV/src/core/muldiv/MDU.scala:31:26]
  wire [63:0] _multiplier_io_result;	// @[CRRV/src/core/muldiv/MDU.scala:31:26]
  wire        _GEN = io_op == 4'h1;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_0 = io_op == 4'h2;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_1 = io_op == 4'h3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_2 = io_op == 4'h4;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_3 = io_op == 4'h5;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_4 = io_op == 4'h6;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_5 = io_op == 4'h7;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_6 = io_op == 4'h8;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_7 = _GEN_0 | _GEN_1;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        mulEnable = _GEN | _GEN_7 | _GEN_2;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_8 = _GEN_1 | _GEN_2;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        divEnable = ~(_GEN | _GEN_0 | _GEN_8) & (_GEN_3 | _GEN_4 | _GEN_5 | _GEN_6);	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        _GEN_9 = _GEN_3 | ~_GEN_4 & _GEN_5;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        leftSign = ~_GEN & (_GEN_7 | ~_GEN_2 & _GEN_9);	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        rightSign = ~_GEN & (_GEN_0 | ~_GEN_8 & _GEN_9);	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  Multiplier multiplier (	// @[CRRV/src/core/muldiv/MDU.scala:31:26]
    .clock       (clock),
    .reset       (reset),
    .io_en       (mulEnable),	// @[src/main/scala/chisel3/util/Lookup.scala:34:39]
    .io_flush    (io_flush),
    .io_opr1Sign (leftSign),	// @[src/main/scala/chisel3/util/Lookup.scala:34:39]
    .io_opr1     (io_opr1),
    .io_opr2Sign (rightSign),	// @[src/main/scala/chisel3/util/Lookup.scala:34:39]
    .io_opr2     (io_opr2),
    .io_valid    (_multiplier_io_valid),
    .io_result   (_multiplier_io_result)
  );
  Divider divider (	// @[CRRV/src/core/muldiv/MDU.scala:41:23]
    .clock        (clock),
    .reset        (reset),
    .io_en        (divEnable),	// @[src/main/scala/chisel3/util/Lookup.scala:34:39]
    .io_flush     (io_flush),
    .io_sign      (leftSign & rightSign),	// @[CRRV/src/core/muldiv/MDU.scala:44:32, src/main/scala/chisel3/util/Lookup.scala:34:39]
    .io_opr1      (io_opr1),
    .io_opr2      (io_opr2),
    .io_valid     (_divider_io_valid),
    .io_divresult (_divider_io_divresult),
    .io_remresult (_divider_io_remresult)
  );
  assign io_valid = mulEnable ? _multiplier_io_valid : ~divEnable | _divider_io_valid;	// @[<stdin>:1550:10, CRRV/src/core/muldiv/MDU.scala:31:26, :41:23, src/main/scala/chisel3/util/Lookup.scala:34:39, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_result =
    mulEnable
      ? (~_GEN & (_GEN_7 | _GEN_2)
           ? _multiplier_io_result[63:32]
           : _multiplier_io_result[31:0])
      : divEnable
          ? (~(_GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3 | _GEN_4) & (_GEN_5 | _GEN_6)
               ? _divider_io_remresult
               : _divider_io_divresult)
          : 32'h0;	// @[<stdin>:1550:10, CRRV/src/core/muldiv/MDU.scala:31:26, :39:{8,36,90}, :41:23, :47:22, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39, src/main/scala/chisel3/util/Mux.scala:141:16]
endmodule

module ExecuteStage(	// @[<stdin>:1648:10]
  input         clock,	// @[<stdin>:1649:11]
                reset,	// @[<stdin>:1650:11]
                io_id2exe_IF_instValid,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input  [31:0] io_id2exe_IF_pc,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
                io_id2exe_ID_inst,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input  [3:0]  io_id2exe_ID_aluOp,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
                io_id2exe_ID_mduOp,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input  [31:0] io_id2exe_ID_src1,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
                io_id2exe_ID_src2,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input  [4:0]  io_id2exe_ID_lsuOp,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input  [31:0] io_id2exe_ID_lsuData,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input         io_id2exe_ID_regWen,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input  [4:0]  io_id2exe_ID_regWaddr,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input  [2:0]  io_id2exe_ID_csrOp,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input  [11:0] io_id2exe_ID_csrAddr,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input  [31:0] io_id2exe_ID_csrWriteData,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input  [2:0]  io_id2exe_ID_exceptType,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input         io_control_flush,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  input  [31:0] io_csrRead_data,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output        io_control_stallReq,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
                io_exe2mem_IF_instValid,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [31:0] io_exe2mem_IF_pc,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
                io_exe2mem_ID_inst,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [4:0]  io_exe2mem_ID_lsuOp,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [31:0] io_exe2mem_ID_lsuData,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output        io_exe2mem_ID_regWen,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [4:0]  io_exe2mem_ID_regWaddr,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [2:0]  io_exe2mem_ID_csrOp,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [11:0] io_exe2mem_ID_csrAddr,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [31:0] io_exe2mem_ID_csrWriteData,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [2:0]  io_exe2mem_ID_exceptType,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output        io_exe2mem_EXE_load,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [31:0] io_exe2mem_EXE_exeResult,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [2:0]  io_csrRead_op,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [11:0] io_csrRead_addr,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output        io_regForward_en,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [4:0]  io_regForward_addr,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output [31:0] io_regForward_data,	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
  output        io_regForward_load	// @[CRRV/src/core/pipeline/ExecuteStage.scala:13:14]
);

  wire        _mdu_io_valid;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:44:19]
  wire [31:0] _mdu_io_result;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:44:19]
  reg  [31:0] casez_tmp;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47]
  wire [31:0] _GEN = {27'h0, io_id2exe_ID_src2[4:0]};	// @[CRRV/src/core/pipeline/ExecuteStage.scala:26:19, :39:24]
  wire [62:0] _aluResult_T_11 = {31'h0, io_id2exe_ID_src1} << io_id2exe_ID_src2[4:0];	// @[CRRV/src/core/pipeline/ExecuteStage.scala:26:19, :38:24]
  always_comb begin	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47]
    casez (io_id2exe_ID_aluOp)	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47]
      4'b0000:
        casez_tmp = 32'h0;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47]
      4'b0001:
        casez_tmp = io_id2exe_ID_src1 + io_id2exe_ID_src2;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47, :31:24]
      4'b0010:
        casez_tmp = io_id2exe_ID_src1 - io_id2exe_ID_src2;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47, :32:24]
      4'b0011:
        casez_tmp = io_id2exe_ID_src1 ^ io_id2exe_ID_src2;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47, :33:24]
      4'b0100:
        casez_tmp = io_id2exe_ID_src1 | io_id2exe_ID_src2;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47, :34:23]
      4'b0101:
        casez_tmp = io_id2exe_ID_src1 & io_id2exe_ID_src2;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47, :35:24]
      4'b0110:
        casez_tmp = {31'h0, $signed(io_id2exe_ID_src1) < $signed(io_id2exe_ID_src2)};	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47, :36:31, :38:24]
      4'b0111:
        casez_tmp = {31'h0, io_id2exe_ID_src1 < io_id2exe_ID_src2};	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47, :37:25, :38:24]
      4'b1000:
        casez_tmp = _aluResult_T_11[31:0];	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47, :38:24]
      4'b1001:
        casez_tmp = io_id2exe_ID_src1 >> _GEN;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47, :39:24]
      4'b1010:
        casez_tmp = $signed($signed(io_id2exe_ID_src1) >>> _GEN);	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47, :39:24, :40:31]
      4'b1011:
        casez_tmp = 32'h0;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47]
      4'b1100:
        casez_tmp = 32'h0;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47]
      4'b1101:
        casez_tmp = 32'h0;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47]
      4'b1110:
        casez_tmp = 32'h0;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47]
      default:
        casez_tmp = 32'h0;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47]
    endcase	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47]
  end // always_comb
  wire [31:0] _GEN_0 =
    (|io_id2exe_ID_aluOp)
      ? casez_tmp
      : (|io_id2exe_ID_mduOp)
          ? _mdu_io_result
          : (|io_id2exe_ID_csrOp) ? io_csrRead_data : 32'h0;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:28:47, :44:19, :56:21, :57:21, :58:21, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        load = (|io_id2exe_ID_lsuOp) & io_id2exe_ID_regWen;	// @[CRRV/src/core/pipeline/ExecuteStage.scala:61:{27,39}]
  MDU mdu (	// @[CRRV/src/core/pipeline/ExecuteStage.scala:44:19]
    .clock     (clock),
    .reset     (reset),
    .io_op     (io_id2exe_ID_mduOp),
    .io_flush  (io_control_flush),
    .io_opr1   (io_id2exe_ID_src1),
    .io_opr2   (io_id2exe_ID_src2),
    .io_valid  (_mdu_io_valid),
    .io_result (_mdu_io_result)
  );
  assign io_control_stallReq = ~_mdu_io_valid;	// @[<stdin>:1648:10, CRRV/src/core/pipeline/ExecuteStage.scala:44:19, :64:26]
  assign io_exe2mem_IF_instValid = io_id2exe_IF_instValid;	// @[<stdin>:1648:10]
  assign io_exe2mem_IF_pc = io_id2exe_IF_pc;	// @[<stdin>:1648:10]
  assign io_exe2mem_ID_inst = io_id2exe_ID_inst;	// @[<stdin>:1648:10]
  assign io_exe2mem_ID_lsuOp = io_id2exe_ID_lsuOp;	// @[<stdin>:1648:10]
  assign io_exe2mem_ID_lsuData = io_id2exe_ID_lsuData;	// @[<stdin>:1648:10]
  assign io_exe2mem_ID_regWen = io_id2exe_ID_regWen;	// @[<stdin>:1648:10]
  assign io_exe2mem_ID_regWaddr = io_id2exe_ID_regWaddr;	// @[<stdin>:1648:10]
  assign io_exe2mem_ID_csrOp = io_id2exe_ID_csrOp;	// @[<stdin>:1648:10]
  assign io_exe2mem_ID_csrAddr = io_id2exe_ID_csrAddr;	// @[<stdin>:1648:10]
  assign io_exe2mem_ID_csrWriteData = io_id2exe_ID_csrWriteData;	// @[<stdin>:1648:10]
  assign io_exe2mem_ID_exceptType = io_id2exe_ID_exceptType;	// @[<stdin>:1648:10]
  assign io_exe2mem_EXE_load = load;	// @[<stdin>:1648:10, CRRV/src/core/pipeline/ExecuteStage.scala:61:39]
  assign io_exe2mem_EXE_exeResult = _GEN_0;	// @[<stdin>:1648:10, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_csrRead_op = io_id2exe_ID_csrOp;	// @[<stdin>:1648:10]
  assign io_csrRead_addr = io_id2exe_ID_csrAddr;	// @[<stdin>:1648:10]
  assign io_regForward_en = io_id2exe_ID_regWen;	// @[<stdin>:1648:10]
  assign io_regForward_addr = io_id2exe_ID_regWaddr;	// @[<stdin>:1648:10]
  assign io_regForward_data = _GEN_0;	// @[<stdin>:1648:10, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_regForward_load = load;	// @[<stdin>:1648:10, CRRV/src/core/pipeline/ExecuteStage.scala:61:39]
endmodule

module PipelineStage_2(	// @[<stdin>:1720:10]
  input         clock,	// @[<stdin>:1721:11]
                reset,	// @[<stdin>:1722:11]
                io_flush,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_stallPrev,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_stallNext,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_IF_instValid,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_IF_pc,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_ID_inst,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [4:0]  io_prev_ID_lsuOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_ID_lsuData,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input         io_prev_ID_regWen,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [4:0]  io_prev_ID_regWaddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [2:0]  io_prev_ID_csrOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [11:0] io_prev_ID_csrAddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_ID_csrWriteData,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [2:0]  io_prev_ID_exceptType,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input         io_prev_EXE_load,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_EXE_exeResult,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output        io_next_IF_instValid,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_IF_pc,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_next_ID_inst,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [4:0]  io_next_ID_lsuOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_ID_lsuData,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output        io_next_ID_regWen,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [4:0]  io_next_ID_regWaddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [2:0]  io_next_ID_csrOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [11:0] io_next_ID_csrAddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_ID_csrWriteData,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [2:0]  io_next_ID_exceptType,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output        io_next_EXE_load,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_EXE_exeResult	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
);

  reg         pipelineReg_IF_instValid;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_IF_pc;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_ID_inst;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [4:0]  pipelineReg_ID_lsuOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_ID_lsuData;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg         pipelineReg_ID_regWen;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [4:0]  pipelineReg_ID_regWaddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [2:0]  pipelineReg_ID_csrOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [11:0] pipelineReg_ID_csrAddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_ID_csrWriteData;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [2:0]  pipelineReg_ID_exceptType;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg         pipelineReg_EXE_load;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_EXE_exeResult;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  wire        _GEN = io_flush | io_stallPrev & ~io_stallNext;	// @[CRRV/src/core/pipeline/PipelineStage.scala:24:{17,34,37}]
  always @(posedge clock) begin	// @[<stdin>:1721:11]
    if (reset) begin	// @[<stdin>:1721:11]
      pipelineReg_IF_instValid <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_IF_pc <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_inst <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_lsuOp <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_lsuData <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_regWen <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_regWaddr <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_csrOp <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_csrAddr <= 12'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_csrWriteData <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_exceptType <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_EXE_load <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_EXE_exeResult <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
    end
    else begin	// @[<stdin>:1721:11]
      pipelineReg_IF_instValid <=
        ~_GEN & (io_stallPrev ? pipelineReg_IF_instValid : io_prev_IF_instValid);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
      if (_GEN) begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:24:17]
        pipelineReg_IF_pc <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_inst <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_lsuOp <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_lsuData <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_regWaddr <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_csrOp <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_csrAddr <= 12'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_csrWriteData <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_exceptType <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_EXE_exeResult <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      end
      else if (io_stallPrev) begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
      end
      else begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
        pipelineReg_IF_pc <= io_prev_IF_pc;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_inst <= io_prev_ID_inst;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_lsuOp <= io_prev_ID_lsuOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_lsuData <= io_prev_ID_lsuData;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_regWaddr <= io_prev_ID_regWaddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_csrOp <= io_prev_ID_csrOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_csrAddr <= io_prev_ID_csrAddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_csrWriteData <= io_prev_ID_csrWriteData;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_exceptType <= io_prev_ID_exceptType;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_EXE_exeResult <= io_prev_EXE_exeResult;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
      end
      pipelineReg_ID_regWen <=
        ~_GEN & (io_stallPrev ? pipelineReg_ID_regWen : io_prev_ID_regWen);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
      pipelineReg_EXE_load <=
        ~_GEN & (io_stallPrev ? pipelineReg_EXE_load : io_prev_EXE_load);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
    end
  end // always @(posedge)
  assign io_next_IF_instValid = pipelineReg_IF_instValid;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_IF_pc = pipelineReg_IF_pc;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_inst = pipelineReg_ID_inst;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_lsuOp = pipelineReg_ID_lsuOp;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_lsuData = pipelineReg_ID_lsuData;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_regWen = pipelineReg_ID_regWen;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_regWaddr = pipelineReg_ID_regWaddr;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_csrOp = pipelineReg_ID_csrOp;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_csrAddr = pipelineReg_ID_csrAddr;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_csrWriteData = pipelineReg_ID_csrWriteData;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_exceptType = pipelineReg_ID_exceptType;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_EXE_load = pipelineReg_EXE_load;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_EXE_exeResult = pipelineReg_EXE_exeResult;	// @[<stdin>:1720:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
endmodule

module AmoExecute(	// @[<stdin>:1782:10]
  input         clock,	// @[<stdin>:1783:11]
                reset,	// @[<stdin>:1784:11]
  input  [3:0]  io_op,	// @[CRRV/src/core/atom/AmoExecute.scala:9:14]
  input         io_flush,	// @[CRRV/src/core/atom/AmoExecute.scala:9:14]
  input  [31:0] io_regOpr,	// @[CRRV/src/core/atom/AmoExecute.scala:9:14]
  input         io_ramValid,	// @[CRRV/src/core/atom/AmoExecute.scala:9:14]
  input  [31:0] io_ramRdata,	// @[CRRV/src/core/atom/AmoExecute.scala:9:14]
  output        io_ready,	// @[CRRV/src/core/atom/AmoExecute.scala:9:14]
  output [31:0] io_regWdata,	// @[CRRV/src/core/atom/AmoExecute.scala:9:14]
  output        io_ramWen,	// @[CRRV/src/core/atom/AmoExecute.scala:9:14]
  output [31:0] io_ramWdata	// @[CRRV/src/core/atom/AmoExecute.scala:9:14]
);

  reg [1:0] casez_tmp;	// @[CRRV/src/core/atom/AmoExecute.scala:49:19, :51:36]
  reg [1:0] state;	// @[CRRV/src/core/atom/AmoExecute.scala:25:47]
  always_comb begin	// @[CRRV/src/core/atom/AmoExecute.scala:25:47, :49:19, :51:36, :58:15, :61:15]
    casez (state)	// @[CRRV/src/core/atom/AmoExecute.scala:25:47, :49:19, :51:36, :58:15, :61:15]
      2'b00:
        casez_tmp = {1'h0, |io_op};	// @[CRRV/src/core/atom/AmoExecute.scala:25:47, :49:19, :51:{20,36}, :52:17, :54:17, :58:15, :61:15]
      2'b01:
        casez_tmp = 2'h2;	// @[CRRV/src/core/atom/AmoExecute.scala:25:47, :49:19, :51:36, :58:15, :61:15]
      2'b10:
        casez_tmp = 2'h0;	// @[CRRV/src/core/atom/AmoExecute.scala:25:47, :49:19, :51:36, :58:15, :61:15]
      default:
        casez_tmp = state;	// @[CRRV/src/core/atom/AmoExecute.scala:25:47, :49:19, :51:36, :58:15, :61:15]
    endcase	// @[CRRV/src/core/atom/AmoExecute.scala:25:47, :49:19, :51:36, :58:15, :61:15]
  end // always_comb
  always @(posedge clock) begin	// @[<stdin>:1783:11]
    if (reset)	// @[<stdin>:1783:11]
      state <= 2'h0;	// @[CRRV/src/core/atom/AmoExecute.scala:25:47]
    else if (io_flush)	// @[CRRV/src/core/atom/AmoExecute.scala:9:14]
      state <= 2'h0;	// @[CRRV/src/core/atom/AmoExecute.scala:25:47]
    else if (io_ramValid)	// @[CRRV/src/core/atom/AmoExecute.scala:9:14]
      state <= casez_tmp;	// @[CRRV/src/core/atom/AmoExecute.scala:25:47, :49:19, :51:36]
  end // always @(posedge)
  assign io_ready = state == 2'h2;	// @[<stdin>:1782:10, CRRV/src/core/atom/AmoExecute.scala:25:47, :58:15, :66:24]
  assign io_regWdata = io_ramRdata;	// @[<stdin>:1782:10]
  assign io_ramWen = state == 2'h1;	// @[<stdin>:1782:10, CRRV/src/core/atom/AmoExecute.scala:25:47, :54:17, :68:24]
  assign io_ramWdata =
    io_op == 4'h9
      ? (io_ramRdata > io_regOpr ? io_ramRdata : io_regOpr)
      : io_op == 4'h8
          ? (io_ramRdata < io_regOpr ? io_ramRdata : io_regOpr)
          : io_op == 4'h7
              ? ($signed(io_ramRdata) > $signed(io_regOpr) ? io_ramRdata : io_regOpr)
              : io_op == 4'h6
                  ? ($signed(io_ramRdata) < $signed(io_regOpr) ? io_ramRdata : io_regOpr)
                  : io_op == 4'h5
                      ? io_ramRdata | io_regOpr
                      : io_op == 4'h4
                          ? io_ramRdata & io_regOpr
                          : io_op == 4'h3
                              ? io_ramRdata ^ io_regOpr
                              : io_op == 4'h2
                                  ? io_ramRdata + io_regOpr
                                  : io_op == 4'h1 ? io_regOpr : 32'h0;	// @[<stdin>:1782:10, CRRV/src/core/atom/AmoExecute.scala:32:38, :35:27, :36:27, :37:27, :38:26, :39:{24,37}, :40:{24,37}, :41:{25,31}, :42:{25,31}]
endmodule

module MemoryStage(	// @[<stdin>:1850:10]
  input         clock,	// @[<stdin>:1851:11]
                reset,	// @[<stdin>:1852:11]
                io_exe2mem_IF_instValid,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input  [31:0] io_exe2mem_IF_pc,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
                io_exe2mem_ID_inst,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input  [4:0]  io_exe2mem_ID_lsuOp,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input  [31:0] io_exe2mem_ID_lsuData,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input         io_exe2mem_ID_regWen,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input  [4:0]  io_exe2mem_ID_regWaddr,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input  [2:0]  io_exe2mem_ID_csrOp,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input  [11:0] io_exe2mem_ID_csrAddr,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input  [31:0] io_exe2mem_ID_csrWriteData,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input  [2:0]  io_exe2mem_ID_exceptType,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input         io_exe2mem_EXE_load,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input  [31:0] io_exe2mem_EXE_exeResult,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input         io_control_flush,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
                io_dataRam_out_ready,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input  [31:0] io_dataRam_in_rdata,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  input         io_excMon_valid,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output        io_control_stallReq,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
                io_mem2wb_IF_instValid,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [31:0] io_mem2wb_IF_pc,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
                io_mem2wb_ID_inst,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [4:0]  io_mem2wb_ID_lsuOp,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output        io_mem2wb_ID_regWen,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [4:0]  io_mem2wb_ID_regWaddr,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [2:0]  io_mem2wb_ID_csrOp,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [11:0] io_mem2wb_ID_csrAddr,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [31:0] io_mem2wb_ID_csrWriteData,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [2:0]  io_mem2wb_ID_exceptType,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [31:0] io_mem2wb_EXE_exeResult,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
                io_mem2wb_MEM_memAddr,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
                io_mem2wb_MEM_excMonCommit_addr,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output        io_mem2wb_MEM_excMonCommit_set,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
                io_mem2wb_MEM_excMonCommit_clear,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
                io_mem2wb_MEM_amoValid,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [31:0] io_mem2wb_MEM_amoResult,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output        io_dataRam_out_valid,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [31:0] io_dataRam_out_bits_addr,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output        io_dataRam_out_bits_writeEn,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [1:0]  io_dataRam_out_bits_size,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [31:0] io_dataRam_out_bits_wdata,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
                io_excMon_addr,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [2:0]  io_memCsrStall_op,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [11:0] io_memCsrStall_addr,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output        io_regForward_en,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [4:0]  io_regForward_addr,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output [31:0] io_regForward_data,	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
  output        io_regForward_load	// @[CRRV/src/core/pipeline/MemoryStage.scala:12:14]
);

  wire        _amo_io_ready;	// @[CRRV/src/core/pipeline/MemoryStage.scala:41:19]
  wire [31:0] _amo_io_regWdata;	// @[CRRV/src/core/pipeline/MemoryStage.scala:41:19]
  wire        _amo_io_ramWen;	// @[CRRV/src/core/pipeline/MemoryStage.scala:41:19]
  wire [31:0] _amo_io_ramWdata;	// @[CRRV/src/core/pipeline/MemoryStage.scala:41:19]
  reg  [31:0] casez_tmp;	// @[CRRV/src/core/pipeline/MemoryStage.scala:34:41]
  wire        _GEN = io_exe2mem_ID_lsuOp == 5'h1;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_0 = io_exe2mem_ID_lsuOp == 5'h2;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_1 = io_exe2mem_ID_lsuOp == 5'h3;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_2 = io_exe2mem_ID_lsuOp == 5'h4;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_3 = io_exe2mem_ID_lsuOp == 5'h5;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_4 = io_exe2mem_ID_lsuOp == 5'h6;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_5 = io_exe2mem_ID_lsuOp == 5'h7;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_6 = io_exe2mem_ID_lsuOp == 5'h8;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_7 = io_exe2mem_ID_lsuOp == 5'h9;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_8 = io_exe2mem_ID_lsuOp == 5'hA;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_9 = io_exe2mem_ID_lsuOp == 5'hB;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_10 = io_exe2mem_ID_lsuOp == 5'hC;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_11 = io_exe2mem_ID_lsuOp == 5'hD;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_12 = io_exe2mem_ID_lsuOp == 5'hE;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_13 = io_exe2mem_ID_lsuOp == 5'hF;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_14 = io_exe2mem_ID_lsuOp == 5'h10;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_15 = io_exe2mem_ID_lsuOp == 5'h11;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_16 = io_exe2mem_ID_lsuOp == 5'h12;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        _GEN_17 = io_exe2mem_ID_lsuOp == 5'h13;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38]
  wire        en =
    _GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8
    | _GEN_9 | _GEN_10 | _GEN_11 | _GEN_12 | _GEN_13 | _GEN_14 | _GEN_15 | _GEN_16
    | _GEN_17;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        wen =
    ~(_GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3) & (_GEN_4 | _GEN_5 | _GEN_6);	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire [1:0]  width =
    _GEN
      ? 2'h0
      : _GEN_0
          ? 2'h1
          : _GEN_1
              ? 2'h2
              : _GEN_2
                  ? 2'h0
                  : _GEN_3
                      ? 2'h1
                      : _GEN_4
                          ? 2'h0
                          : _GEN_5
                              ? 2'h1
                              : {_GEN_6 | _GEN_7 | _GEN_8 | _GEN_9 | _GEN_10 | _GEN_11
                                   | _GEN_12 | _GEN_13 | _GEN_14 | _GEN_15 | _GEN_16
                                   | _GEN_17,
                                 1'h0};	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire        checkExcMon =
    ~(_GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7)
    & _GEN_8;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  wire [3:0]  amoOp =
    _GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8
      ? 4'h0
      : _GEN_9
          ? 4'h1
          : _GEN_10
              ? 4'h2
              : _GEN_11
                  ? 4'h3
                  : _GEN_12
                      ? 4'h4
                      : _GEN_13
                          ? 4'h5
                          : _GEN_14
                              ? 4'h6
                              : _GEN_15 ? 4'h7 : _GEN_16 ? 4'h8 : _GEN_17 ? 4'h9 : 4'h0;	// @[src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  always_comb begin	// @[CRRV/src/core/pipeline/MemoryStage.scala:34:41]
    casez (width)	// @[CRRV/src/core/pipeline/MemoryStage.scala:34:41, src/main/scala/chisel3/util/Lookup.scala:34:39]
      2'b00:
        casez_tmp = {4{io_exe2mem_ID_lsuData[7:0]}};	// @[CRRV/src/core/pipeline/MemoryStage.scala:34:41, :36:{26,31}]
      2'b01:
        casez_tmp = {2{io_exe2mem_ID_lsuData[15:0]}};	// @[CRRV/src/core/pipeline/MemoryStage.scala:34:41, :37:{26,31}]
      2'b10:
        casez_tmp = io_exe2mem_ID_lsuData;	// @[CRRV/src/core/pipeline/MemoryStage.scala:34:41]
      default:
        casez_tmp = 32'h0;	// @[CRRV/src/core/pipeline/MemoryStage.scala:34:41]
    endcase	// @[CRRV/src/core/pipeline/MemoryStage.scala:34:41, src/main/scala/chisel3/util/Lookup.scala:34:39]
  end // always_comb
  AmoExecute amo (	// @[CRRV/src/core/pipeline/MemoryStage.scala:41:19]
    .clock       (clock),
    .reset       (reset),
    .io_op       (amoOp),	// @[src/main/scala/chisel3/util/Lookup.scala:34:39]
    .io_flush    (io_control_flush),
    .io_regOpr   (io_exe2mem_ID_lsuData),
    .io_ramValid (io_dataRam_out_ready),
    .io_ramRdata (io_dataRam_in_rdata),
    .io_ready    (_amo_io_ready),
    .io_regWdata (_amo_io_regWdata),
    .io_ramWen   (_amo_io_ramWen),
    .io_ramWdata (_amo_io_ramWdata)
  );
  assign io_control_stallReq = (|amoOp) ? ~_amo_io_ready : ~io_dataRam_out_ready & en;	// @[<stdin>:1850:10, CRRV/src/core/pipeline/MemoryStage.scala:41:19, :50:{21,28,44,60,83}, src/main/scala/chisel3/util/Lookup.scala:34:39]
  assign io_mem2wb_IF_instValid = io_exe2mem_IF_instValid;	// @[<stdin>:1850:10]
  assign io_mem2wb_IF_pc = io_exe2mem_IF_pc;	// @[<stdin>:1850:10]
  assign io_mem2wb_ID_inst = io_exe2mem_ID_inst;	// @[<stdin>:1850:10]
  assign io_mem2wb_ID_lsuOp = io_exe2mem_ID_lsuOp;	// @[<stdin>:1850:10]
  assign io_mem2wb_ID_regWen = io_exe2mem_ID_regWen;	// @[<stdin>:1850:10]
  assign io_mem2wb_ID_regWaddr = io_exe2mem_ID_regWaddr;	// @[<stdin>:1850:10]
  assign io_mem2wb_ID_csrOp = io_exe2mem_ID_csrOp;	// @[<stdin>:1850:10]
  assign io_mem2wb_ID_csrAddr = io_exe2mem_ID_csrAddr;	// @[<stdin>:1850:10]
  assign io_mem2wb_ID_csrWriteData = io_exe2mem_ID_csrWriteData;	// @[<stdin>:1850:10]
  assign io_mem2wb_ID_exceptType = io_exe2mem_ID_exceptType;	// @[<stdin>:1850:10]
  assign io_mem2wb_EXE_exeResult = io_exe2mem_EXE_exeResult;	// @[<stdin>:1850:10]
  assign io_mem2wb_MEM_memAddr = io_exe2mem_EXE_exeResult;	// @[<stdin>:1850:10]
  assign io_mem2wb_MEM_excMonCommit_addr = io_exe2mem_EXE_exeResult;	// @[<stdin>:1850:10]
  assign io_mem2wb_MEM_excMonCommit_set =
    ~(_GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6) & _GEN_7;	// @[<stdin>:1850:10, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  assign io_mem2wb_MEM_excMonCommit_clear = checkExcMon;	// @[<stdin>:1850:10, src/main/scala/chisel3/util/Lookup.scala:34:39]
  assign io_mem2wb_MEM_amoValid = (|amoOp) | checkExcMon;	// @[<stdin>:1850:10, CRRV/src/core/pipeline/MemoryStage.scala:50:28, :77:60, src/main/scala/chisel3/util/Lookup.scala:34:39]
  assign io_mem2wb_MEM_amoResult =
    checkExcMon ? {31'h0, ~io_excMon_valid} : _amo_io_regWdata;	// @[<stdin>:1850:10, CRRV/src/core/pipeline/MemoryStage.scala:41:19, :78:{42,59}, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39]
  assign io_dataRam_out_valid = en;	// @[<stdin>:1850:10, src/main/scala/chisel3/util/Lookup.scala:34:39]
  assign io_dataRam_out_bits_addr = io_exe2mem_EXE_exeResult;	// @[<stdin>:1850:10]
  assign io_dataRam_out_bits_writeEn =
    wen | _amo_io_ramWen | checkExcMon & io_excMon_valid;	// @[<stdin>:1850:10, CRRV/src/core/pipeline/MemoryStage.scala:41:19, :57:{55,71}, src/main/scala/chisel3/util/Lookup.scala:34:39]
  assign io_dataRam_out_bits_size = width;	// @[<stdin>:1850:10, src/main/scala/chisel3/util/Lookup.scala:34:39]
  assign io_dataRam_out_bits_wdata = wen | checkExcMon ? casez_tmp : _amo_io_ramWdata;	// @[<stdin>:1850:10, CRRV/src/core/pipeline/MemoryStage.scala:34:41, :41:19, :60:{37,42}, src/main/scala/chisel3/util/Lookup.scala:34:39]
  assign io_excMon_addr = io_exe2mem_EXE_exeResult;	// @[<stdin>:1850:10]
  assign io_memCsrStall_op = io_exe2mem_ID_csrOp;	// @[<stdin>:1850:10]
  assign io_memCsrStall_addr = io_exe2mem_ID_csrAddr;	// @[<stdin>:1850:10]
  assign io_regForward_en = io_exe2mem_ID_regWen;	// @[<stdin>:1850:10]
  assign io_regForward_addr = io_exe2mem_ID_regWaddr;	// @[<stdin>:1850:10]
  assign io_regForward_data = io_exe2mem_EXE_exeResult;	// @[<stdin>:1850:10]
  assign io_regForward_load = io_exe2mem_EXE_load;	// @[<stdin>:1850:10]
endmodule

module PipelineStage_3(	// @[<stdin>:2165:10]
  input         clock,	// @[<stdin>:2166:11]
                reset,	// @[<stdin>:2167:11]
                io_flush,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_stallPrev,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_stallNext,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_IF_instValid,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_IF_pc,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_ID_inst,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [4:0]  io_prev_ID_lsuOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input         io_prev_ID_regWen,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [4:0]  io_prev_ID_regWaddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [2:0]  io_prev_ID_csrOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [11:0] io_prev_ID_csrAddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_ID_csrWriteData,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [2:0]  io_prev_ID_exceptType,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_EXE_exeResult,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_MEM_memAddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_MEM_excMonCommit_addr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input         io_prev_MEM_excMonCommit_set,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_MEM_excMonCommit_clear,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_prev_MEM_amoValid,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  input  [31:0] io_prev_MEM_amoResult,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output        io_next_IF_instValid,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_IF_pc,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_next_ID_inst,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [4:0]  io_next_ID_lsuOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output        io_next_ID_regWen,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [4:0]  io_next_ID_regWaddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [2:0]  io_next_ID_csrOp,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [11:0] io_next_ID_csrAddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_ID_csrWriteData,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [2:0]  io_next_ID_exceptType,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_EXE_exeResult,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_next_MEM_memAddr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_next_MEM_excMonCommit_addr,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output        io_next_MEM_excMonCommit_set,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_next_MEM_excMonCommit_clear,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
                io_next_MEM_amoValid,	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
  output [31:0] io_next_MEM_amoResult	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
);

  reg         pipelineReg_IF_instValid;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_IF_pc;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_ID_inst;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [4:0]  pipelineReg_ID_lsuOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg         pipelineReg_ID_regWen;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [4:0]  pipelineReg_ID_regWaddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [2:0]  pipelineReg_ID_csrOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [11:0] pipelineReg_ID_csrAddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_ID_csrWriteData;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [2:0]  pipelineReg_ID_exceptType;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_EXE_exeResult;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_MEM_memAddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_MEM_excMonCommit_addr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg         pipelineReg_MEM_excMonCommit_set;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg         pipelineReg_MEM_excMonCommit_clear;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg         pipelineReg_MEM_amoValid;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  reg  [31:0] pipelineReg_MEM_amoResult;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  wire        _GEN = io_flush | io_stallPrev & ~io_stallNext;	// @[CRRV/src/core/pipeline/PipelineStage.scala:24:{17,34,37}]
  always @(posedge clock) begin	// @[<stdin>:2166:11]
    if (reset) begin	// @[<stdin>:2166:11]
      pipelineReg_IF_instValid <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_IF_pc <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_inst <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_lsuOp <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_regWen <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_regWaddr <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_csrOp <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_csrAddr <= 12'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_csrWriteData <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_ID_exceptType <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_EXE_exeResult <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_MEM_memAddr <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_MEM_excMonCommit_addr <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_MEM_excMonCommit_set <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_MEM_excMonCommit_clear <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_MEM_amoValid <= 1'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      pipelineReg_MEM_amoResult <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
    end
    else begin	// @[<stdin>:2166:11]
      pipelineReg_IF_instValid <=
        ~_GEN & (io_stallPrev ? pipelineReg_IF_instValid : io_prev_IF_instValid);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
      if (_GEN) begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:24:17]
        pipelineReg_IF_pc <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_inst <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_lsuOp <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_regWaddr <= 5'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_csrOp <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_csrAddr <= 12'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_csrWriteData <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_ID_exceptType <= 3'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_EXE_exeResult <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_MEM_memAddr <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_MEM_excMonCommit_addr <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
        pipelineReg_MEM_amoResult <= 32'h0;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, CRRV/src/io/PipelineStageIO.scala:12:31]
      end
      else if (io_stallPrev) begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
      end
      else begin	// @[CRRV/src/core/pipeline/PipelineStage.scala:13:14]
        pipelineReg_IF_pc <= io_prev_IF_pc;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_inst <= io_prev_ID_inst;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_lsuOp <= io_prev_ID_lsuOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_regWaddr <= io_prev_ID_regWaddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_csrOp <= io_prev_ID_csrOp;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_csrAddr <= io_prev_ID_csrAddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_csrWriteData <= io_prev_ID_csrWriteData;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_ID_exceptType <= io_prev_ID_exceptType;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_EXE_exeResult <= io_prev_EXE_exeResult;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_MEM_memAddr <= io_prev_MEM_memAddr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_MEM_excMonCommit_addr <= io_prev_MEM_excMonCommit_addr;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
        pipelineReg_MEM_amoResult <= io_prev_MEM_amoResult;	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28]
      end
      pipelineReg_ID_regWen <=
        ~_GEN & (io_stallPrev ? pipelineReg_ID_regWen : io_prev_ID_regWen);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
      pipelineReg_MEM_excMonCommit_set <=
        ~_GEN
        & (io_stallPrev
             ? pipelineReg_MEM_excMonCommit_set
             : io_prev_MEM_excMonCommit_set);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
      pipelineReg_MEM_excMonCommit_clear <=
        ~_GEN
        & (io_stallPrev
             ? pipelineReg_MEM_excMonCommit_clear
             : io_prev_MEM_excMonCommit_clear);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
      pipelineReg_MEM_amoValid <=
        ~_GEN & (io_stallPrev ? pipelineReg_MEM_amoValid : io_prev_MEM_amoValid);	// @[CRRV/src/core/pipeline/PipelineStage.scala:23:28, :24:{17,53}, :25:17, :26:29, :27:17]
    end
  end // always @(posedge)
  assign io_next_IF_instValid = pipelineReg_IF_instValid;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_IF_pc = pipelineReg_IF_pc;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_inst = pipelineReg_ID_inst;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_lsuOp = pipelineReg_ID_lsuOp;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_regWen = pipelineReg_ID_regWen;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_regWaddr = pipelineReg_ID_regWaddr;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_csrOp = pipelineReg_ID_csrOp;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_csrAddr = pipelineReg_ID_csrAddr;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_csrWriteData = pipelineReg_ID_csrWriteData;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_ID_exceptType = pipelineReg_ID_exceptType;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_EXE_exeResult = pipelineReg_EXE_exeResult;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_MEM_memAddr = pipelineReg_MEM_memAddr;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_MEM_excMonCommit_addr = pipelineReg_MEM_excMonCommit_addr;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_MEM_excMonCommit_set = pipelineReg_MEM_excMonCommit_set;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_MEM_excMonCommit_clear = pipelineReg_MEM_excMonCommit_clear;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_MEM_amoValid = pipelineReg_MEM_amoValid;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
  assign io_next_MEM_amoResult = pipelineReg_MEM_amoResult;	// @[<stdin>:2165:10, CRRV/src/core/pipeline/PipelineStage.scala:23:28]
endmodule

module WriteBackStage(	// @[<stdin>:2239:10]
  input         io_mem2wb_IF_instValid,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  input  [31:0] io_mem2wb_IF_pc,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_mem2wb_ID_inst,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  input  [4:0]  io_mem2wb_ID_lsuOp,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  input         io_mem2wb_ID_regWen,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  input  [4:0]  io_mem2wb_ID_regWaddr,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  input  [2:0]  io_mem2wb_ID_csrOp,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  input  [11:0] io_mem2wb_ID_csrAddr,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  input  [31:0] io_mem2wb_ID_csrWriteData,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  input  [2:0]  io_mem2wb_ID_exceptType,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  input  [31:0] io_mem2wb_EXE_exeResult,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_mem2wb_MEM_memAddr,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_mem2wb_MEM_excMonCommit_addr,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  input         io_mem2wb_MEM_excMonCommit_set,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_mem2wb_MEM_excMonCommit_clear,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_mem2wb_MEM_amoValid,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  input  [31:0] io_mem2wb_MEM_amoResult,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_read_rdata,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output [2:0]  io_wb2csr_op,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output [11:0] io_wb2csr_addr,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output [31:0] io_wb2csr_data,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output [2:0]  io_wb2csr_exceptType,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output [31:0] io_wb2csr_exceptPc,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_excMonCommit_addr,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output        io_excMonCommit_set,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_excMonCommit_clear,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_regForward_en,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output [4:0]  io_regForward_addr,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output [31:0] io_regForward_data,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output        io_debug_valid,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_debug_halt,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_debug_deviceAccess,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output [31:0] io_debug_deviceAddr,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
                io_debug_pc,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output        io_debug_regWen,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output [4:0]  io_debug_regWaddr,	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
  output [31:0] io_debug_regWdata	// @[CRRV/src/core/pipeline/WriteBackStage.scala:12:14]
);

  wire [31:0] shiftData = io_read_rdata >> {27'h0, io_mem2wb_MEM_memAddr[1:0], 3'h0};	// @[CRRV/src/core/pipeline/WriteBackStage.scala:27:{33,40,45}]
  wire [31:0] regData =
    io_mem2wb_MEM_amoValid
      ? io_mem2wb_MEM_amoResult
      : (|io_mem2wb_ID_lsuOp)
          ? (io_mem2wb_ID_lsuOp == 5'h9 | io_mem2wb_ID_lsuOp == 5'h3
               ? shiftData
               : io_mem2wb_ID_lsuOp == 5'h5
                   ? {16'h0, shiftData[15:0]}
                   : io_mem2wb_ID_lsuOp == 5'h2
                       ? {{16{shiftData[15]}}, shiftData[15:0]}
                       : io_mem2wb_ID_lsuOp == 5'h4
                           ? {24'h0, shiftData[7:0]}
                           : io_mem2wb_ID_lsuOp == 5'h1
                               ? {{24{shiftData[7]}}, shiftData[7:0]}
                               : 32'h0)
          : io_mem2wb_EXE_exeResult;	// @[CRRV/src/core/pipeline/WriteBackStage.scala:27:33, :28:45, :30:{21,26,40,55}, :31:22, :32:{21,26,40,56}, :33:22, :43:20, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_wb2csr_op = io_mem2wb_ID_csrOp;	// @[<stdin>:2239:10]
  assign io_wb2csr_addr = io_mem2wb_ID_csrAddr;	// @[<stdin>:2239:10]
  assign io_wb2csr_data = io_mem2wb_ID_csrWriteData;	// @[<stdin>:2239:10]
  assign io_wb2csr_exceptType = io_mem2wb_ID_exceptType;	// @[<stdin>:2239:10]
  assign io_wb2csr_exceptPc = io_mem2wb_IF_pc;	// @[<stdin>:2239:10]
  assign io_excMonCommit_addr = io_mem2wb_MEM_excMonCommit_addr;	// @[<stdin>:2239:10]
  assign io_excMonCommit_set = io_mem2wb_MEM_excMonCommit_set;	// @[<stdin>:2239:10]
  assign io_excMonCommit_clear = io_mem2wb_MEM_excMonCommit_clear;	// @[<stdin>:2239:10]
  assign io_regForward_en = io_mem2wb_ID_regWen;	// @[<stdin>:2239:10]
  assign io_regForward_addr = io_mem2wb_ID_regWaddr;	// @[<stdin>:2239:10]
  assign io_regForward_data = regData;	// @[<stdin>:2239:10, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_debug_valid = io_mem2wb_IF_instValid;	// @[<stdin>:2239:10]
  assign io_debug_halt = io_mem2wb_ID_inst == 32'h100073;	// @[<stdin>:2239:10, CRRV/src/core/pipeline/WriteBackStage.scala:62:32]
  assign io_debug_deviceAccess = |io_mem2wb_ID_lsuOp;	// @[<stdin>:2239:10, CRRV/src/core/pipeline/WriteBackStage.scala:43:20]
  assign io_debug_deviceAddr = io_mem2wb_EXE_exeResult;	// @[<stdin>:2239:10]
  assign io_debug_pc = io_mem2wb_IF_pc;	// @[<stdin>:2239:10]
  assign io_debug_regWen = io_mem2wb_ID_regWen;	// @[<stdin>:2239:10]
  assign io_debug_regWaddr = io_mem2wb_ID_regWaddr;	// @[<stdin>:2239:10]
  assign io_debug_regWdata = regData;	// @[<stdin>:2239:10, src/main/scala/chisel3/util/Mux.scala:141:16]
endmodule

module PipelineControl(	// @[<stdin>:2298:10]
  input         io_ifStallReq,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
                io_exeStallReq,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
                io_memStallReq,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
                io_idFlushReq,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
  input  [31:0] io_idFlushTarget,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
  input         io_loadHazardFlage,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
                io_csrHazardFlag,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
  input  [2:0]  io_exceptType,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
  input  [31:0] io_csrInfo_mepc,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
                io_csrInfo_trapEnterVec,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
  output        io_stallIF,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
                io_stallID,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
                io_stallEXE,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
                io_stallMEM,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
                io_stallWB,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
                io_flushAll,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
                io_flushIF,	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
  output [31:0] io_flushPc	// @[CRRV/src/core/pipeline/PipelineControl.scala:14:14]
);

  wire [4:0] stall =
    io_memStallReq
      ? 5'h1E
      : io_exeStallReq | io_csrHazardFlag
          ? 5'h1C
          : io_loadHazardFlage ? 5'h18 : {io_ifStallReq, 4'h0};	// @[CRRV/src/core/pipeline/PipelineControl.scala:44:23, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_stallIF = stall[4];	// @[<stdin>:2298:10, CRRV/src/core/pipeline/PipelineControl.scala:69:23, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_stallID = stall[3];	// @[<stdin>:2298:10, CRRV/src/core/pipeline/PipelineControl.scala:70:23, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_stallEXE = stall[2];	// @[<stdin>:2298:10, CRRV/src/core/pipeline/PipelineControl.scala:71:23, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_stallMEM = stall[1];	// @[<stdin>:2298:10, CRRV/src/core/pipeline/PipelineControl.scala:72:23, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_stallWB = stall[0];	// @[<stdin>:2298:10, CRRV/src/core/pipeline/PipelineControl.scala:73:23, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_flushAll = |io_exceptType;	// @[<stdin>:2298:10, CRRV/src/core/pipeline/PipelineControl.scala:50:32]
  assign io_flushIF = (|io_exceptType) | io_idFlushReq;	// @[<stdin>:2298:10, CRRV/src/core/pipeline/PipelineControl.scala:50:32, :59:27]
  assign io_flushPc =
    (|io_exceptType)
      ? (io_exceptType == 3'h2
           ? io_csrInfo_mepc
           : io_exceptType == 3'h1 ? io_csrInfo_trapEnterVec : 32'h0)
      : io_idFlushReq ? io_idFlushTarget : 32'h0;	// @[<stdin>:2298:10, CRRV/src/core/pipeline/PipelineControl.scala:14:14, :50:32, :51:44, src/main/scala/chisel3/util/Mux.scala:141:16]
endmodule

module HazardResolver(	// @[<stdin>:2332:10]
  input         io_regRead1_en,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [4:0]  io_regRead1_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input         io_regRead2_en,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [4:0]  io_regRead2_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [2:0]  io_csrRead_op,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [11:0] io_csrRead_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [31:0] io_regFile1_data,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
                io_regFile2_data,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
                io_regCsr_data,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input         io_exeForward_en,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [4:0]  io_exeForward_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [31:0] io_exeForward_data,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input         io_exeForward_load,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
                io_memForward_en,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [4:0]  io_memForward_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [31:0] io_memForward_data,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input         io_memForward_load,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
                io_wbForward_en,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [4:0]  io_wbForward_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [31:0] io_wbForward_data,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
                io_wbExcMon_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input         io_wbExcMon_set,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
                io_wbExcMon_clear,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [31:0] io_memExcMonCheck_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input         io_excMonCheck_valid,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [2:0]  io_memCsrStall_op,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [11:0] io_memCsrStall_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [2:0]  io_wbCsrStall_op,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  input  [11:0] io_wbCsrStall_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  output [31:0] io_regRead1_data,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
                io_regRead2_data,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
                io_csrRead_data,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  output        io_regFile1_en,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  output [4:0]  io_regFile1_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  output        io_regFile2_en,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  output [4:0]  io_regFile2_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  output [11:0] io_regCsr_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  output        io_memExcMonCheck_valid,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  output [31:0] io_excMonCheck_addr,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
  output        io_loadHazardFlag,	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
                io_csrHazardFlag	// @[CRRV/src/core/pipeline/HazardResolver.scala:13:14]
);

  assign io_regRead1_data =
    io_regRead1_en & (|io_regRead1_addr)
      ? (io_exeForward_en & io_regRead1_addr == io_exeForward_addr
           ? io_exeForward_data
           : io_memForward_en & io_regRead1_addr == io_memForward_addr
               ? io_memForward_data
               : io_wbForward_en & io_regRead1_addr == io_wbForward_addr
                   ? io_wbForward_data
                   : io_regFile1_data)
      : 32'h0;	// @[<stdin>:2332:10, CRRV/src/core/pipeline/HazardResolver.scala:38:{18,31,40}, :39:{29,42,66}, :40:19, :41:{35,48,72}, :42:19, :43:{34,47,70}, :44:19, :46:19, :49:17]
  assign io_regRead2_data =
    io_regRead2_en & (|io_regRead2_addr)
      ? (io_exeForward_en & io_regRead2_addr == io_exeForward_addr
           ? io_exeForward_data
           : io_memForward_en & io_regRead2_addr == io_memForward_addr
               ? io_memForward_data
               : io_wbForward_en & io_regRead2_addr == io_wbForward_addr
                   ? io_wbForward_data
                   : io_regFile2_data)
      : 32'h0;	// @[<stdin>:2332:10, CRRV/src/core/pipeline/HazardResolver.scala:38:{18,31,40}, :39:{29,42,66}, :40:19, :41:{35,48,72}, :42:19, :43:{34,47,70}, :44:19, :46:19, :49:17]
  assign io_csrRead_data = io_regCsr_data;	// @[<stdin>:2332:10]
  assign io_regFile1_en = io_regRead1_en;	// @[<stdin>:2332:10]
  assign io_regFile1_addr = io_regRead1_addr;	// @[<stdin>:2332:10]
  assign io_regFile2_en = io_regRead2_en;	// @[<stdin>:2332:10]
  assign io_regFile2_addr = io_regRead2_addr;	// @[<stdin>:2332:10]
  assign io_regCsr_addr = io_csrRead_addr;	// @[<stdin>:2332:10]
  assign io_memExcMonCheck_valid =
    io_wbExcMon_clear | io_wbExcMon_set
      ? io_memExcMonCheck_addr == io_wbExcMon_addr & ~io_wbExcMon_clear
      : io_excMonCheck_valid;	// @[<stdin>:2332:10, CRRV/src/core/pipeline/HazardResolver.scala:38:31, :61:{28,48}, :62:{23,45}, :63:33, :64:23, :66:23, :69:21, :72:19]
  assign io_excMonCheck_addr = io_memExcMonCheck_addr;	// @[<stdin>:2332:10]
  assign io_loadHazardFlag =
    io_regRead1_en
    & (io_exeForward_load & io_regRead1_addr == io_exeForward_addr | io_memForward_load
       & io_regRead1_addr == io_memForward_addr) | io_regRead2_en
    & (io_exeForward_load & io_regRead2_addr == io_exeForward_addr | io_memForward_load
       & io_regRead2_addr == io_memForward_addr);	// @[<stdin>:2332:10, CRRV/src/core/pipeline/HazardResolver.scala:79:{38,51}, :80:{38,51}, :81:{13,25}, :99:36]
  assign io_csrHazardFlag =
    (|io_csrRead_op) & io_csrRead_op != 3'h2
    & ((|io_memCsrStall_op) & io_memCsrStall_op != 3'h1
       & io_csrRead_addr == io_memCsrStall_addr | (|io_wbCsrStall_op)
       & io_wbCsrStall_op != 3'h1 & io_csrRead_addr == io_wbCsrStall_addr);	// @[<stdin>:2332:10, CRRV/src/core/pipeline/HazardResolver.scala:85:{26,49}, :86:36, :87:{25,35}, :88:17, :89:34, :90:{24,34}, :91:17, :92:{12,23}]
endmodule

module CsrFile(	// @[<stdin>:2428:10]
  input         clock,	// @[<stdin>:2429:11]
                reset,	// @[<stdin>:2430:11]
  input  [11:0] io_read_addr,	// @[CRRV/src/core/regfile/CsrFile.scala:12:14]
  input  [2:0]  io_write_op,	// @[CRRV/src/core/regfile/CsrFile.scala:12:14]
  input  [11:0] io_write_addr,	// @[CRRV/src/core/regfile/CsrFile.scala:12:14]
  input  [31:0] io_write_data,	// @[CRRV/src/core/regfile/CsrFile.scala:12:14]
  input  [2:0]  io_write_exceptType,	// @[CRRV/src/core/regfile/CsrFile.scala:12:14]
  input  [31:0] io_write_exceptPc,	// @[CRRV/src/core/regfile/CsrFile.scala:12:14]
  output [31:0] io_read_data,	// @[CRRV/src/core/regfile/CsrFile.scala:12:14]
                io_csrInfo_mepc,	// @[CRRV/src/core/regfile/CsrFile.scala:12:14]
                io_csrInfo_trapEnterVec	// @[CRRV/src/core/regfile/CsrFile.scala:12:14]
);

  reg  [31:0] mstatus;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26]
  reg  [31:0] mtvec;	// @[CRRV/src/core/regfile/CsrFile.scala:20:26]
  reg  [31:0] mepc;	// @[CRRV/src/core/regfile/CsrFile.scala:21:26]
  reg  [31:0] mcause;	// @[CRRV/src/core/regfile/CsrFile.scala:22:26]
  wire [31:0] readData =
    io_read_addr == 12'hF12 | io_read_addr == 12'hF11
      ? 32'h0
      : io_read_addr == 12'h342
          ? mcause
          : io_read_addr == 12'h341
              ? mepc
              : io_read_addr == 12'h305
                  ? mtvec
                  : io_read_addr == 12'h300 ? mstatus : 32'h0;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26, :20:26, :21:26, :22:26, :28:47]
  wire        writeEn = (|io_write_op) & io_write_op != 3'h1;	// @[CRRV/src/core/regfile/CsrFile.scala:40:{39,51,66}]
  wire [31:0] _writeData_T = readData | io_write_data;	// @[CRRV/src/core/regfile/CsrFile.scala:28:47, :45:27]
  wire [31:0] _writeData_T_2 = readData & ~io_write_data;	// @[CRRV/src/core/regfile/CsrFile.scala:28:47, :46:{27,29}]
  wire        _GEN = io_write_op == 3'h3 | io_write_op == 3'h2;	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
  wire        _writeData_T_7 = io_write_op == 3'h4;	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
  wire        _writeData_T_9 = io_write_op == 3'h5;	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
  always @(posedge clock) begin	// @[<stdin>:2429:11]
    if (reset) begin	// @[<stdin>:2429:11]
      mstatus <= 32'h0;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26]
      mtvec <= 32'h0;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26, :20:26]
      mepc <= 32'h0;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26, :21:26]
      mcause <= 32'h0;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26, :22:26]
    end
    else begin	// @[<stdin>:2429:11]
      if ((|io_write_exceptType) | ~(writeEn & io_write_addr == 12'h300)) begin	// @[CRRV/src/core/regfile/CsrFile.scala:19:26, :28:47, :40:51, :50:{28,42}, :55:23, :56:{24,41,51}]
      end
      else if (_writeData_T_9)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
        mstatus <= _writeData_T_2;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26, :46:27]
      else if (_writeData_T_7)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
        mstatus <= _writeData_T;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26, :45:27]
      else if (_GEN)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
        mstatus <= io_write_data;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26]
      else	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
        mstatus <= 32'h0;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26]
      if ((|io_write_exceptType) | ~(writeEn & io_write_addr == 12'h305)) begin	// @[CRRV/src/core/regfile/CsrFile.scala:20:26, :28:47, :40:51, :50:{28,42}, :55:23, :57:{24,39,47}]
      end
      else if (_writeData_T_9)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
        mtvec <= _writeData_T_2;	// @[CRRV/src/core/regfile/CsrFile.scala:20:26, :46:27]
      else if (_writeData_T_7)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
        mtvec <= _writeData_T;	// @[CRRV/src/core/regfile/CsrFile.scala:20:26, :45:27]
      else if (_GEN)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
        mtvec <= io_write_data;	// @[CRRV/src/core/regfile/CsrFile.scala:20:26]
      else	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
        mtvec <= 32'h0;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26, :20:26]
      if (|io_write_exceptType) begin	// @[CRRV/src/core/regfile/CsrFile.scala:50:28]
        if (io_write_exceptType == 3'h1) begin	// @[CRRV/src/core/regfile/CsrFile.scala:40:66, :51:30]
          mepc <= io_write_exceptPc;	// @[CRRV/src/core/regfile/CsrFile.scala:21:26]
          mcause <= 32'hB;	// @[CRRV/src/core/regfile/CsrFile.scala:22:26, :53:14]
        end
      end
      else begin	// @[CRRV/src/core/regfile/CsrFile.scala:50:28]
        if (writeEn & io_write_addr == 12'h341) begin	// @[CRRV/src/core/regfile/CsrFile.scala:21:26, :28:47, :40:51, :55:23, :58:{24,38,45}]
          if (_writeData_T_9)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
            mepc <= _writeData_T_2;	// @[CRRV/src/core/regfile/CsrFile.scala:21:26, :46:27]
          else if (_writeData_T_7)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
            mepc <= _writeData_T;	// @[CRRV/src/core/regfile/CsrFile.scala:21:26, :45:27]
          else if (_GEN)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
            mepc <= io_write_data;	// @[CRRV/src/core/regfile/CsrFile.scala:21:26]
          else	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
            mepc <= 32'h0;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26, :21:26]
        end
        if (writeEn & io_write_addr == 12'h342) begin	// @[CRRV/src/core/regfile/CsrFile.scala:22:26, :28:47, :40:51, :55:23, :59:{24,40,49}]
          if (_writeData_T_9)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
            mcause <= _writeData_T_2;	// @[CRRV/src/core/regfile/CsrFile.scala:22:26, :46:27]
          else if (_writeData_T_7)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
            mcause <= _writeData_T;	// @[CRRV/src/core/regfile/CsrFile.scala:22:26, :45:27]
          else if (_GEN)	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
            mcause <= io_write_data;	// @[CRRV/src/core/regfile/CsrFile.scala:22:26]
          else	// @[CRRV/src/core/regfile/CsrFile.scala:41:46]
            mcause <= 32'h0;	// @[CRRV/src/core/regfile/CsrFile.scala:19:26, :22:26]
        end
      end
    end
  end // always @(posedge)
  assign io_read_data = readData;	// @[<stdin>:2428:10, CRRV/src/core/regfile/CsrFile.scala:28:47]
  assign io_csrInfo_mepc = mepc;	// @[<stdin>:2428:10, CRRV/src/core/regfile/CsrFile.scala:21:26]
  assign io_csrInfo_trapEnterVec = mtvec;	// @[<stdin>:2428:10, CRRV/src/core/regfile/CsrFile.scala:20:26]
endmodule

module RegFile(	// @[<stdin>:2496:10]
  input         clock,	// @[<stdin>:2497:11]
                io_read1_en,	// @[CRRV/src/core/regfile/RegFile.scala:10:14]
  input  [4:0]  io_read1_addr,	// @[CRRV/src/core/regfile/RegFile.scala:10:14]
  input         io_read2_en,	// @[CRRV/src/core/regfile/RegFile.scala:10:14]
  input  [4:0]  io_read2_addr,	// @[CRRV/src/core/regfile/RegFile.scala:10:14]
  input         io_write_en,	// @[CRRV/src/core/regfile/RegFile.scala:10:14]
  input  [4:0]  io_write_addr,	// @[CRRV/src/core/regfile/RegFile.scala:10:14]
  input  [31:0] io_write_data,	// @[CRRV/src/core/regfile/RegFile.scala:10:14]
  output [31:0] io_read1_data,	// @[CRRV/src/core/regfile/RegFile.scala:10:14]
                io_read2_data	// @[CRRV/src/core/regfile/RegFile.scala:10:14]
);

  wire [31:0] _regfile_ext_R0_data;	// @[CRRV/src/core/regfile/RegFile.scala:15:20]
  wire [31:0] _regfile_ext_R1_data;	// @[CRRV/src/core/regfile/RegFile.scala:15:20]
  regfile_combMem regfile_ext (	// @[CRRV/src/core/regfile/RegFile.scala:15:20]
    .R0_addr (io_read1_addr),
    .R0_en   (1'h1),	// @[<stdin>:2496:10]
    .R0_clk  (clock),
    .R1_addr (io_read2_addr),
    .R1_en   (1'h1),	// @[<stdin>:2496:10]
    .R1_clk  (clock),
    .W0_addr (io_write_addr),
    .W0_en   (io_write_en & (|io_write_addr)),	// @[CRRV/src/core/regfile/RegFile.scala:19:{20,37}]
    .W0_clk  (clock),
    .W0_data (io_write_data),
    .R0_data (_regfile_ext_R0_data),
    .R1_data (_regfile_ext_R1_data)
  );
  assign io_read1_data = (|io_read1_addr) & io_read1_en ? _regfile_ext_R0_data : 32'h0;	// @[<stdin>:2496:10, CRRV/src/core/regfile/RegFile.scala:15:20, :17:{23,38,46}, :18:23]
  assign io_read2_data = (|io_read2_addr) & io_read2_en ? _regfile_ext_R1_data : 32'h0;	// @[<stdin>:2496:10, CRRV/src/core/regfile/RegFile.scala:15:20, :18:{23,38,46}]
endmodule

module ExclusiveMonitor(	// @[<stdin>:2519:10]
  input         clock,	// @[<stdin>:2520:11]
                reset,	// @[<stdin>:2521:11]
                io_flush,	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:10:14]
  input  [31:0] io_check_addr,	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:10:14]
                io_update_addr,	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:10:14]
  input         io_update_set,	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:10:14]
                io_update_clear,	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:10:14]
  output        io_check_valid	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:10:14]
);

  reg         flag;	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:16:21]
  reg  [31:0] addr;	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:17:21]
  wire        _GEN = io_flush | io_update_clear & io_update_addr == addr;	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:17:21, :19:{17,37,55}]
  always @(posedge clock) begin	// @[<stdin>:2520:11]
    if (reset) begin	// @[<stdin>:2520:11]
      flag <= 1'h0;	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:16:21]
      addr <= 32'h0;	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:17:21]
    end
    else begin	// @[<stdin>:2520:11]
      flag <= ~_GEN & (io_update_set | flag);	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:16:21, :19:{17,66}, :20:10, :22:29, :23:10]
      if (_GEN)	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:19:17]
        addr <= 32'h0;	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:17:21]
      else if (io_update_set)	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:10:14]
        addr <= io_update_addr;	// @[CRRV/src/core/atom/ExclusiveMonitor.scala:17:21]
    end
  end // always @(posedge)
  assign io_check_valid = flag & addr == io_check_addr;	// @[<stdin>:2519:10, CRRV/src/core/atom/ExclusiveMonitor.scala:16:21, :17:21, :27:{26,34}]
endmodule

module Core(	// @[<stdin>:2542:10]
  input         clock,	// @[<stdin>:2543:11]
                reset,	// @[<stdin>:2544:11]
                io_inst_out_ready,	// @[CRRV/src/core/Core.scala:12:14]
  input  [31:0] io_inst_in_rdata,	// @[CRRV/src/core/Core.scala:12:14]
  input         io_data_out_ready,	// @[CRRV/src/core/Core.scala:12:14]
  input  [31:0] io_data_in_rdata,	// @[CRRV/src/core/Core.scala:12:14]
  output [31:0] io_inst_out_bits_addr,	// @[CRRV/src/core/Core.scala:12:14]
  output        io_data_out_valid,	// @[CRRV/src/core/Core.scala:12:14]
  output [31:0] io_data_out_bits_addr,	// @[CRRV/src/core/Core.scala:12:14]
  output        io_data_out_bits_writeEn,	// @[CRRV/src/core/Core.scala:12:14]
  output [1:0]  io_data_out_bits_size,	// @[CRRV/src/core/Core.scala:12:14]
  output [31:0] io_data_out_bits_wdata,	// @[CRRV/src/core/Core.scala:12:14]
  output        io_debug_valid,	// @[CRRV/src/core/Core.scala:12:14]
                io_debug_halt,	// @[CRRV/src/core/Core.scala:12:14]
                io_debug_deviceAccess,	// @[CRRV/src/core/Core.scala:12:14]
  output [31:0] io_debug_deviceAddr,	// @[CRRV/src/core/Core.scala:12:14]
                io_debug_pc,	// @[CRRV/src/core/Core.scala:12:14]
  output        io_debug_regWen,	// @[CRRV/src/core/Core.scala:12:14]
  output [4:0]  io_debug_regWaddr,	// @[CRRV/src/core/Core.scala:12:14]
  output [31:0] io_debug_regWdata	// @[CRRV/src/core/Core.scala:12:14]
);

  wire        _excMon_io_check_valid;	// @[CRRV/src/core/Core.scala:32:31]
  wire [31:0] _regFile_io_read1_data;	// @[CRRV/src/core/Core.scala:31:31]
  wire [31:0] _regFile_io_read2_data;	// @[CRRV/src/core/Core.scala:31:31]
  wire [31:0] _csrFile_io_read_data;	// @[CRRV/src/core/Core.scala:30:31]
  wire [31:0] _csrFile_io_csrInfo_mepc;	// @[CRRV/src/core/Core.scala:30:31]
  wire [31:0] _csrFile_io_csrInfo_trapEnterVec;	// @[CRRV/src/core/Core.scala:30:31]
  wire [31:0] _hazardResolver_io_regRead1_data;	// @[CRRV/src/core/Core.scala:29:31]
  wire [31:0] _hazardResolver_io_regRead2_data;	// @[CRRV/src/core/Core.scala:29:31]
  wire [31:0] _hazardResolver_io_csrRead_data;	// @[CRRV/src/core/Core.scala:29:31]
  wire        _hazardResolver_io_regFile1_en;	// @[CRRV/src/core/Core.scala:29:31]
  wire [4:0]  _hazardResolver_io_regFile1_addr;	// @[CRRV/src/core/Core.scala:29:31]
  wire        _hazardResolver_io_regFile2_en;	// @[CRRV/src/core/Core.scala:29:31]
  wire [4:0]  _hazardResolver_io_regFile2_addr;	// @[CRRV/src/core/Core.scala:29:31]
  wire [11:0] _hazardResolver_io_regCsr_addr;	// @[CRRV/src/core/Core.scala:29:31]
  wire        _hazardResolver_io_memExcMonCheck_valid;	// @[CRRV/src/core/Core.scala:29:31]
  wire [31:0] _hazardResolver_io_excMonCheck_addr;	// @[CRRV/src/core/Core.scala:29:31]
  wire        _hazardResolver_io_loadHazardFlag;	// @[CRRV/src/core/Core.scala:29:31]
  wire        _hazardResolver_io_csrHazardFlag;	// @[CRRV/src/core/Core.scala:29:31]
  wire        _pipelineControl_io_stallIF;	// @[CRRV/src/core/Core.scala:28:31]
  wire        _pipelineControl_io_stallID;	// @[CRRV/src/core/Core.scala:28:31]
  wire        _pipelineControl_io_stallEXE;	// @[CRRV/src/core/Core.scala:28:31]
  wire        _pipelineControl_io_stallMEM;	// @[CRRV/src/core/Core.scala:28:31]
  wire        _pipelineControl_io_stallWB;	// @[CRRV/src/core/Core.scala:28:31]
  wire        _pipelineControl_io_flushAll;	// @[CRRV/src/core/Core.scala:28:31]
  wire        _pipelineControl_io_flushIF;	// @[CRRV/src/core/Core.scala:28:31]
  wire [31:0] _pipelineControl_io_flushPc;	// @[CRRV/src/core/Core.scala:28:31]
  wire [2:0]  _writeBackStage_io_wb2csr_op;	// @[CRRV/src/core/Core.scala:26:30]
  wire [11:0] _writeBackStage_io_wb2csr_addr;	// @[CRRV/src/core/Core.scala:26:30]
  wire [31:0] _writeBackStage_io_wb2csr_data;	// @[CRRV/src/core/Core.scala:26:30]
  wire [2:0]  _writeBackStage_io_wb2csr_exceptType;	// @[CRRV/src/core/Core.scala:26:30]
  wire [31:0] _writeBackStage_io_wb2csr_exceptPc;	// @[CRRV/src/core/Core.scala:26:30]
  wire [31:0] _writeBackStage_io_excMonCommit_addr;	// @[CRRV/src/core/Core.scala:26:30]
  wire        _writeBackStage_io_excMonCommit_set;	// @[CRRV/src/core/Core.scala:26:30]
  wire        _writeBackStage_io_excMonCommit_clear;	// @[CRRV/src/core/Core.scala:26:30]
  wire        _writeBackStage_io_regForward_en;	// @[CRRV/src/core/Core.scala:26:30]
  wire [4:0]  _writeBackStage_io_regForward_addr;	// @[CRRV/src/core/Core.scala:26:30]
  wire [31:0] _writeBackStage_io_regForward_data;	// @[CRRV/src/core/Core.scala:26:30]
  wire        _mem2wb_io_next_IF_instValid;	// @[CRRV/src/core/Core.scala:25:30]
  wire [31:0] _mem2wb_io_next_IF_pc;	// @[CRRV/src/core/Core.scala:25:30]
  wire [31:0] _mem2wb_io_next_ID_inst;	// @[CRRV/src/core/Core.scala:25:30]
  wire [4:0]  _mem2wb_io_next_ID_lsuOp;	// @[CRRV/src/core/Core.scala:25:30]
  wire        _mem2wb_io_next_ID_regWen;	// @[CRRV/src/core/Core.scala:25:30]
  wire [4:0]  _mem2wb_io_next_ID_regWaddr;	// @[CRRV/src/core/Core.scala:25:30]
  wire [2:0]  _mem2wb_io_next_ID_csrOp;	// @[CRRV/src/core/Core.scala:25:30]
  wire [11:0] _mem2wb_io_next_ID_csrAddr;	// @[CRRV/src/core/Core.scala:25:30]
  wire [31:0] _mem2wb_io_next_ID_csrWriteData;	// @[CRRV/src/core/Core.scala:25:30]
  wire [2:0]  _mem2wb_io_next_ID_exceptType;	// @[CRRV/src/core/Core.scala:25:30]
  wire [31:0] _mem2wb_io_next_EXE_exeResult;	// @[CRRV/src/core/Core.scala:25:30]
  wire [31:0] _mem2wb_io_next_MEM_memAddr;	// @[CRRV/src/core/Core.scala:25:30]
  wire [31:0] _mem2wb_io_next_MEM_excMonCommit_addr;	// @[CRRV/src/core/Core.scala:25:30]
  wire        _mem2wb_io_next_MEM_excMonCommit_set;	// @[CRRV/src/core/Core.scala:25:30]
  wire        _mem2wb_io_next_MEM_excMonCommit_clear;	// @[CRRV/src/core/Core.scala:25:30]
  wire        _mem2wb_io_next_MEM_amoValid;	// @[CRRV/src/core/Core.scala:25:30]
  wire [31:0] _mem2wb_io_next_MEM_amoResult;	// @[CRRV/src/core/Core.scala:25:30]
  wire        _memoryStage_io_control_stallReq;	// @[CRRV/src/core/Core.scala:24:30]
  wire        _memoryStage_io_mem2wb_IF_instValid;	// @[CRRV/src/core/Core.scala:24:30]
  wire [31:0] _memoryStage_io_mem2wb_IF_pc;	// @[CRRV/src/core/Core.scala:24:30]
  wire [31:0] _memoryStage_io_mem2wb_ID_inst;	// @[CRRV/src/core/Core.scala:24:30]
  wire [4:0]  _memoryStage_io_mem2wb_ID_lsuOp;	// @[CRRV/src/core/Core.scala:24:30]
  wire        _memoryStage_io_mem2wb_ID_regWen;	// @[CRRV/src/core/Core.scala:24:30]
  wire [4:0]  _memoryStage_io_mem2wb_ID_regWaddr;	// @[CRRV/src/core/Core.scala:24:30]
  wire [2:0]  _memoryStage_io_mem2wb_ID_csrOp;	// @[CRRV/src/core/Core.scala:24:30]
  wire [11:0] _memoryStage_io_mem2wb_ID_csrAddr;	// @[CRRV/src/core/Core.scala:24:30]
  wire [31:0] _memoryStage_io_mem2wb_ID_csrWriteData;	// @[CRRV/src/core/Core.scala:24:30]
  wire [2:0]  _memoryStage_io_mem2wb_ID_exceptType;	// @[CRRV/src/core/Core.scala:24:30]
  wire [31:0] _memoryStage_io_mem2wb_EXE_exeResult;	// @[CRRV/src/core/Core.scala:24:30]
  wire [31:0] _memoryStage_io_mem2wb_MEM_memAddr;	// @[CRRV/src/core/Core.scala:24:30]
  wire [31:0] _memoryStage_io_mem2wb_MEM_excMonCommit_addr;	// @[CRRV/src/core/Core.scala:24:30]
  wire        _memoryStage_io_mem2wb_MEM_excMonCommit_set;	// @[CRRV/src/core/Core.scala:24:30]
  wire        _memoryStage_io_mem2wb_MEM_excMonCommit_clear;	// @[CRRV/src/core/Core.scala:24:30]
  wire        _memoryStage_io_mem2wb_MEM_amoValid;	// @[CRRV/src/core/Core.scala:24:30]
  wire [31:0] _memoryStage_io_mem2wb_MEM_amoResult;	// @[CRRV/src/core/Core.scala:24:30]
  wire [31:0] _memoryStage_io_excMon_addr;	// @[CRRV/src/core/Core.scala:24:30]
  wire [2:0]  _memoryStage_io_memCsrStall_op;	// @[CRRV/src/core/Core.scala:24:30]
  wire [11:0] _memoryStage_io_memCsrStall_addr;	// @[CRRV/src/core/Core.scala:24:30]
  wire        _memoryStage_io_regForward_en;	// @[CRRV/src/core/Core.scala:24:30]
  wire [4:0]  _memoryStage_io_regForward_addr;	// @[CRRV/src/core/Core.scala:24:30]
  wire [31:0] _memoryStage_io_regForward_data;	// @[CRRV/src/core/Core.scala:24:30]
  wire        _memoryStage_io_regForward_load;	// @[CRRV/src/core/Core.scala:24:30]
  wire        _exe2mem_io_next_IF_instValid;	// @[CRRV/src/core/Core.scala:23:30]
  wire [31:0] _exe2mem_io_next_IF_pc;	// @[CRRV/src/core/Core.scala:23:30]
  wire [31:0] _exe2mem_io_next_ID_inst;	// @[CRRV/src/core/Core.scala:23:30]
  wire [4:0]  _exe2mem_io_next_ID_lsuOp;	// @[CRRV/src/core/Core.scala:23:30]
  wire [31:0] _exe2mem_io_next_ID_lsuData;	// @[CRRV/src/core/Core.scala:23:30]
  wire        _exe2mem_io_next_ID_regWen;	// @[CRRV/src/core/Core.scala:23:30]
  wire [4:0]  _exe2mem_io_next_ID_regWaddr;	// @[CRRV/src/core/Core.scala:23:30]
  wire [2:0]  _exe2mem_io_next_ID_csrOp;	// @[CRRV/src/core/Core.scala:23:30]
  wire [11:0] _exe2mem_io_next_ID_csrAddr;	// @[CRRV/src/core/Core.scala:23:30]
  wire [31:0] _exe2mem_io_next_ID_csrWriteData;	// @[CRRV/src/core/Core.scala:23:30]
  wire [2:0]  _exe2mem_io_next_ID_exceptType;	// @[CRRV/src/core/Core.scala:23:30]
  wire        _exe2mem_io_next_EXE_load;	// @[CRRV/src/core/Core.scala:23:30]
  wire [31:0] _exe2mem_io_next_EXE_exeResult;	// @[CRRV/src/core/Core.scala:23:30]
  wire        _executeStage_io_control_stallReq;	// @[CRRV/src/core/Core.scala:22:30]
  wire        _executeStage_io_exe2mem_IF_instValid;	// @[CRRV/src/core/Core.scala:22:30]
  wire [31:0] _executeStage_io_exe2mem_IF_pc;	// @[CRRV/src/core/Core.scala:22:30]
  wire [31:0] _executeStage_io_exe2mem_ID_inst;	// @[CRRV/src/core/Core.scala:22:30]
  wire [4:0]  _executeStage_io_exe2mem_ID_lsuOp;	// @[CRRV/src/core/Core.scala:22:30]
  wire [31:0] _executeStage_io_exe2mem_ID_lsuData;	// @[CRRV/src/core/Core.scala:22:30]
  wire        _executeStage_io_exe2mem_ID_regWen;	// @[CRRV/src/core/Core.scala:22:30]
  wire [4:0]  _executeStage_io_exe2mem_ID_regWaddr;	// @[CRRV/src/core/Core.scala:22:30]
  wire [2:0]  _executeStage_io_exe2mem_ID_csrOp;	// @[CRRV/src/core/Core.scala:22:30]
  wire [11:0] _executeStage_io_exe2mem_ID_csrAddr;	// @[CRRV/src/core/Core.scala:22:30]
  wire [31:0] _executeStage_io_exe2mem_ID_csrWriteData;	// @[CRRV/src/core/Core.scala:22:30]
  wire [2:0]  _executeStage_io_exe2mem_ID_exceptType;	// @[CRRV/src/core/Core.scala:22:30]
  wire        _executeStage_io_exe2mem_EXE_load;	// @[CRRV/src/core/Core.scala:22:30]
  wire [31:0] _executeStage_io_exe2mem_EXE_exeResult;	// @[CRRV/src/core/Core.scala:22:30]
  wire [2:0]  _executeStage_io_csrRead_op;	// @[CRRV/src/core/Core.scala:22:30]
  wire [11:0] _executeStage_io_csrRead_addr;	// @[CRRV/src/core/Core.scala:22:30]
  wire        _executeStage_io_regForward_en;	// @[CRRV/src/core/Core.scala:22:30]
  wire [4:0]  _executeStage_io_regForward_addr;	// @[CRRV/src/core/Core.scala:22:30]
  wire [31:0] _executeStage_io_regForward_data;	// @[CRRV/src/core/Core.scala:22:30]
  wire        _executeStage_io_regForward_load;	// @[CRRV/src/core/Core.scala:22:30]
  wire        _id2exe_io_next_IF_instValid;	// @[CRRV/src/core/Core.scala:21:30]
  wire [31:0] _id2exe_io_next_IF_pc;	// @[CRRV/src/core/Core.scala:21:30]
  wire [31:0] _id2exe_io_next_ID_inst;	// @[CRRV/src/core/Core.scala:21:30]
  wire [3:0]  _id2exe_io_next_ID_aluOp;	// @[CRRV/src/core/Core.scala:21:30]
  wire [3:0]  _id2exe_io_next_ID_mduOp;	// @[CRRV/src/core/Core.scala:21:30]
  wire [31:0] _id2exe_io_next_ID_src1;	// @[CRRV/src/core/Core.scala:21:30]
  wire [31:0] _id2exe_io_next_ID_src2;	// @[CRRV/src/core/Core.scala:21:30]
  wire [4:0]  _id2exe_io_next_ID_lsuOp;	// @[CRRV/src/core/Core.scala:21:30]
  wire [31:0] _id2exe_io_next_ID_lsuData;	// @[CRRV/src/core/Core.scala:21:30]
  wire        _id2exe_io_next_ID_regWen;	// @[CRRV/src/core/Core.scala:21:30]
  wire [4:0]  _id2exe_io_next_ID_regWaddr;	// @[CRRV/src/core/Core.scala:21:30]
  wire [2:0]  _id2exe_io_next_ID_csrOp;	// @[CRRV/src/core/Core.scala:21:30]
  wire [11:0] _id2exe_io_next_ID_csrAddr;	// @[CRRV/src/core/Core.scala:21:30]
  wire [31:0] _id2exe_io_next_ID_csrWriteData;	// @[CRRV/src/core/Core.scala:21:30]
  wire [2:0]  _id2exe_io_next_ID_exceptType;	// @[CRRV/src/core/Core.scala:21:30]
  wire        _decodeStage_io_control_flushIF;	// @[CRRV/src/core/Core.scala:20:30]
  wire [31:0] _decodeStage_io_control_flushPc;	// @[CRRV/src/core/Core.scala:20:30]
  wire        _decodeStage_io_id2exe_IF_instValid;	// @[CRRV/src/core/Core.scala:20:30]
  wire [31:0] _decodeStage_io_id2exe_IF_pc;	// @[CRRV/src/core/Core.scala:20:30]
  wire [31:0] _decodeStage_io_id2exe_ID_inst;	// @[CRRV/src/core/Core.scala:20:30]
  wire [3:0]  _decodeStage_io_id2exe_ID_aluOp;	// @[CRRV/src/core/Core.scala:20:30]
  wire [3:0]  _decodeStage_io_id2exe_ID_mduOp;	// @[CRRV/src/core/Core.scala:20:30]
  wire [31:0] _decodeStage_io_id2exe_ID_src1;	// @[CRRV/src/core/Core.scala:20:30]
  wire [31:0] _decodeStage_io_id2exe_ID_src2;	// @[CRRV/src/core/Core.scala:20:30]
  wire [4:0]  _decodeStage_io_id2exe_ID_lsuOp;	// @[CRRV/src/core/Core.scala:20:30]
  wire [31:0] _decodeStage_io_id2exe_ID_lsuData;	// @[CRRV/src/core/Core.scala:20:30]
  wire        _decodeStage_io_id2exe_ID_regWen;	// @[CRRV/src/core/Core.scala:20:30]
  wire [4:0]  _decodeStage_io_id2exe_ID_regWaddr;	// @[CRRV/src/core/Core.scala:20:30]
  wire [2:0]  _decodeStage_io_id2exe_ID_csrOp;	// @[CRRV/src/core/Core.scala:20:30]
  wire [11:0] _decodeStage_io_id2exe_ID_csrAddr;	// @[CRRV/src/core/Core.scala:20:30]
  wire [31:0] _decodeStage_io_id2exe_ID_csrWriteData;	// @[CRRV/src/core/Core.scala:20:30]
  wire [2:0]  _decodeStage_io_id2exe_ID_exceptType;	// @[CRRV/src/core/Core.scala:20:30]
  wire        _decodeStage_io_branchInfo_branch;	// @[CRRV/src/core/Core.scala:20:30]
  wire        _decodeStage_io_branchInfo_jump;	// @[CRRV/src/core/Core.scala:20:30]
  wire        _decodeStage_io_branchInfo_taken;	// @[CRRV/src/core/Core.scala:20:30]
  wire [4:0]  _decodeStage_io_branchInfo_index;	// @[CRRV/src/core/Core.scala:20:30]
  wire [31:0] _decodeStage_io_branchInfo_pc;	// @[CRRV/src/core/Core.scala:20:30]
  wire [31:0] _decodeStage_io_branchInfo_target;	// @[CRRV/src/core/Core.scala:20:30]
  wire        _decodeStage_io_regRead1_en;	// @[CRRV/src/core/Core.scala:20:30]
  wire [4:0]  _decodeStage_io_regRead1_addr;	// @[CRRV/src/core/Core.scala:20:30]
  wire        _decodeStage_io_regRead2_en;	// @[CRRV/src/core/Core.scala:20:30]
  wire [4:0]  _decodeStage_io_regRead2_addr;	// @[CRRV/src/core/Core.scala:20:30]
  wire        _if2id_io_next_IF_instValid;	// @[CRRV/src/core/Core.scala:19:30]
  wire [31:0] _if2id_io_next_IF_pc;	// @[CRRV/src/core/Core.scala:19:30]
  wire        _if2id_io_next_IF_predTaken;	// @[CRRV/src/core/Core.scala:19:30]
  wire [31:0] _if2id_io_next_IF_predTarget;	// @[CRRV/src/core/Core.scala:19:30]
  wire [4:0]  _if2id_io_next_IF_predIndex;	// @[CRRV/src/core/Core.scala:19:30]
  wire        _fetchStage_io_control_stallReq;	// @[CRRV/src/core/Core.scala:18:30]
  wire        _fetchStage_io_if2id_IF_instValid;	// @[CRRV/src/core/Core.scala:18:30]
  wire [31:0] _fetchStage_io_if2id_IF_pc;	// @[CRRV/src/core/Core.scala:18:30]
  wire        _fetchStage_io_if2id_IF_predTaken;	// @[CRRV/src/core/Core.scala:18:30]
  wire [31:0] _fetchStage_io_if2id_IF_predTarget;	// @[CRRV/src/core/Core.scala:18:30]
  wire [4:0]  _fetchStage_io_if2id_IF_predIndex;	// @[CRRV/src/core/Core.scala:18:30]
  FetchStage fetchStage (	// @[CRRV/src/core/Core.scala:18:30]
    .clock                  (clock),
    .reset                  (reset),
    .io_control_flush       (_pipelineControl_io_flushIF),	// @[CRRV/src/core/Core.scala:28:31]
    .io_control_flushPC     (_pipelineControl_io_flushPc),	// @[CRRV/src/core/Core.scala:28:31]
    .io_control_stall       (_pipelineControl_io_stallIF),	// @[CRRV/src/core/Core.scala:28:31]
    .io_instRom_ready       (io_inst_out_ready),
    .io_branchInfo_branch   (_decodeStage_io_branchInfo_branch),	// @[CRRV/src/core/Core.scala:20:30]
    .io_branchInfo_jump     (_decodeStage_io_branchInfo_jump),	// @[CRRV/src/core/Core.scala:20:30]
    .io_branchInfo_taken    (_decodeStage_io_branchInfo_taken),	// @[CRRV/src/core/Core.scala:20:30]
    .io_branchInfo_index    (_decodeStage_io_branchInfo_index),	// @[CRRV/src/core/Core.scala:20:30]
    .io_branchInfo_pc       (_decodeStage_io_branchInfo_pc),	// @[CRRV/src/core/Core.scala:20:30]
    .io_branchInfo_target   (_decodeStage_io_branchInfo_target),	// @[CRRV/src/core/Core.scala:20:30]
    .io_control_stallReq    (_fetchStage_io_control_stallReq),
    .io_instRom_bits_addr   (io_inst_out_bits_addr),
    .io_if2id_IF_instValid  (_fetchStage_io_if2id_IF_instValid),
    .io_if2id_IF_pc         (_fetchStage_io_if2id_IF_pc),
    .io_if2id_IF_predTaken  (_fetchStage_io_if2id_IF_predTaken),
    .io_if2id_IF_predTarget (_fetchStage_io_if2id_IF_predTarget),
    .io_if2id_IF_predIndex  (_fetchStage_io_if2id_IF_predIndex)
  );
  PipelineStage if2id (	// @[CRRV/src/core/Core.scala:19:30]
    .clock                 (clock),
    .reset                 (reset),
    .io_flush              (_pipelineControl_io_flushIF),	// @[CRRV/src/core/Core.scala:28:31]
    .io_stallPrev          (_pipelineControl_io_stallIF),	// @[CRRV/src/core/Core.scala:28:31]
    .io_stallNext          (_pipelineControl_io_stallID),	// @[CRRV/src/core/Core.scala:28:31]
    .io_prev_IF_instValid  (_fetchStage_io_if2id_IF_instValid),	// @[CRRV/src/core/Core.scala:18:30]
    .io_prev_IF_pc         (_fetchStage_io_if2id_IF_pc),	// @[CRRV/src/core/Core.scala:18:30]
    .io_prev_IF_predTaken  (_fetchStage_io_if2id_IF_predTaken),	// @[CRRV/src/core/Core.scala:18:30]
    .io_prev_IF_predTarget (_fetchStage_io_if2id_IF_predTarget),	// @[CRRV/src/core/Core.scala:18:30]
    .io_prev_IF_predIndex  (_fetchStage_io_if2id_IF_predIndex),	// @[CRRV/src/core/Core.scala:18:30]
    .io_next_IF_instValid  (_if2id_io_next_IF_instValid),
    .io_next_IF_pc         (_if2id_io_next_IF_pc),
    .io_next_IF_predTaken  (_if2id_io_next_IF_predTaken),
    .io_next_IF_predTarget (_if2id_io_next_IF_predTarget),
    .io_next_IF_predIndex  (_if2id_io_next_IF_predIndex)
  );
  DecodeStage decodeStage (	// @[CRRV/src/core/Core.scala:20:30]
    .clock                     (clock),
    .io_if2id_IF_instValid     (_if2id_io_next_IF_instValid),	// @[CRRV/src/core/Core.scala:19:30]
    .io_if2id_IF_pc            (_if2id_io_next_IF_pc),	// @[CRRV/src/core/Core.scala:19:30]
    .io_if2id_IF_predTaken     (_if2id_io_next_IF_predTaken),	// @[CRRV/src/core/Core.scala:19:30]
    .io_if2id_IF_predTarget    (_if2id_io_next_IF_predTarget),	// @[CRRV/src/core/Core.scala:19:30]
    .io_if2id_IF_predIndex     (_if2id_io_next_IF_predIndex),	// @[CRRV/src/core/Core.scala:19:30]
    .io_control_stall          (_pipelineControl_io_stallID),	// @[CRRV/src/core/Core.scala:28:31]
    .io_read_rdata             (io_inst_in_rdata),
    .io_regRead1_data          (_hazardResolver_io_regRead1_data),	// @[CRRV/src/core/Core.scala:29:31]
    .io_regRead2_data          (_hazardResolver_io_regRead2_data),	// @[CRRV/src/core/Core.scala:29:31]
    .io_control_flushIF        (_decodeStage_io_control_flushIF),
    .io_control_flushPc        (_decodeStage_io_control_flushPc),
    .io_id2exe_IF_instValid    (_decodeStage_io_id2exe_IF_instValid),
    .io_id2exe_IF_pc           (_decodeStage_io_id2exe_IF_pc),
    .io_id2exe_ID_inst         (_decodeStage_io_id2exe_ID_inst),
    .io_id2exe_ID_aluOp        (_decodeStage_io_id2exe_ID_aluOp),
    .io_id2exe_ID_mduOp        (_decodeStage_io_id2exe_ID_mduOp),
    .io_id2exe_ID_src1         (_decodeStage_io_id2exe_ID_src1),
    .io_id2exe_ID_src2         (_decodeStage_io_id2exe_ID_src2),
    .io_id2exe_ID_lsuOp        (_decodeStage_io_id2exe_ID_lsuOp),
    .io_id2exe_ID_lsuData      (_decodeStage_io_id2exe_ID_lsuData),
    .io_id2exe_ID_regWen       (_decodeStage_io_id2exe_ID_regWen),
    .io_id2exe_ID_regWaddr     (_decodeStage_io_id2exe_ID_regWaddr),
    .io_id2exe_ID_csrOp        (_decodeStage_io_id2exe_ID_csrOp),
    .io_id2exe_ID_csrAddr      (_decodeStage_io_id2exe_ID_csrAddr),
    .io_id2exe_ID_csrWriteData (_decodeStage_io_id2exe_ID_csrWriteData),
    .io_id2exe_ID_exceptType   (_decodeStage_io_id2exe_ID_exceptType),
    .io_branchInfo_branch      (_decodeStage_io_branchInfo_branch),
    .io_branchInfo_jump        (_decodeStage_io_branchInfo_jump),
    .io_branchInfo_taken       (_decodeStage_io_branchInfo_taken),
    .io_branchInfo_index       (_decodeStage_io_branchInfo_index),
    .io_branchInfo_pc          (_decodeStage_io_branchInfo_pc),
    .io_branchInfo_target      (_decodeStage_io_branchInfo_target),
    .io_regRead1_en            (_decodeStage_io_regRead1_en),
    .io_regRead1_addr          (_decodeStage_io_regRead1_addr),
    .io_regRead2_en            (_decodeStage_io_regRead2_en),
    .io_regRead2_addr          (_decodeStage_io_regRead2_addr)
  );
  PipelineStage_1 id2exe (	// @[CRRV/src/core/Core.scala:21:30]
    .clock                   (clock),
    .reset                   (reset),
    .io_flush                (_pipelineControl_io_flushAll),	// @[CRRV/src/core/Core.scala:28:31]
    .io_stallPrev            (_pipelineControl_io_stallID),	// @[CRRV/src/core/Core.scala:28:31]
    .io_stallNext            (_pipelineControl_io_stallEXE),	// @[CRRV/src/core/Core.scala:28:31]
    .io_prev_IF_instValid    (_decodeStage_io_id2exe_IF_instValid),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_IF_pc           (_decodeStage_io_id2exe_IF_pc),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_inst         (_decodeStage_io_id2exe_ID_inst),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_aluOp        (_decodeStage_io_id2exe_ID_aluOp),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_mduOp        (_decodeStage_io_id2exe_ID_mduOp),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_src1         (_decodeStage_io_id2exe_ID_src1),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_src2         (_decodeStage_io_id2exe_ID_src2),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_lsuOp        (_decodeStage_io_id2exe_ID_lsuOp),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_lsuData      (_decodeStage_io_id2exe_ID_lsuData),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_regWen       (_decodeStage_io_id2exe_ID_regWen),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_regWaddr     (_decodeStage_io_id2exe_ID_regWaddr),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_csrOp        (_decodeStage_io_id2exe_ID_csrOp),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_csrAddr      (_decodeStage_io_id2exe_ID_csrAddr),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_csrWriteData (_decodeStage_io_id2exe_ID_csrWriteData),	// @[CRRV/src/core/Core.scala:20:30]
    .io_prev_ID_exceptType   (_decodeStage_io_id2exe_ID_exceptType),	// @[CRRV/src/core/Core.scala:20:30]
    .io_next_IF_instValid    (_id2exe_io_next_IF_instValid),
    .io_next_IF_pc           (_id2exe_io_next_IF_pc),
    .io_next_ID_inst         (_id2exe_io_next_ID_inst),
    .io_next_ID_aluOp        (_id2exe_io_next_ID_aluOp),
    .io_next_ID_mduOp        (_id2exe_io_next_ID_mduOp),
    .io_next_ID_src1         (_id2exe_io_next_ID_src1),
    .io_next_ID_src2         (_id2exe_io_next_ID_src2),
    .io_next_ID_lsuOp        (_id2exe_io_next_ID_lsuOp),
    .io_next_ID_lsuData      (_id2exe_io_next_ID_lsuData),
    .io_next_ID_regWen       (_id2exe_io_next_ID_regWen),
    .io_next_ID_regWaddr     (_id2exe_io_next_ID_regWaddr),
    .io_next_ID_csrOp        (_id2exe_io_next_ID_csrOp),
    .io_next_ID_csrAddr      (_id2exe_io_next_ID_csrAddr),
    .io_next_ID_csrWriteData (_id2exe_io_next_ID_csrWriteData),
    .io_next_ID_exceptType   (_id2exe_io_next_ID_exceptType)
  );
  ExecuteStage executeStage (	// @[CRRV/src/core/Core.scala:22:30]
    .clock                      (clock),
    .reset                      (reset),
    .io_id2exe_IF_instValid     (_id2exe_io_next_IF_instValid),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_IF_pc            (_id2exe_io_next_IF_pc),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_inst          (_id2exe_io_next_ID_inst),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_aluOp         (_id2exe_io_next_ID_aluOp),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_mduOp         (_id2exe_io_next_ID_mduOp),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_src1          (_id2exe_io_next_ID_src1),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_src2          (_id2exe_io_next_ID_src2),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_lsuOp         (_id2exe_io_next_ID_lsuOp),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_lsuData       (_id2exe_io_next_ID_lsuData),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_regWen        (_id2exe_io_next_ID_regWen),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_regWaddr      (_id2exe_io_next_ID_regWaddr),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_csrOp         (_id2exe_io_next_ID_csrOp),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_csrAddr       (_id2exe_io_next_ID_csrAddr),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_csrWriteData  (_id2exe_io_next_ID_csrWriteData),	// @[CRRV/src/core/Core.scala:21:30]
    .io_id2exe_ID_exceptType    (_id2exe_io_next_ID_exceptType),	// @[CRRV/src/core/Core.scala:21:30]
    .io_control_flush           (_pipelineControl_io_flushAll),	// @[CRRV/src/core/Core.scala:28:31]
    .io_csrRead_data            (_hazardResolver_io_csrRead_data),	// @[CRRV/src/core/Core.scala:29:31]
    .io_control_stallReq        (_executeStage_io_control_stallReq),
    .io_exe2mem_IF_instValid    (_executeStage_io_exe2mem_IF_instValid),
    .io_exe2mem_IF_pc           (_executeStage_io_exe2mem_IF_pc),
    .io_exe2mem_ID_inst         (_executeStage_io_exe2mem_ID_inst),
    .io_exe2mem_ID_lsuOp        (_executeStage_io_exe2mem_ID_lsuOp),
    .io_exe2mem_ID_lsuData      (_executeStage_io_exe2mem_ID_lsuData),
    .io_exe2mem_ID_regWen       (_executeStage_io_exe2mem_ID_regWen),
    .io_exe2mem_ID_regWaddr     (_executeStage_io_exe2mem_ID_regWaddr),
    .io_exe2mem_ID_csrOp        (_executeStage_io_exe2mem_ID_csrOp),
    .io_exe2mem_ID_csrAddr      (_executeStage_io_exe2mem_ID_csrAddr),
    .io_exe2mem_ID_csrWriteData (_executeStage_io_exe2mem_ID_csrWriteData),
    .io_exe2mem_ID_exceptType   (_executeStage_io_exe2mem_ID_exceptType),
    .io_exe2mem_EXE_load        (_executeStage_io_exe2mem_EXE_load),
    .io_exe2mem_EXE_exeResult   (_executeStage_io_exe2mem_EXE_exeResult),
    .io_csrRead_op              (_executeStage_io_csrRead_op),
    .io_csrRead_addr            (_executeStage_io_csrRead_addr),
    .io_regForward_en           (_executeStage_io_regForward_en),
    .io_regForward_addr         (_executeStage_io_regForward_addr),
    .io_regForward_data         (_executeStage_io_regForward_data),
    .io_regForward_load         (_executeStage_io_regForward_load)
  );
  PipelineStage_2 exe2mem (	// @[CRRV/src/core/Core.scala:23:30]
    .clock                   (clock),
    .reset                   (reset),
    .io_flush                (_pipelineControl_io_flushAll),	// @[CRRV/src/core/Core.scala:28:31]
    .io_stallPrev            (_pipelineControl_io_stallEXE),	// @[CRRV/src/core/Core.scala:28:31]
    .io_stallNext            (_pipelineControl_io_stallMEM),	// @[CRRV/src/core/Core.scala:28:31]
    .io_prev_IF_instValid    (_executeStage_io_exe2mem_IF_instValid),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_IF_pc           (_executeStage_io_exe2mem_IF_pc),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_ID_inst         (_executeStage_io_exe2mem_ID_inst),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_ID_lsuOp        (_executeStage_io_exe2mem_ID_lsuOp),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_ID_lsuData      (_executeStage_io_exe2mem_ID_lsuData),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_ID_regWen       (_executeStage_io_exe2mem_ID_regWen),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_ID_regWaddr     (_executeStage_io_exe2mem_ID_regWaddr),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_ID_csrOp        (_executeStage_io_exe2mem_ID_csrOp),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_ID_csrAddr      (_executeStage_io_exe2mem_ID_csrAddr),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_ID_csrWriteData (_executeStage_io_exe2mem_ID_csrWriteData),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_ID_exceptType   (_executeStage_io_exe2mem_ID_exceptType),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_EXE_load        (_executeStage_io_exe2mem_EXE_load),	// @[CRRV/src/core/Core.scala:22:30]
    .io_prev_EXE_exeResult   (_executeStage_io_exe2mem_EXE_exeResult),	// @[CRRV/src/core/Core.scala:22:30]
    .io_next_IF_instValid    (_exe2mem_io_next_IF_instValid),
    .io_next_IF_pc           (_exe2mem_io_next_IF_pc),
    .io_next_ID_inst         (_exe2mem_io_next_ID_inst),
    .io_next_ID_lsuOp        (_exe2mem_io_next_ID_lsuOp),
    .io_next_ID_lsuData      (_exe2mem_io_next_ID_lsuData),
    .io_next_ID_regWen       (_exe2mem_io_next_ID_regWen),
    .io_next_ID_regWaddr     (_exe2mem_io_next_ID_regWaddr),
    .io_next_ID_csrOp        (_exe2mem_io_next_ID_csrOp),
    .io_next_ID_csrAddr      (_exe2mem_io_next_ID_csrAddr),
    .io_next_ID_csrWriteData (_exe2mem_io_next_ID_csrWriteData),
    .io_next_ID_exceptType   (_exe2mem_io_next_ID_exceptType),
    .io_next_EXE_load        (_exe2mem_io_next_EXE_load),
    .io_next_EXE_exeResult   (_exe2mem_io_next_EXE_exeResult)
  );
  MemoryStage memoryStage (	// @[CRRV/src/core/Core.scala:24:30]
    .clock                            (clock),
    .reset                            (reset),
    .io_exe2mem_IF_instValid          (_exe2mem_io_next_IF_instValid),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_IF_pc                 (_exe2mem_io_next_IF_pc),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_ID_inst               (_exe2mem_io_next_ID_inst),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_ID_lsuOp              (_exe2mem_io_next_ID_lsuOp),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_ID_lsuData            (_exe2mem_io_next_ID_lsuData),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_ID_regWen             (_exe2mem_io_next_ID_regWen),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_ID_regWaddr           (_exe2mem_io_next_ID_regWaddr),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_ID_csrOp              (_exe2mem_io_next_ID_csrOp),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_ID_csrAddr            (_exe2mem_io_next_ID_csrAddr),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_ID_csrWriteData       (_exe2mem_io_next_ID_csrWriteData),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_ID_exceptType         (_exe2mem_io_next_ID_exceptType),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_EXE_load              (_exe2mem_io_next_EXE_load),	// @[CRRV/src/core/Core.scala:23:30]
    .io_exe2mem_EXE_exeResult         (_exe2mem_io_next_EXE_exeResult),	// @[CRRV/src/core/Core.scala:23:30]
    .io_control_flush                 (_pipelineControl_io_flushAll),	// @[CRRV/src/core/Core.scala:28:31]
    .io_dataRam_out_ready             (io_data_out_ready),
    .io_dataRam_in_rdata              (io_data_in_rdata),
    .io_excMon_valid                  (_hazardResolver_io_memExcMonCheck_valid),	// @[CRRV/src/core/Core.scala:29:31]
    .io_control_stallReq              (_memoryStage_io_control_stallReq),
    .io_mem2wb_IF_instValid           (_memoryStage_io_mem2wb_IF_instValid),
    .io_mem2wb_IF_pc                  (_memoryStage_io_mem2wb_IF_pc),
    .io_mem2wb_ID_inst                (_memoryStage_io_mem2wb_ID_inst),
    .io_mem2wb_ID_lsuOp               (_memoryStage_io_mem2wb_ID_lsuOp),
    .io_mem2wb_ID_regWen              (_memoryStage_io_mem2wb_ID_regWen),
    .io_mem2wb_ID_regWaddr            (_memoryStage_io_mem2wb_ID_regWaddr),
    .io_mem2wb_ID_csrOp               (_memoryStage_io_mem2wb_ID_csrOp),
    .io_mem2wb_ID_csrAddr             (_memoryStage_io_mem2wb_ID_csrAddr),
    .io_mem2wb_ID_csrWriteData        (_memoryStage_io_mem2wb_ID_csrWriteData),
    .io_mem2wb_ID_exceptType          (_memoryStage_io_mem2wb_ID_exceptType),
    .io_mem2wb_EXE_exeResult          (_memoryStage_io_mem2wb_EXE_exeResult),
    .io_mem2wb_MEM_memAddr            (_memoryStage_io_mem2wb_MEM_memAddr),
    .io_mem2wb_MEM_excMonCommit_addr  (_memoryStage_io_mem2wb_MEM_excMonCommit_addr),
    .io_mem2wb_MEM_excMonCommit_set   (_memoryStage_io_mem2wb_MEM_excMonCommit_set),
    .io_mem2wb_MEM_excMonCommit_clear (_memoryStage_io_mem2wb_MEM_excMonCommit_clear),
    .io_mem2wb_MEM_amoValid           (_memoryStage_io_mem2wb_MEM_amoValid),
    .io_mem2wb_MEM_amoResult          (_memoryStage_io_mem2wb_MEM_amoResult),
    .io_dataRam_out_valid             (io_data_out_valid),
    .io_dataRam_out_bits_addr         (io_data_out_bits_addr),
    .io_dataRam_out_bits_writeEn      (io_data_out_bits_writeEn),
    .io_dataRam_out_bits_size         (io_data_out_bits_size),
    .io_dataRam_out_bits_wdata        (io_data_out_bits_wdata),
    .io_excMon_addr                   (_memoryStage_io_excMon_addr),
    .io_memCsrStall_op                (_memoryStage_io_memCsrStall_op),
    .io_memCsrStall_addr              (_memoryStage_io_memCsrStall_addr),
    .io_regForward_en                 (_memoryStage_io_regForward_en),
    .io_regForward_addr               (_memoryStage_io_regForward_addr),
    .io_regForward_data               (_memoryStage_io_regForward_data),
    .io_regForward_load               (_memoryStage_io_regForward_load)
  );
  PipelineStage_3 mem2wb (	// @[CRRV/src/core/Core.scala:25:30]
    .clock                          (clock),
    .reset                          (reset),
    .io_flush                       (_pipelineControl_io_flushAll),	// @[CRRV/src/core/Core.scala:28:31]
    .io_stallPrev                   (_pipelineControl_io_stallMEM),	// @[CRRV/src/core/Core.scala:28:31]
    .io_stallNext                   (_pipelineControl_io_stallWB),	// @[CRRV/src/core/Core.scala:28:31]
    .io_prev_IF_instValid           (_memoryStage_io_mem2wb_IF_instValid),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_IF_pc                  (_memoryStage_io_mem2wb_IF_pc),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_ID_inst                (_memoryStage_io_mem2wb_ID_inst),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_ID_lsuOp               (_memoryStage_io_mem2wb_ID_lsuOp),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_ID_regWen              (_memoryStage_io_mem2wb_ID_regWen),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_ID_regWaddr            (_memoryStage_io_mem2wb_ID_regWaddr),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_ID_csrOp               (_memoryStage_io_mem2wb_ID_csrOp),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_ID_csrAddr             (_memoryStage_io_mem2wb_ID_csrAddr),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_ID_csrWriteData        (_memoryStage_io_mem2wb_ID_csrWriteData),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_ID_exceptType          (_memoryStage_io_mem2wb_ID_exceptType),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_EXE_exeResult          (_memoryStage_io_mem2wb_EXE_exeResult),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_MEM_memAddr            (_memoryStage_io_mem2wb_MEM_memAddr),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_MEM_excMonCommit_addr  (_memoryStage_io_mem2wb_MEM_excMonCommit_addr),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_MEM_excMonCommit_set   (_memoryStage_io_mem2wb_MEM_excMonCommit_set),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_MEM_excMonCommit_clear (_memoryStage_io_mem2wb_MEM_excMonCommit_clear),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_MEM_amoValid           (_memoryStage_io_mem2wb_MEM_amoValid),	// @[CRRV/src/core/Core.scala:24:30]
    .io_prev_MEM_amoResult          (_memoryStage_io_mem2wb_MEM_amoResult),	// @[CRRV/src/core/Core.scala:24:30]
    .io_next_IF_instValid           (_mem2wb_io_next_IF_instValid),
    .io_next_IF_pc                  (_mem2wb_io_next_IF_pc),
    .io_next_ID_inst                (_mem2wb_io_next_ID_inst),
    .io_next_ID_lsuOp               (_mem2wb_io_next_ID_lsuOp),
    .io_next_ID_regWen              (_mem2wb_io_next_ID_regWen),
    .io_next_ID_regWaddr            (_mem2wb_io_next_ID_regWaddr),
    .io_next_ID_csrOp               (_mem2wb_io_next_ID_csrOp),
    .io_next_ID_csrAddr             (_mem2wb_io_next_ID_csrAddr),
    .io_next_ID_csrWriteData        (_mem2wb_io_next_ID_csrWriteData),
    .io_next_ID_exceptType          (_mem2wb_io_next_ID_exceptType),
    .io_next_EXE_exeResult          (_mem2wb_io_next_EXE_exeResult),
    .io_next_MEM_memAddr            (_mem2wb_io_next_MEM_memAddr),
    .io_next_MEM_excMonCommit_addr  (_mem2wb_io_next_MEM_excMonCommit_addr),
    .io_next_MEM_excMonCommit_set   (_mem2wb_io_next_MEM_excMonCommit_set),
    .io_next_MEM_excMonCommit_clear (_mem2wb_io_next_MEM_excMonCommit_clear),
    .io_next_MEM_amoValid           (_mem2wb_io_next_MEM_amoValid),
    .io_next_MEM_amoResult          (_mem2wb_io_next_MEM_amoResult)
  );
  WriteBackStage writeBackStage (	// @[CRRV/src/core/Core.scala:26:30]
    .io_mem2wb_IF_instValid           (_mem2wb_io_next_IF_instValid),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_IF_pc                  (_mem2wb_io_next_IF_pc),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_ID_inst                (_mem2wb_io_next_ID_inst),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_ID_lsuOp               (_mem2wb_io_next_ID_lsuOp),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_ID_regWen              (_mem2wb_io_next_ID_regWen),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_ID_regWaddr            (_mem2wb_io_next_ID_regWaddr),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_ID_csrOp               (_mem2wb_io_next_ID_csrOp),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_ID_csrAddr             (_mem2wb_io_next_ID_csrAddr),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_ID_csrWriteData        (_mem2wb_io_next_ID_csrWriteData),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_ID_exceptType          (_mem2wb_io_next_ID_exceptType),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_EXE_exeResult          (_mem2wb_io_next_EXE_exeResult),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_MEM_memAddr            (_mem2wb_io_next_MEM_memAddr),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_MEM_excMonCommit_addr  (_mem2wb_io_next_MEM_excMonCommit_addr),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_MEM_excMonCommit_set   (_mem2wb_io_next_MEM_excMonCommit_set),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_MEM_excMonCommit_clear (_mem2wb_io_next_MEM_excMonCommit_clear),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_MEM_amoValid           (_mem2wb_io_next_MEM_amoValid),	// @[CRRV/src/core/Core.scala:25:30]
    .io_mem2wb_MEM_amoResult          (_mem2wb_io_next_MEM_amoResult),	// @[CRRV/src/core/Core.scala:25:30]
    .io_read_rdata                    (io_data_in_rdata),
    .io_wb2csr_op                     (_writeBackStage_io_wb2csr_op),
    .io_wb2csr_addr                   (_writeBackStage_io_wb2csr_addr),
    .io_wb2csr_data                   (_writeBackStage_io_wb2csr_data),
    .io_wb2csr_exceptType             (_writeBackStage_io_wb2csr_exceptType),
    .io_wb2csr_exceptPc               (_writeBackStage_io_wb2csr_exceptPc),
    .io_excMonCommit_addr             (_writeBackStage_io_excMonCommit_addr),
    .io_excMonCommit_set              (_writeBackStage_io_excMonCommit_set),
    .io_excMonCommit_clear            (_writeBackStage_io_excMonCommit_clear),
    .io_regForward_en                 (_writeBackStage_io_regForward_en),
    .io_regForward_addr               (_writeBackStage_io_regForward_addr),
    .io_regForward_data               (_writeBackStage_io_regForward_data),
    .io_debug_valid                   (io_debug_valid),
    .io_debug_halt                    (io_debug_halt),
    .io_debug_deviceAccess            (io_debug_deviceAccess),
    .io_debug_deviceAddr              (io_debug_deviceAddr),
    .io_debug_pc                      (io_debug_pc),
    .io_debug_regWen                  (io_debug_regWen),
    .io_debug_regWaddr                (io_debug_regWaddr),
    .io_debug_regWdata                (io_debug_regWdata)
  );
  PipelineControl pipelineControl (	// @[CRRV/src/core/Core.scala:28:31]
    .io_ifStallReq           (_fetchStage_io_control_stallReq),	// @[CRRV/src/core/Core.scala:18:30]
    .io_exeStallReq          (_executeStage_io_control_stallReq),	// @[CRRV/src/core/Core.scala:22:30]
    .io_memStallReq          (_memoryStage_io_control_stallReq),	// @[CRRV/src/core/Core.scala:24:30]
    .io_idFlushReq           (_decodeStage_io_control_flushIF),	// @[CRRV/src/core/Core.scala:20:30]
    .io_idFlushTarget        (_decodeStage_io_control_flushPc),	// @[CRRV/src/core/Core.scala:20:30]
    .io_loadHazardFlage      (_hazardResolver_io_loadHazardFlag),	// @[CRRV/src/core/Core.scala:29:31]
    .io_csrHazardFlag        (_hazardResolver_io_csrHazardFlag),	// @[CRRV/src/core/Core.scala:29:31]
    .io_exceptType           (_writeBackStage_io_wb2csr_exceptType),	// @[CRRV/src/core/Core.scala:26:30]
    .io_csrInfo_mepc         (_csrFile_io_csrInfo_mepc),	// @[CRRV/src/core/Core.scala:30:31]
    .io_csrInfo_trapEnterVec (_csrFile_io_csrInfo_trapEnterVec),	// @[CRRV/src/core/Core.scala:30:31]
    .io_stallIF              (_pipelineControl_io_stallIF),
    .io_stallID              (_pipelineControl_io_stallID),
    .io_stallEXE             (_pipelineControl_io_stallEXE),
    .io_stallMEM             (_pipelineControl_io_stallMEM),
    .io_stallWB              (_pipelineControl_io_stallWB),
    .io_flushAll             (_pipelineControl_io_flushAll),
    .io_flushIF              (_pipelineControl_io_flushIF),
    .io_flushPc              (_pipelineControl_io_flushPc)
  );
  HazardResolver hazardResolver (	// @[CRRV/src/core/Core.scala:29:31]
    .io_regRead1_en          (_decodeStage_io_regRead1_en),	// @[CRRV/src/core/Core.scala:20:30]
    .io_regRead1_addr        (_decodeStage_io_regRead1_addr),	// @[CRRV/src/core/Core.scala:20:30]
    .io_regRead2_en          (_decodeStage_io_regRead2_en),	// @[CRRV/src/core/Core.scala:20:30]
    .io_regRead2_addr        (_decodeStage_io_regRead2_addr),	// @[CRRV/src/core/Core.scala:20:30]
    .io_csrRead_op           (_executeStage_io_csrRead_op),	// @[CRRV/src/core/Core.scala:22:30]
    .io_csrRead_addr         (_executeStage_io_csrRead_addr),	// @[CRRV/src/core/Core.scala:22:30]
    .io_regFile1_data        (_regFile_io_read1_data),	// @[CRRV/src/core/Core.scala:31:31]
    .io_regFile2_data        (_regFile_io_read2_data),	// @[CRRV/src/core/Core.scala:31:31]
    .io_regCsr_data          (_csrFile_io_read_data),	// @[CRRV/src/core/Core.scala:30:31]
    .io_exeForward_en        (_executeStage_io_regForward_en),	// @[CRRV/src/core/Core.scala:22:30]
    .io_exeForward_addr      (_executeStage_io_regForward_addr),	// @[CRRV/src/core/Core.scala:22:30]
    .io_exeForward_data      (_executeStage_io_regForward_data),	// @[CRRV/src/core/Core.scala:22:30]
    .io_exeForward_load      (_executeStage_io_regForward_load),	// @[CRRV/src/core/Core.scala:22:30]
    .io_memForward_en        (_memoryStage_io_regForward_en),	// @[CRRV/src/core/Core.scala:24:30]
    .io_memForward_addr      (_memoryStage_io_regForward_addr),	// @[CRRV/src/core/Core.scala:24:30]
    .io_memForward_data      (_memoryStage_io_regForward_data),	// @[CRRV/src/core/Core.scala:24:30]
    .io_memForward_load      (_memoryStage_io_regForward_load),	// @[CRRV/src/core/Core.scala:24:30]
    .io_wbForward_en         (_writeBackStage_io_regForward_en),	// @[CRRV/src/core/Core.scala:26:30]
    .io_wbForward_addr       (_writeBackStage_io_regForward_addr),	// @[CRRV/src/core/Core.scala:26:30]
    .io_wbForward_data       (_writeBackStage_io_regForward_data),	// @[CRRV/src/core/Core.scala:26:30]
    .io_wbExcMon_addr        (_writeBackStage_io_excMonCommit_addr),	// @[CRRV/src/core/Core.scala:26:30]
    .io_wbExcMon_set         (_writeBackStage_io_excMonCommit_set),	// @[CRRV/src/core/Core.scala:26:30]
    .io_wbExcMon_clear       (_writeBackStage_io_excMonCommit_clear),	// @[CRRV/src/core/Core.scala:26:30]
    .io_memExcMonCheck_addr  (_memoryStage_io_excMon_addr),	// @[CRRV/src/core/Core.scala:24:30]
    .io_excMonCheck_valid    (_excMon_io_check_valid),	// @[CRRV/src/core/Core.scala:32:31]
    .io_memCsrStall_op       (_memoryStage_io_memCsrStall_op),	// @[CRRV/src/core/Core.scala:24:30]
    .io_memCsrStall_addr     (_memoryStage_io_memCsrStall_addr),	// @[CRRV/src/core/Core.scala:24:30]
    .io_wbCsrStall_op        (_writeBackStage_io_wb2csr_op),	// @[CRRV/src/core/Core.scala:26:30]
    .io_wbCsrStall_addr      (_writeBackStage_io_wb2csr_addr),	// @[CRRV/src/core/Core.scala:26:30]
    .io_regRead1_data        (_hazardResolver_io_regRead1_data),
    .io_regRead2_data        (_hazardResolver_io_regRead2_data),
    .io_csrRead_data         (_hazardResolver_io_csrRead_data),
    .io_regFile1_en          (_hazardResolver_io_regFile1_en),
    .io_regFile1_addr        (_hazardResolver_io_regFile1_addr),
    .io_regFile2_en          (_hazardResolver_io_regFile2_en),
    .io_regFile2_addr        (_hazardResolver_io_regFile2_addr),
    .io_regCsr_addr          (_hazardResolver_io_regCsr_addr),
    .io_memExcMonCheck_valid (_hazardResolver_io_memExcMonCheck_valid),
    .io_excMonCheck_addr     (_hazardResolver_io_excMonCheck_addr),
    .io_loadHazardFlag       (_hazardResolver_io_loadHazardFlag),
    .io_csrHazardFlag        (_hazardResolver_io_csrHazardFlag)
  );
  CsrFile csrFile (	// @[CRRV/src/core/Core.scala:30:31]
    .clock                   (clock),
    .reset                   (reset),
    .io_read_addr            (_hazardResolver_io_regCsr_addr),	// @[CRRV/src/core/Core.scala:29:31]
    .io_write_op             (_writeBackStage_io_wb2csr_op),	// @[CRRV/src/core/Core.scala:26:30]
    .io_write_addr           (_writeBackStage_io_wb2csr_addr),	// @[CRRV/src/core/Core.scala:26:30]
    .io_write_data           (_writeBackStage_io_wb2csr_data),	// @[CRRV/src/core/Core.scala:26:30]
    .io_write_exceptType     (_writeBackStage_io_wb2csr_exceptType),	// @[CRRV/src/core/Core.scala:26:30]
    .io_write_exceptPc       (_writeBackStage_io_wb2csr_exceptPc),	// @[CRRV/src/core/Core.scala:26:30]
    .io_read_data            (_csrFile_io_read_data),
    .io_csrInfo_mepc         (_csrFile_io_csrInfo_mepc),
    .io_csrInfo_trapEnterVec (_csrFile_io_csrInfo_trapEnterVec)
  );
  RegFile regFile (	// @[CRRV/src/core/Core.scala:31:31]
    .clock         (clock),
    .io_read1_en   (_hazardResolver_io_regFile1_en),	// @[CRRV/src/core/Core.scala:29:31]
    .io_read1_addr (_hazardResolver_io_regFile1_addr),	// @[CRRV/src/core/Core.scala:29:31]
    .io_read2_en   (_hazardResolver_io_regFile2_en),	// @[CRRV/src/core/Core.scala:29:31]
    .io_read2_addr (_hazardResolver_io_regFile2_addr),	// @[CRRV/src/core/Core.scala:29:31]
    .io_write_en   (_writeBackStage_io_regForward_en),	// @[CRRV/src/core/Core.scala:26:30]
    .io_write_addr (_writeBackStage_io_regForward_addr),	// @[CRRV/src/core/Core.scala:26:30]
    .io_write_data (_writeBackStage_io_regForward_data),	// @[CRRV/src/core/Core.scala:26:30]
    .io_read1_data (_regFile_io_read1_data),
    .io_read2_data (_regFile_io_read2_data)
  );
  ExclusiveMonitor excMon (	// @[CRRV/src/core/Core.scala:32:31]
    .clock           (clock),
    .reset           (reset),
    .io_flush        (_pipelineControl_io_flushAll),	// @[CRRV/src/core/Core.scala:28:31]
    .io_check_addr   (_hazardResolver_io_excMonCheck_addr),	// @[CRRV/src/core/Core.scala:29:31]
    .io_update_addr  (_writeBackStage_io_excMonCommit_addr),	// @[CRRV/src/core/Core.scala:26:30]
    .io_update_set   (_writeBackStage_io_excMonCommit_set),	// @[CRRV/src/core/Core.scala:26:30]
    .io_update_clear (_writeBackStage_io_excMonCommit_clear),	// @[CRRV/src/core/Core.scala:26:30]
    .io_check_valid  (_excMon_io_check_valid)
  );
endmodule

module AXI4Arbiter(	// @[<stdin>:2665:10]
  input         clock,	// @[<stdin>:2666:11]
                reset,	// @[<stdin>:2667:11]
                io_axiInst_ar_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [31:0] io_axiInst_ar_bits_addr,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [2:0]  io_axiInst_ar_bits_size,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input         io_axiInst_aw_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [31:0] io_axiInst_aw_bits_addr,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [2:0]  io_axiInst_aw_bits_size,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input         io_axiInst_w_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [63:0] io_axiInst_w_bits_data,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [7:0]  io_axiInst_w_bits_strb,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input         io_axiInst_w_bits_last,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiData_ar_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [31:0] io_axiData_ar_bits_addr,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [2:0]  io_axiData_ar_bits_size,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input         io_axiData_aw_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [31:0] io_axiData_aw_bits_addr,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [2:0]  io_axiData_aw_bits_size,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input         io_axiData_w_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [63:0] io_axiData_w_bits_data,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [7:0]  io_axiData_w_bits_strb,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input         io_axiData_w_bits_last,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiOut_ar_ready,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiOut_r_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input  [63:0] io_axiOut_r_bits_data,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  input         io_axiOut_r_bits_last,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiOut_aw_ready,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiOut_w_ready,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiOut_b_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output        io_axiInst_ar_ready,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiInst_r_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output [63:0] io_axiInst_r_bits_data,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output        io_axiInst_r_bits_last,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiData_ar_ready,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiData_r_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output [63:0] io_axiData_r_bits_data,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output        io_axiData_r_bits_last,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiData_aw_ready,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiData_w_ready,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
                io_axiOut_ar_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output [31:0] io_axiOut_ar_bits_addr,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output [2:0]  io_axiOut_ar_bits_size,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output        io_axiOut_aw_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output [31:0] io_axiOut_aw_bits_addr,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output [2:0]  io_axiOut_aw_bits_size,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output        io_axiOut_w_valid,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output [63:0] io_axiOut_w_bits_data,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output [7:0]  io_axiOut_w_bits_strb,	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
  output        io_axiOut_w_bits_last	// @[CRRV/src/bus/AXI4Arbiter.scala:14:14]
);

  wire       _io_axiData_b_valid_T;	// @[CRRV/src/bus/AXI4Arbiter.scala:76:28]
  wire       _io_axiData_r_valid_output;	// @[CRRV/src/bus/AXI4Arbiter.scala:73:28]
  wire       _io_axiInst_r_valid_output;	// @[CRRV/src/bus/AXI4Arbiter.scala:65:28]
  reg  [2:0] casez_tmp;	// @[CRRV/src/bus/AXI4Arbiter.scala:31:17, :33:39]
  wire       axiInstReq = io_axiInst_ar_valid | io_axiInst_aw_valid;	// @[CRRV/src/bus/AXI4Arbiter.scala:23:34]
  wire       axiDataReq = io_axiData_ar_valid | io_axiData_aw_valid;	// @[CRRV/src/bus/AXI4Arbiter.scala:24:34]
  reg  [2:0] state;	// @[CRRV/src/bus/AXI4Arbiter.scala:30:46]
  wire       _selInst_T_3 = state == 3'h0;	// @[CRRV/src/bus/AXI4Arbiter.scala:30:46, :31:17]
  wire       axiInstEnd = _io_axiInst_r_valid_output & io_axiOut_r_bits_last;	// @[CRRV/src/bus/AXI4Arbiter.scala:25:50, :65:28]
  wire       axiDataEnd =
    _io_axiData_b_valid_T | _io_axiData_r_valid_output & io_axiOut_r_bits_last;	// @[CRRV/src/bus/AXI4Arbiter.scala:26:{51,84}, :73:28, :76:28]
  wire       _GEN = axiDataReq & ~axiDataEnd;	// @[CRRV/src/bus/AXI4Arbiter.scala:24:34, :26:51, :33:{23,26}]
  wire       _GEN_0 = axiInstReq & ~axiInstEnd;	// @[CRRV/src/bus/AXI4Arbiter.scala:23:34, :25:50, :34:{30,33}]
  wire [2:0] _GEN_1 = _GEN ? 3'h2 : {2'h0, _GEN_0};	// @[CRRV/src/bus/AXI4Arbiter.scala:33:{23,47}, :34:30, :47:{39,47}, :48:{46,54}, :49:28]
  always_comb begin	// @[CRRV/src/bus/AXI4Arbiter.scala:31:17, :33:39, :37:24, :42:24, :47:39]
    casez (state)	// @[CRRV/src/bus/AXI4Arbiter.scala:30:46, :31:17, :33:39, :37:24, :42:24, :47:39]
      3'b000:
        casez_tmp = _GEN ? 3'h2 : _GEN_0 ? 3'h1 : state;	// @[CRRV/src/bus/AXI4Arbiter.scala:30:46, :31:17, :33:{23,39,47}, :34:{30,46,54}, :37:24, :42:24, :47:39]
      3'b001:
        casez_tmp = axiInstEnd ? 3'h3 : state;	// @[CRRV/src/bus/AXI4Arbiter.scala:25:50, :30:46, :31:17, :33:39, :37:24, :38:15, :42:24, :47:39]
      3'b010:
        casez_tmp = axiDataEnd ? 3'h4 : state;	// @[CRRV/src/bus/AXI4Arbiter.scala:26:51, :30:46, :31:17, :33:39, :37:24, :42:24, :43:15, :47:39]
      3'b011:
        casez_tmp = _GEN_1;	// @[CRRV/src/bus/AXI4Arbiter.scala:31:17, :33:39, :37:24, :42:24, :47:{39,47}, :48:46]
      3'b100:
        casez_tmp = _GEN_1;	// @[CRRV/src/bus/AXI4Arbiter.scala:31:17, :33:39, :37:24, :42:24, :47:{39,47}, :48:46]
      3'b101:
        casez_tmp = state;	// @[CRRV/src/bus/AXI4Arbiter.scala:30:46, :31:17, :33:39, :37:24, :42:24, :47:39]
      3'b110:
        casez_tmp = state;	// @[CRRV/src/bus/AXI4Arbiter.scala:30:46, :31:17, :33:39, :37:24, :42:24, :47:39]
      default:
        casez_tmp = state;	// @[CRRV/src/bus/AXI4Arbiter.scala:30:46, :31:17, :33:39, :37:24, :42:24, :47:39]
    endcase	// @[CRRV/src/bus/AXI4Arbiter.scala:30:46, :31:17, :33:39, :37:24, :42:24, :47:39]
  end // always_comb
  wire       selData = state == 3'h2 | state == 3'h4 | axiDataReq & _selInst_T_3;	// @[CRRV/src/bus/AXI4Arbiter.scala:24:34, :30:46, :31:17, :33:47, :43:15, :58:{24,45,59}, :59:17]
  wire       selInst =
    (state == 3'h1 | state == 3'h3 | axiInstReq & _selInst_T_3) & ~selData;	// @[CRRV/src/bus/AXI4Arbiter.scala:23:34, :30:46, :31:17, :34:54, :38:15, :58:59, :60:{25,46,60}, :61:{17,40}, :62:5]
  assign _io_axiInst_r_valid_output = selInst & io_axiOut_r_valid;	// @[CRRV/src/bus/AXI4Arbiter.scala:61:40, :65:28]
  assign _io_axiData_r_valid_output = selData & io_axiOut_r_valid;	// @[CRRV/src/bus/AXI4Arbiter.scala:58:59, :73:28]
  assign _io_axiData_b_valid_T = selData & io_axiOut_b_valid;	// @[CRRV/src/bus/AXI4Arbiter.scala:58:59, :76:28]
  always @(posedge clock) begin	// @[<stdin>:2666:11]
    if (reset)	// @[<stdin>:2666:11]
      state <= 3'h0;	// @[CRRV/src/bus/AXI4Arbiter.scala:30:46]
    else	// @[<stdin>:2666:11]
      state <= casez_tmp;	// @[CRRV/src/bus/AXI4Arbiter.scala:30:46, :31:17, :33:39]
  end // always @(posedge)
  assign io_axiInst_ar_ready = selInst & io_axiOut_ar_ready;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:61:40, :64:28]
  assign io_axiInst_r_valid = _io_axiInst_r_valid_output;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:65:28]
  assign io_axiInst_r_bits_data = io_axiOut_r_bits_data;	// @[<stdin>:2665:10]
  assign io_axiInst_r_bits_last = io_axiOut_r_bits_last;	// @[<stdin>:2665:10]
  assign io_axiData_ar_ready = selData & io_axiOut_ar_ready;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :72:28]
  assign io_axiData_r_valid = _io_axiData_r_valid_output;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:73:28]
  assign io_axiData_r_bits_data = io_axiOut_r_bits_data;	// @[<stdin>:2665:10]
  assign io_axiData_r_bits_last = io_axiOut_r_bits_last;	// @[<stdin>:2665:10]
  assign io_axiData_aw_ready = selData & io_axiOut_aw_ready;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :74:28]
  assign io_axiData_w_ready = selData & io_axiOut_w_ready;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :75:28]
  assign io_axiOut_ar_valid = selData ? io_axiData_ar_valid : io_axiInst_ar_valid;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :80:22]
  assign io_axiOut_ar_bits_addr =
    selData ? io_axiData_ar_bits_addr : io_axiInst_ar_bits_addr;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :86:21]
  assign io_axiOut_ar_bits_size =
    selData ? io_axiData_ar_bits_size : io_axiInst_ar_bits_size;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :86:21]
  assign io_axiOut_aw_valid = selData ? io_axiData_aw_valid : io_axiInst_aw_valid;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :82:22]
  assign io_axiOut_aw_bits_addr =
    selData ? io_axiData_aw_bits_addr : io_axiInst_aw_bits_addr;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :87:21]
  assign io_axiOut_aw_bits_size =
    selData ? io_axiData_aw_bits_size : io_axiInst_aw_bits_size;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :87:21]
  assign io_axiOut_w_valid = selData ? io_axiData_w_valid : io_axiInst_w_valid;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :83:22]
  assign io_axiOut_w_bits_data =
    selData ? io_axiData_w_bits_data : io_axiInst_w_bits_data;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :88:21]
  assign io_axiOut_w_bits_strb =
    selData ? io_axiData_w_bits_strb : io_axiInst_w_bits_strb;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :88:21]
  assign io_axiOut_w_bits_last =
    selData ? io_axiData_w_bits_last : io_axiInst_w_bits_last;	// @[<stdin>:2665:10, CRRV/src/bus/AXI4Arbiter.scala:58:59, :88:21]
endmodule

module SimpleMux2(	// @[<stdin>:2781:10]
  input         clock,	// @[<stdin>:2782:11]
                io_sel2,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
                io_in_out_valid,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  input  [31:0] io_in_out_bits_addr,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  input         io_in_out_bits_writeEn,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  input  [1:0]  io_in_out_bits_size,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  input  [31:0] io_in_out_bits_wdata,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  input         io_out1_out_ready,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  input  [31:0] io_out1_in_rdata,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
                io_out2_in_rdata,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  output        io_in_out_ready,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  output [31:0] io_in_in_rdata,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  output        io_out1_out_valid,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  output [31:0] io_out1_out_bits_addr,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  output        io_out1_out_bits_writeEn,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  output [1:0]  io_out1_out_bits_size,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
  output [31:0] io_out1_out_bits_wdata,	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
                io_out2_out_bits_addr	// @[CRRV/src/bus/SimpleUtils.scala:10:14]
);

  reg readSel;	// @[CRRV/src/bus/SimpleUtils.scala:16:24]
  always @(posedge clock)	// @[<stdin>:2782:11]
    readSel <= io_sel2;	// @[CRRV/src/bus/SimpleUtils.scala:16:24]
  assign io_in_out_ready = io_sel2 | io_out1_out_ready;	// @[<stdin>:2781:10, CRRV/src/bus/SimpleUtils.scala:20:25]
  assign io_in_in_rdata = readSel ? io_out2_in_rdata : io_out1_in_rdata;	// @[<stdin>:2781:10, CRRV/src/bus/SimpleUtils.scala:16:24, :18:24]
  assign io_out1_out_valid = io_in_out_valid & ~io_sel2;	// @[<stdin>:2781:10, CRRV/src/bus/SimpleUtils.scala:22:{40,43}]
  assign io_out1_out_bits_addr = io_in_out_bits_addr;	// @[<stdin>:2781:10]
  assign io_out1_out_bits_writeEn = io_in_out_bits_writeEn;	// @[<stdin>:2781:10]
  assign io_out1_out_bits_size = io_in_out_bits_size;	// @[<stdin>:2781:10]
  assign io_out1_out_bits_wdata = io_in_out_bits_wdata;	// @[<stdin>:2781:10]
  assign io_out2_out_bits_addr = io_in_out_bits_addr;	// @[<stdin>:2781:10]
endmodule

module SimpleXbar(	// @[<stdin>:2801:10]
  input         clock,	// @[<stdin>:2802:11]
                io_simpleIn_out_valid,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  input  [31:0] io_simpleIn_out_bits_addr,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  input         io_simpleIn_out_bits_writeEn,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  input  [1:0]  io_simpleIn_out_bits_size,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  input  [31:0] io_simpleIn_out_bits_wdata,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  input         io_simpleOut_out_ready,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  input  [31:0] io_simpleOut_in_rdata,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
                io_simpleCLINT_in_rdata,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  output        io_simpleIn_out_ready,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  output [31:0] io_simpleIn_in_rdata,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  output        io_simpleOut_out_valid,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  output [31:0] io_simpleOut_out_bits_addr,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  output        io_simpleOut_out_bits_writeEn,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  output [1:0]  io_simpleOut_out_bits_size,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
  output [31:0] io_simpleOut_out_bits_wdata,	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
                io_simpleCLINT_out_bits_addr	// @[CRRV/src/bus/SimpleXbar.scala:9:14]
);

  SimpleMux2 mux2 (	// @[CRRV/src/bus/SimpleXbar.scala:16:23]
    .clock                    (clock),
    .io_sel2                  (io_simpleIn_out_bits_addr[31:16] == 16'h200),	// @[CRRV/src/bus/SimpleXbar.scala:15:{43,52}]
    .io_in_out_valid          (io_simpleIn_out_valid),
    .io_in_out_bits_addr      (io_simpleIn_out_bits_addr),
    .io_in_out_bits_writeEn   (io_simpleIn_out_bits_writeEn),
    .io_in_out_bits_size      (io_simpleIn_out_bits_size),
    .io_in_out_bits_wdata     (io_simpleIn_out_bits_wdata),
    .io_out1_out_ready        (io_simpleOut_out_ready),
    .io_out1_in_rdata         (io_simpleOut_in_rdata),
    .io_out2_in_rdata         (io_simpleCLINT_in_rdata),
    .io_in_out_ready          (io_simpleIn_out_ready),
    .io_in_in_rdata           (io_simpleIn_in_rdata),
    .io_out1_out_valid        (io_simpleOut_out_valid),
    .io_out1_out_bits_addr    (io_simpleOut_out_bits_addr),
    .io_out1_out_bits_writeEn (io_simpleOut_out_bits_writeEn),
    .io_out1_out_bits_size    (io_simpleOut_out_bits_size),
    .io_out1_out_bits_wdata   (io_simpleOut_out_bits_wdata),
    .io_out2_out_bits_addr    (io_simpleCLINT_out_bits_addr)
  );
endmodule

module CLINT(	// @[<stdin>:2822:10]
  input         clock,	// @[<stdin>:2823:11]
                reset,	// @[<stdin>:2824:11]
  input  [31:0] io_out_bits_addr,	// @[CRRV/src/bus/CLINT.scala:14:14]
  output [31:0] io_in_rdata	// @[CRRV/src/bus/CLINT.scala:14:14]
);

  reg [63:0] mtime;	// @[CRRV/src/bus/CLINT.scala:16:22]
  reg [15:0] tick;	// @[CRRV/src/bus/CLINT.scala:17:22]
  reg [31:0] outputData;	// @[CRRV/src/bus/CLINT.scala:24:27]
  always @(posedge clock) begin	// @[<stdin>:2823:11]
    if (reset) begin	// @[<stdin>:2823:11]
      mtime <= 64'h0;	// @[CRRV/src/bus/CLINT.scala:16:22]
      tick <= 16'h0;	// @[CRRV/src/bus/CLINT.scala:17:22]
      outputData <= 32'h0;	// @[CRRV/src/bus/CLINT.scala:24:27]
    end
    else begin	// @[<stdin>:2823:11]
      if (tick == 16'h10) begin	// @[CRRV/src/bus/CLINT.scala:17:22, :19:13]
        mtime <= mtime + 64'h1;	// @[CRRV/src/bus/CLINT.scala:16:22, :21:20]
        tick <= 16'h0;	// @[CRRV/src/bus/CLINT.scala:17:22]
      end
      else	// @[CRRV/src/bus/CLINT.scala:19:13]
        tick <= tick + 16'h1;	// @[CRRV/src/bus/CLINT.scala:17:22, :18:16]
      if (io_out_bits_addr[15:0] == 16'h0)	// @[CRRV/src/bus/CLINT.scala:17:22, :28:{24,32}]
        outputData <= mtime[31:0];	// @[CRRV/src/bus/CLINT.scala:16:22, :24:27, :28:50]
      else if (io_out_bits_addr[15:0] == 16'h4)	// @[CRRV/src/bus/CLINT.scala:28:24, :29:32]
        outputData <= mtime[63:32];	// @[CRRV/src/bus/CLINT.scala:16:22, :24:27, :29:50]
      else	// @[CRRV/src/bus/CLINT.scala:29:32]
        outputData <= 32'h0;	// @[CRRV/src/bus/CLINT.scala:24:27]
    end
  end // always @(posedge)
  assign io_in_rdata = outputData;	// @[<stdin>:2822:10, CRRV/src/bus/CLINT.scala:24:27]
endmodule

module Simple2AXI4(	// @[<stdin>:2854:10, :2975:10]
  input         clock,	// @[<stdin>:2855:11, :2976:11]
                reset,	// @[<stdin>:2856:11, :2977:11]
                io_simple_out_valid,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  input  [31:0] io_simple_out_bits_addr,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  input         io_simple_out_bits_writeEn,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  input  [1:0]  io_simple_out_bits_size,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  input  [31:0] io_simple_out_bits_wdata,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  input         io_axi_ar_ready,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
                io_axi_r_valid,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  input  [63:0] io_axi_r_bits_data,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  input         io_axi_r_bits_last,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
                io_axi_aw_ready,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
                io_axi_w_ready,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output        io_simple_out_ready,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output [31:0] io_simple_in_rdata,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output        io_axi_ar_valid,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output [31:0] io_axi_ar_bits_addr,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output [2:0]  io_axi_ar_bits_size,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output        io_axi_aw_valid,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output [31:0] io_axi_aw_bits_addr,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output [2:0]  io_axi_aw_bits_size,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output        io_axi_w_valid,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output [63:0] io_axi_w_bits_data,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output [7:0]  io_axi_w_bits_strb,	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
  output        io_axi_w_bits_last	// @[CRRV/src/bus/Simple2AXI4.scala:14:14]
);

  reg  [2:0]  casez_tmp;	// @[CRRV/src/bus/Simple2AXI4.scala:33:17, :35:33]
  reg  [14:0] casez_tmp_0;	// @[CRRV/src/bus/Simple2AXI4.scala:73:39]
  wire        _simple_addr_T_1 = io_simple_out_bits_addr[31:28] != 4'h8;	// @[CRRV/src/bus/Simple2AXI4.scala:20:{28,37}]
  wire [31:0] _simple_addr_T_3 = {4'hA, io_simple_out_bits_addr[27:0]};	// @[CRRV/src/bus/Simple2AXI4.scala:22:{8,45}]
  reg  [2:0]  state;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30]
  reg  [63:0] rdata;	// @[CRRV/src/bus/Simple2AXI4.scala:30:18]
  reg  [31:0] addr;	// @[CRRV/src/bus/Simple2AXI4.scala:31:18]
  wire        _GEN = io_axi_r_valid & io_axi_r_bits_last;	// @[CRRV/src/bus/Simple2AXI4.scala:46:27]
  always_comb begin	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33, :41:29, :46:50, :52:48, :59:28, :64:13]
    casez (state)	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33, :41:29, :46:50, :52:48, :59:28, :64:13]
      3'b000:
        casez_tmp =
          io_simple_out_valid ? {1'h0, io_simple_out_bits_writeEn, 1'h1} : state;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33, :36:{15,21}, :41:29, :46:50, :52:48, :59:28, :64:13, :73:39]
      3'b001:
        casez_tmp = io_axi_ar_ready ? 3'h2 : state;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33, :41:29, :42:15, :46:50, :52:48, :59:28, :64:13]
      3'b010:
        casez_tmp = _GEN ? 3'h5 : state;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33, :41:29, :46:{27,50}, :48:15, :52:48, :59:28, :64:13]
      3'b011:
        casez_tmp =
          io_axi_aw_ready & ~io_axi_w_ready
            ? 3'h4
            : io_axi_aw_ready & io_axi_w_ready ? 3'h5 : state;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33, :41:29, :46:50, :48:15, :52:{28,31,48}, :53:15, :54:{34,53}, :55:15, :59:28, :64:13]
      3'b100:
        casez_tmp = io_axi_w_ready ? 3'h5 : state;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33, :41:29, :46:50, :48:15, :52:48, :59:28, :60:15, :64:13]
      3'b101:
        casez_tmp = 3'h0;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33, :41:29, :46:50, :52:48, :59:28, :64:13]
      3'b110:
        casez_tmp = state;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33, :41:29, :46:50, :52:48, :59:28, :64:13]
      default:
        casez_tmp = state;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33, :41:29, :46:50, :52:48, :59:28, :64:13]
    endcase	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33, :41:29, :46:50, :52:48, :59:28, :64:13]
  end // always_comb
  wire [14:0] _GEN_0 = {12'h0, addr[2:0]};	// @[CRRV/src/bus/Simple2AXI4.scala:31:18, :75:{30,37}]
  always_comb begin	// @[CRRV/src/bus/Simple2AXI4.scala:73:39]
    casez (io_simple_out_bits_size)	// @[CRRV/src/bus/Simple2AXI4.scala:73:39]
      2'b00:
        casez_tmp_0 = 15'h1 << _GEN_0;	// @[CRRV/src/bus/Simple2AXI4.scala:73:39, :75:30]
      2'b01:
        casez_tmp_0 = 15'h3 << _GEN_0;	// @[CRRV/src/bus/Simple2AXI4.scala:73:39, :75:30, :76:30]
      2'b10:
        casez_tmp_0 = 15'hF << _GEN_0;	// @[CRRV/src/bus/Simple2AXI4.scala:73:39, :75:30, :77:30]
      default:
        casez_tmp_0 = 15'h0;	// @[CRRV/src/bus/Simple2AXI4.scala:73:39]
    endcase	// @[CRRV/src/bus/Simple2AXI4.scala:73:39]
  end // always_comb
  wire [2:0]  _GEN_1 = {1'h0, io_simple_out_bits_size};	// @[CRRV/src/bus/Simple2AXI4.scala:73:39, :84:23]
  wire        _io_axi_w_bits_last_T = state == 3'h3;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :36:21, :86:32]
  wire        _io_axi_w_bits_last_T_1 = state == 3'h4;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :53:15, :89:52]
  wire        _GEN_2 = state == 3'h0;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17]
  always @(posedge clock) begin	// @[<stdin>:2855:11, :2976:11]
    if (reset)	// @[<stdin>:2855:11, :2976:11]
      state <= 3'h0;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30]
    else	// @[<stdin>:2855:11, :2976:11]
      state <= casez_tmp;	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :33:17, :35:33]
    if (_GEN_2 | state == 3'h1 | ~(state == 3'h2 & _GEN)) begin	// @[CRRV/src/bus/Simple2AXI4.scala:28:30, :30:18, :33:17, :36:21, :42:15, :46:{27,50}, :47:15]
    end
    else	// @[CRRV/src/bus/Simple2AXI4.scala:30:18, :33:17]
      rdata <= io_axi_r_bits_data;	// @[CRRV/src/bus/Simple2AXI4.scala:30:18]
    if (_GEN_2 & io_simple_out_valid) begin	// @[CRRV/src/bus/Simple2AXI4.scala:31:18, :33:17, :35:33, :37:15]
      if (_simple_addr_T_1)	// @[CRRV/src/bus/Simple2AXI4.scala:20:37]
        addr <= io_simple_out_bits_addr;	// @[CRRV/src/bus/Simple2AXI4.scala:31:18]
      else	// @[CRRV/src/bus/Simple2AXI4.scala:20:37]
        addr <= _simple_addr_T_3;	// @[CRRV/src/bus/Simple2AXI4.scala:22:8, :31:18]
    end
  end // always @(posedge)
  assign io_simple_out_ready =
    state == 3'h5
    & addr == (_simple_addr_T_1 ? io_simple_out_bits_addr : _simple_addr_T_3);	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:19:24, :20:37, :22:8, :28:30, :31:18, :48:15, :68:{33,43,52}]
  assign io_simple_in_rdata = addr[2] ? rdata[63:32] : rdata[31:0];	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:30:18, :31:18, :69:{29,34,44,59}]
  assign io_axi_ar_valid = state == 3'h1;	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:28:30, :36:21, :82:32]
  assign io_axi_ar_bits_addr = addr;	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:31:18]
  assign io_axi_ar_bits_size = _GEN_1;	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:84:23]
  assign io_axi_aw_valid = _io_axi_w_bits_last_T;	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:86:32]
  assign io_axi_aw_bits_addr = addr;	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:31:18]
  assign io_axi_aw_bits_size = _GEN_1;	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:84:23]
  assign io_axi_w_valid = _io_axi_w_bits_last_T | _io_axi_w_bits_last_T_1;	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:86:32, :89:{43,52}]
  assign io_axi_w_bits_data = {2{io_simple_out_bits_wdata}};	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:71:21]
  assign io_axi_w_bits_strb = casez_tmp_0[7:0];	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:73:39, :92:23]
  assign io_axi_w_bits_last = _io_axi_w_bits_last_T | _io_axi_w_bits_last_T_1;	// @[<stdin>:2854:10, :2975:10, CRRV/src/bus/Simple2AXI4.scala:86:32, :89:52, :91:43]
endmodule

// external module Debug

module CRRVTop(	// @[<stdin>:3102:10]
  input         clock,	// @[<stdin>:3103:11]
                reset,	// @[<stdin>:3104:11]
                io_interrupt,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_master_awready,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_master_wready,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_master_bvalid,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [1:0]  io_master_bresp,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [3:0]  io_master_bid,	// @[CRRV/src/CRRVTop.scala:11:14]
  input         io_master_arready,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_master_rvalid,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [1:0]  io_master_rresp,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [63:0] io_master_rdata,	// @[CRRV/src/CRRVTop.scala:11:14]
  input         io_master_rlast,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [3:0]  io_master_rid,	// @[CRRV/src/CRRVTop.scala:11:14]
  input         io_slave_awvalid,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [31:0] io_slave_awaddr,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [3:0]  io_slave_awid,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [7:0]  io_slave_awlen,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [2:0]  io_slave_awsize,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [1:0]  io_slave_awburst,	// @[CRRV/src/CRRVTop.scala:11:14]
  input         io_slave_wvalid,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [63:0] io_slave_wdata,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [7:0]  io_slave_wstrb,	// @[CRRV/src/CRRVTop.scala:11:14]
  input         io_slave_wlast,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_slave_bready,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_slave_arvalid,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [31:0] io_slave_araddr,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [3:0]  io_slave_arid,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [7:0]  io_slave_arlen,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [2:0]  io_slave_arsize,	// @[CRRV/src/CRRVTop.scala:11:14]
  input  [1:0]  io_slave_arburst,	// @[CRRV/src/CRRVTop.scala:11:14]
  input         io_slave_rready,	// @[CRRV/src/CRRVTop.scala:11:14]
  output        io_master_awvalid,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [31:0] io_master_awaddr,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [3:0]  io_master_awid,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [7:0]  io_master_awlen,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [2:0]  io_master_awsize,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [1:0]  io_master_awburst,	// @[CRRV/src/CRRVTop.scala:11:14]
  output        io_master_wvalid,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [63:0] io_master_wdata,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [7:0]  io_master_wstrb,	// @[CRRV/src/CRRVTop.scala:11:14]
  output        io_master_wlast,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_master_bready,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_master_arvalid,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [31:0] io_master_araddr,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [3:0]  io_master_arid,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [7:0]  io_master_arlen,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [2:0]  io_master_arsize,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [1:0]  io_master_arburst,	// @[CRRV/src/CRRVTop.scala:11:14]
  output        io_master_rready,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_slave_awready,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_slave_wready,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_slave_bvalid,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [1:0]  io_slave_bresp,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [3:0]  io_slave_bid,	// @[CRRV/src/CRRVTop.scala:11:14]
  output        io_slave_arready,	// @[CRRV/src/CRRVTop.scala:11:14]
                io_slave_rvalid,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [1:0]  io_slave_rresp,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [63:0] io_slave_rdata,	// @[CRRV/src/CRRVTop.scala:11:14]
  output        io_slave_rlast,	// @[CRRV/src/CRRVTop.scala:11:14]
  output [3:0]  io_slave_rid	// @[CRRV/src/CRRVTop.scala:11:14]
);

  wire        _simple2axiData_io_simple_out_ready;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire [31:0] _simple2axiData_io_simple_in_rdata;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire        _simple2axiData_io_axi_ar_valid;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire [31:0] _simple2axiData_io_axi_ar_bits_addr;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire [2:0]  _simple2axiData_io_axi_ar_bits_size;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire        _simple2axiData_io_axi_aw_valid;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire [31:0] _simple2axiData_io_axi_aw_bits_addr;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire [2:0]  _simple2axiData_io_axi_aw_bits_size;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire        _simple2axiData_io_axi_w_valid;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire [63:0] _simple2axiData_io_axi_w_bits_data;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire [7:0]  _simple2axiData_io_axi_w_bits_strb;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire        _simple2axiData_io_axi_w_bits_last;	// @[CRRV/src/CRRVTop.scala:19:30]
  wire        _simple2axiInst_io_simple_out_ready;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire [31:0] _simple2axiInst_io_simple_in_rdata;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire        _simple2axiInst_io_axi_ar_valid;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire [31:0] _simple2axiInst_io_axi_ar_bits_addr;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire [2:0]  _simple2axiInst_io_axi_ar_bits_size;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire        _simple2axiInst_io_axi_aw_valid;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire [31:0] _simple2axiInst_io_axi_aw_bits_addr;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire [2:0]  _simple2axiInst_io_axi_aw_bits_size;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire        _simple2axiInst_io_axi_w_valid;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire [63:0] _simple2axiInst_io_axi_w_bits_data;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire [7:0]  _simple2axiInst_io_axi_w_bits_strb;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire        _simple2axiInst_io_axi_w_bits_last;	// @[CRRV/src/CRRVTop.scala:18:30]
  wire [31:0] _clint_io_in_rdata;	// @[CRRV/src/CRRVTop.scala:17:30]
  wire        _xbar_io_simpleIn_out_ready;	// @[CRRV/src/CRRVTop.scala:16:30]
  wire [31:0] _xbar_io_simpleIn_in_rdata;	// @[CRRV/src/CRRVTop.scala:16:30]
  wire        _xbar_io_simpleOut_out_valid;	// @[CRRV/src/CRRVTop.scala:16:30]
  wire [31:0] _xbar_io_simpleOut_out_bits_addr;	// @[CRRV/src/CRRVTop.scala:16:30]
  wire        _xbar_io_simpleOut_out_bits_writeEn;	// @[CRRV/src/CRRVTop.scala:16:30]
  wire [1:0]  _xbar_io_simpleOut_out_bits_size;	// @[CRRV/src/CRRVTop.scala:16:30]
  wire [31:0] _xbar_io_simpleOut_out_bits_wdata;	// @[CRRV/src/CRRVTop.scala:16:30]
  wire [31:0] _xbar_io_simpleCLINT_out_bits_addr;	// @[CRRV/src/CRRVTop.scala:16:30]
  wire        _axiArbiter_io_axiInst_ar_ready;	// @[CRRV/src/CRRVTop.scala:15:30]
  wire        _axiArbiter_io_axiInst_r_valid;	// @[CRRV/src/CRRVTop.scala:15:30]
  wire [63:0] _axiArbiter_io_axiInst_r_bits_data;	// @[CRRV/src/CRRVTop.scala:15:30]
  wire        _axiArbiter_io_axiInst_r_bits_last;	// @[CRRV/src/CRRVTop.scala:15:30]
  wire        _axiArbiter_io_axiData_ar_ready;	// @[CRRV/src/CRRVTop.scala:15:30]
  wire        _axiArbiter_io_axiData_r_valid;	// @[CRRV/src/CRRVTop.scala:15:30]
  wire [63:0] _axiArbiter_io_axiData_r_bits_data;	// @[CRRV/src/CRRVTop.scala:15:30]
  wire        _axiArbiter_io_axiData_r_bits_last;	// @[CRRV/src/CRRVTop.scala:15:30]
  wire        _axiArbiter_io_axiData_aw_ready;	// @[CRRV/src/CRRVTop.scala:15:30]
  wire        _axiArbiter_io_axiData_w_ready;	// @[CRRV/src/CRRVTop.scala:15:30]
  wire [31:0] _core_io_inst_out_bits_addr;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire        _core_io_data_out_valid;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire [31:0] _core_io_data_out_bits_addr;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire        _core_io_data_out_bits_writeEn;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire [1:0]  _core_io_data_out_bits_size;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire [31:0] _core_io_data_out_bits_wdata;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire        _core_io_debug_valid;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire        _core_io_debug_halt;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire        _core_io_debug_deviceAccess;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire [31:0] _core_io_debug_deviceAddr;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire [31:0] _core_io_debug_pc;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire        _core_io_debug_regWen;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire [4:0]  _core_io_debug_regWaddr;	// @[CRRV/src/CRRVTop.scala:13:20]
  wire [31:0] _core_io_debug_regWdata;	// @[CRRV/src/CRRVTop.scala:13:20]
  Core core (	// @[CRRV/src/CRRVTop.scala:13:20]
    .clock                    (clock),
    .reset                    (reset),
    .io_inst_out_ready        (_simple2axiInst_io_simple_out_ready),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_inst_in_rdata         (_simple2axiInst_io_simple_in_rdata),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_data_out_ready        (_xbar_io_simpleIn_out_ready),	// @[CRRV/src/CRRVTop.scala:16:30]
    .io_data_in_rdata         (_xbar_io_simpleIn_in_rdata),	// @[CRRV/src/CRRVTop.scala:16:30]
    .io_inst_out_bits_addr    (_core_io_inst_out_bits_addr),
    .io_data_out_valid        (_core_io_data_out_valid),
    .io_data_out_bits_addr    (_core_io_data_out_bits_addr),
    .io_data_out_bits_writeEn (_core_io_data_out_bits_writeEn),
    .io_data_out_bits_size    (_core_io_data_out_bits_size),
    .io_data_out_bits_wdata   (_core_io_data_out_bits_wdata),
    .io_debug_valid           (_core_io_debug_valid),
    .io_debug_halt            (_core_io_debug_halt),
    .io_debug_deviceAccess    (_core_io_debug_deviceAccess),
    .io_debug_deviceAddr      (_core_io_debug_deviceAddr),
    .io_debug_pc              (_core_io_debug_pc),
    .io_debug_regWen          (_core_io_debug_regWen),
    .io_debug_regWaddr        (_core_io_debug_regWaddr),
    .io_debug_regWdata        (_core_io_debug_regWdata)
  );
  AXI4Arbiter axiArbiter (	// @[CRRV/src/CRRVTop.scala:15:30]
    .clock                   (clock),
    .reset                   (reset),
    .io_axiInst_ar_valid     (_simple2axiInst_io_axi_ar_valid),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_axiInst_ar_bits_addr (_simple2axiInst_io_axi_ar_bits_addr),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_axiInst_ar_bits_size (_simple2axiInst_io_axi_ar_bits_size),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_axiInst_aw_valid     (_simple2axiInst_io_axi_aw_valid),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_axiInst_aw_bits_addr (_simple2axiInst_io_axi_aw_bits_addr),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_axiInst_aw_bits_size (_simple2axiInst_io_axi_aw_bits_size),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_axiInst_w_valid      (_simple2axiInst_io_axi_w_valid),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_axiInst_w_bits_data  (_simple2axiInst_io_axi_w_bits_data),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_axiInst_w_bits_strb  (_simple2axiInst_io_axi_w_bits_strb),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_axiInst_w_bits_last  (_simple2axiInst_io_axi_w_bits_last),	// @[CRRV/src/CRRVTop.scala:18:30]
    .io_axiData_ar_valid     (_simple2axiData_io_axi_ar_valid),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_axiData_ar_bits_addr (_simple2axiData_io_axi_ar_bits_addr),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_axiData_ar_bits_size (_simple2axiData_io_axi_ar_bits_size),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_axiData_aw_valid     (_simple2axiData_io_axi_aw_valid),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_axiData_aw_bits_addr (_simple2axiData_io_axi_aw_bits_addr),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_axiData_aw_bits_size (_simple2axiData_io_axi_aw_bits_size),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_axiData_w_valid      (_simple2axiData_io_axi_w_valid),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_axiData_w_bits_data  (_simple2axiData_io_axi_w_bits_data),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_axiData_w_bits_strb  (_simple2axiData_io_axi_w_bits_strb),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_axiData_w_bits_last  (_simple2axiData_io_axi_w_bits_last),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_axiOut_ar_ready      (io_master_arready),
    .io_axiOut_r_valid       (io_master_rvalid),
    .io_axiOut_r_bits_data   (io_master_rdata),
    .io_axiOut_r_bits_last   (io_master_rlast),
    .io_axiOut_aw_ready      (io_master_awready),
    .io_axiOut_w_ready       (io_master_wready),
    .io_axiOut_b_valid       (io_master_bvalid),
    .io_axiInst_ar_ready     (_axiArbiter_io_axiInst_ar_ready),
    .io_axiInst_r_valid      (_axiArbiter_io_axiInst_r_valid),
    .io_axiInst_r_bits_data  (_axiArbiter_io_axiInst_r_bits_data),
    .io_axiInst_r_bits_last  (_axiArbiter_io_axiInst_r_bits_last),
    .io_axiData_ar_ready     (_axiArbiter_io_axiData_ar_ready),
    .io_axiData_r_valid      (_axiArbiter_io_axiData_r_valid),
    .io_axiData_r_bits_data  (_axiArbiter_io_axiData_r_bits_data),
    .io_axiData_r_bits_last  (_axiArbiter_io_axiData_r_bits_last),
    .io_axiData_aw_ready     (_axiArbiter_io_axiData_aw_ready),
    .io_axiData_w_ready      (_axiArbiter_io_axiData_w_ready),
    .io_axiOut_ar_valid      (io_master_arvalid),
    .io_axiOut_ar_bits_addr  (io_master_araddr),
    .io_axiOut_ar_bits_size  (io_master_arsize),
    .io_axiOut_aw_valid      (io_master_awvalid),
    .io_axiOut_aw_bits_addr  (io_master_awaddr),
    .io_axiOut_aw_bits_size  (io_master_awsize),
    .io_axiOut_w_valid       (io_master_wvalid),
    .io_axiOut_w_bits_data   (io_master_wdata),
    .io_axiOut_w_bits_strb   (io_master_wstrb),
    .io_axiOut_w_bits_last   (io_master_wlast)
  );
  SimpleXbar xbar (	// @[CRRV/src/CRRVTop.scala:16:30]
    .clock                         (clock),
    .io_simpleIn_out_valid         (_core_io_data_out_valid),	// @[CRRV/src/CRRVTop.scala:13:20]
    .io_simpleIn_out_bits_addr     (_core_io_data_out_bits_addr),	// @[CRRV/src/CRRVTop.scala:13:20]
    .io_simpleIn_out_bits_writeEn  (_core_io_data_out_bits_writeEn),	// @[CRRV/src/CRRVTop.scala:13:20]
    .io_simpleIn_out_bits_size     (_core_io_data_out_bits_size),	// @[CRRV/src/CRRVTop.scala:13:20]
    .io_simpleIn_out_bits_wdata    (_core_io_data_out_bits_wdata),	// @[CRRV/src/CRRVTop.scala:13:20]
    .io_simpleOut_out_ready        (_simple2axiData_io_simple_out_ready),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_simpleOut_in_rdata         (_simple2axiData_io_simple_in_rdata),	// @[CRRV/src/CRRVTop.scala:19:30]
    .io_simpleCLINT_in_rdata       (_clint_io_in_rdata),	// @[CRRV/src/CRRVTop.scala:17:30]
    .io_simpleIn_out_ready         (_xbar_io_simpleIn_out_ready),
    .io_simpleIn_in_rdata          (_xbar_io_simpleIn_in_rdata),
    .io_simpleOut_out_valid        (_xbar_io_simpleOut_out_valid),
    .io_simpleOut_out_bits_addr    (_xbar_io_simpleOut_out_bits_addr),
    .io_simpleOut_out_bits_writeEn (_xbar_io_simpleOut_out_bits_writeEn),
    .io_simpleOut_out_bits_size    (_xbar_io_simpleOut_out_bits_size),
    .io_simpleOut_out_bits_wdata   (_xbar_io_simpleOut_out_bits_wdata),
    .io_simpleCLINT_out_bits_addr  (_xbar_io_simpleCLINT_out_bits_addr)
  );
  CLINT clint (	// @[CRRV/src/CRRVTop.scala:17:30]
    .clock            (clock),
    .reset            (reset),
    .io_out_bits_addr (_xbar_io_simpleCLINT_out_bits_addr),	// @[CRRV/src/CRRVTop.scala:16:30]
    .io_in_rdata      (_clint_io_in_rdata)
  );
  Simple2AXI4 simple2axiInst (	// @[CRRV/src/CRRVTop.scala:18:30]
    .clock                      (clock),
    .reset                      (reset),
    .io_simple_out_valid        (1'h1),	// @[CRRV/src/CRRVTop.scala:13:20, :15:30, :16:30, :17:30, :18:30, :19:30]
    .io_simple_out_bits_addr    (_core_io_inst_out_bits_addr),	// @[CRRV/src/CRRVTop.scala:13:20]
    .io_simple_out_bits_writeEn (1'h0),	// @[CRRV/src/CRRVTop.scala:13:20, :15:30, :18:30]
    .io_simple_out_bits_size    (2'h2),	// @[CRRV/src/CRRVTop.scala:13:20, :18:30]
    .io_simple_out_bits_wdata   (32'h0),	// @[CRRV/src/CRRVTop.scala:13:20, :18:30]
    .io_axi_ar_ready            (_axiArbiter_io_axiInst_ar_ready),	// @[CRRV/src/CRRVTop.scala:15:30]
    .io_axi_r_valid             (_axiArbiter_io_axiInst_r_valid),	// @[CRRV/src/CRRVTop.scala:15:30]
    .io_axi_r_bits_data         (_axiArbiter_io_axiInst_r_bits_data),	// @[CRRV/src/CRRVTop.scala:15:30]
    .io_axi_r_bits_last         (_axiArbiter_io_axiInst_r_bits_last),	// @[CRRV/src/CRRVTop.scala:15:30]
    .io_axi_aw_ready            (1'h0),	// @[CRRV/src/CRRVTop.scala:13:20, :15:30, :18:30]
    .io_axi_w_ready             (1'h0),	// @[CRRV/src/CRRVTop.scala:13:20, :15:30, :18:30]
    .io_simple_out_ready        (_simple2axiInst_io_simple_out_ready),
    .io_simple_in_rdata         (_simple2axiInst_io_simple_in_rdata),
    .io_axi_ar_valid            (_simple2axiInst_io_axi_ar_valid),
    .io_axi_ar_bits_addr        (_simple2axiInst_io_axi_ar_bits_addr),
    .io_axi_ar_bits_size        (_simple2axiInst_io_axi_ar_bits_size),
    .io_axi_aw_valid            (_simple2axiInst_io_axi_aw_valid),
    .io_axi_aw_bits_addr        (_simple2axiInst_io_axi_aw_bits_addr),
    .io_axi_aw_bits_size        (_simple2axiInst_io_axi_aw_bits_size),
    .io_axi_w_valid             (_simple2axiInst_io_axi_w_valid),
    .io_axi_w_bits_data         (_simple2axiInst_io_axi_w_bits_data),
    .io_axi_w_bits_strb         (_simple2axiInst_io_axi_w_bits_strb),
    .io_axi_w_bits_last         (_simple2axiInst_io_axi_w_bits_last)
  );
  Simple2AXI4 simple2axiData (	// @[CRRV/src/CRRVTop.scala:19:30]
    .clock                      (clock),
    .reset                      (reset),
    .io_simple_out_valid        (_xbar_io_simpleOut_out_valid),	// @[CRRV/src/CRRVTop.scala:16:30]
    .io_simple_out_bits_addr    (_xbar_io_simpleOut_out_bits_addr),	// @[CRRV/src/CRRVTop.scala:16:30]
    .io_simple_out_bits_writeEn (_xbar_io_simpleOut_out_bits_writeEn),	// @[CRRV/src/CRRVTop.scala:16:30]
    .io_simple_out_bits_size    (_xbar_io_simpleOut_out_bits_size),	// @[CRRV/src/CRRVTop.scala:16:30]
    .io_simple_out_bits_wdata   (_xbar_io_simpleOut_out_bits_wdata),	// @[CRRV/src/CRRVTop.scala:16:30]
    .io_axi_ar_ready            (_axiArbiter_io_axiData_ar_ready),	// @[CRRV/src/CRRVTop.scala:15:30]
    .io_axi_r_valid             (_axiArbiter_io_axiData_r_valid),	// @[CRRV/src/CRRVTop.scala:15:30]
    .io_axi_r_bits_data         (_axiArbiter_io_axiData_r_bits_data),	// @[CRRV/src/CRRVTop.scala:15:30]
    .io_axi_r_bits_last         (_axiArbiter_io_axiData_r_bits_last),	// @[CRRV/src/CRRVTop.scala:15:30]
    .io_axi_aw_ready            (_axiArbiter_io_axiData_aw_ready),	// @[CRRV/src/CRRVTop.scala:15:30]
    .io_axi_w_ready             (_axiArbiter_io_axiData_w_ready),	// @[CRRV/src/CRRVTop.scala:15:30]
    .io_simple_out_ready        (_simple2axiData_io_simple_out_ready),
    .io_simple_in_rdata         (_simple2axiData_io_simple_in_rdata),
    .io_axi_ar_valid            (_simple2axiData_io_axi_ar_valid),
    .io_axi_ar_bits_addr        (_simple2axiData_io_axi_ar_bits_addr),
    .io_axi_ar_bits_size        (_simple2axiData_io_axi_ar_bits_size),
    .io_axi_aw_valid            (_simple2axiData_io_axi_aw_valid),
    .io_axi_aw_bits_addr        (_simple2axiData_io_axi_aw_bits_addr),
    .io_axi_aw_bits_size        (_simple2axiData_io_axi_aw_bits_size),
    .io_axi_w_valid             (_simple2axiData_io_axi_w_valid),
    .io_axi_w_bits_data         (_simple2axiData_io_axi_w_bits_data),
    .io_axi_w_bits_strb         (_simple2axiData_io_axi_w_bits_strb),
    .io_axi_w_bits_last         (_simple2axiData_io_axi_w_bits_last)
  );
  Debug debug (	// @[CRRV/src/CRRVTop.scala:20:30]
    .clock              (clock),
    .reset              (reset),
    .debug_valid        (_core_io_debug_valid),	// @[CRRV/src/CRRVTop.scala:13:20]
    .debug_halt         (_core_io_debug_halt),	// @[CRRV/src/CRRVTop.scala:13:20]
    .debug_deviceAccess (_core_io_debug_deviceAccess),	// @[CRRV/src/CRRVTop.scala:13:20]
    .debug_deviceAddr   (_core_io_debug_deviceAddr),	// @[CRRV/src/CRRVTop.scala:13:20]
    .debug_pc           (_core_io_debug_pc),	// @[CRRV/src/CRRVTop.scala:13:20]
    .debug_regWen       (_core_io_debug_regWen),	// @[CRRV/src/CRRVTop.scala:13:20]
    .debug_regWaddr     (_core_io_debug_regWaddr),	// @[CRRV/src/CRRVTop.scala:13:20]
    .debug_regWdata     (_core_io_debug_regWdata)	// @[CRRV/src/CRRVTop.scala:13:20]
  );
  assign io_master_awid = 4'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:15:30, :18:30, :19:30]
  assign io_master_awlen = 8'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:15:30, :18:30, :19:30]
  assign io_master_awburst = 2'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:15:30, :18:30, :19:30]
  assign io_master_bready = 1'h1;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:13:20, :15:30, :16:30, :17:30, :18:30, :19:30]
  assign io_master_arid = 4'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:15:30, :18:30, :19:30]
  assign io_master_arlen = 8'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:15:30, :18:30, :19:30]
  assign io_master_arburst = 2'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:15:30, :18:30, :19:30]
  assign io_master_rready = 1'h1;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:13:20, :15:30, :16:30, :17:30, :18:30, :19:30]
  assign io_slave_awready = 1'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:13:20, :15:30, :18:30]
  assign io_slave_wready = 1'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:13:20, :15:30, :18:30]
  assign io_slave_bvalid = 1'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:13:20, :15:30, :18:30]
  assign io_slave_bresp = 2'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:15:30, :18:30, :19:30]
  assign io_slave_bid = 4'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:15:30, :18:30, :19:30]
  assign io_slave_arready = 1'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:13:20, :15:30, :18:30]
  assign io_slave_rvalid = 1'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:13:20, :15:30, :18:30]
  assign io_slave_rresp = 2'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:15:30, :18:30, :19:30]
  assign io_slave_rdata = 64'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:80:20]
  assign io_slave_rlast = 1'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:13:20, :15:30, :18:30]
  assign io_slave_rid = 4'h0;	// @[<stdin>:3102:10, CRRV/src/CRRVTop.scala:15:30, :18:30, :19:30]
endmodule

